import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,c,a as n,b as p,F as l,f as s,d as t,o as u}from"./app.005c29cc.js";const r={},i=s('<ul><li><a href="#3-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97">3. \u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#4-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE">4. \u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-1">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-1">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#5-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC">5. \u66FF\u6362\u7A7A\u683C</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-2">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-2">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#6-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8">6. \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-3">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-3">\u89E3\u9898\u601D\u8DEF</a><ul><li><a href="#%E4%BD%BF%E7%94%A8%E9%80%92%E5%BD%92">\u4F7F\u7528\u9012\u5F52</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E5%A4%B4%E6%8F%92%E6%B3%95">\u4F7F\u7528\u5934\u63D2\u6CD5</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E6%A0%88">\u4F7F\u7528\u6808</a></li></ul></li></ul></li><li><a href="#7-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91">7. \u91CD\u5EFA\u4E8C\u53C9\u6811</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-4">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-4">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#8-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E7%BB%93%E7%82%B9">8. \u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-5">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-5">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#9-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97">9. \u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-6">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-6">\u89E3\u9898\u601D\u8DEF</a></li></ul></li></ul><h1 id="_3-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_3-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57" aria-hidden="true">#</a> 3. \u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u5B57</h1>',2),k={href:"https://www.nowcoder.com/practice/623a5ac0ea5b4e5f95552655361ae0a8?tpId=13&tqId=11203&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},d=t("NowCoder"),b=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5728\u4E00\u4E2A\u957F\u5EA6\u4E3A n \u7684\u6570\u7EC4\u91CC\u7684\u6240\u6709\u6570\u5B57\u90FD\u5728 0 \u5230 n-1 \u7684\u8303\u56F4\u5185\u3002\u6570\u7EC4\u4E2D\u67D0\u4E9B\u6570\u5B57\u662F\u91CD\u590D\u7684\uFF0C\u4F46\u4E0D\u77E5\u9053\u6709\u51E0\u4E2A\u6570\u5B57\u662F\u91CD\u590D\u7684\uFF0C\u4E5F\u4E0D\u77E5\u9053\u6BCF\u4E2A\u6570\u5B57\u91CD\u590D\u51E0\u6B21\u3002\u8BF7\u627E\u51FA\u6570\u7EC4\u4E2D\u4EFB\u610F\u4E00\u4E2A\u91CD\u590D\u7684\u6570\u5B57\u3002</p><div class="language-html ext-html"><pre class="language-html"><code>Input:
{2, 3, 1, 0, 2, 5}

Output:
2
</code></pre></div><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6 O(N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)\u3002\u56E0\u6B64\u4E0D\u80FD\u4F7F\u7528\u6392\u5E8F\u7684\u65B9\u6CD5\uFF0C\u4E5F\u4E0D\u80FD\u4F7F\u7528\u989D\u5916\u7684\u6807\u8BB0\u6570\u7EC4\u3002</p><p>\u5BF9\u4E8E\u8FD9\u79CD\u6570\u7EC4\u5143\u7D20\u5728 [0, n-1] \u8303\u56F4\u5185\u7684\u95EE\u9898\uFF0C\u53EF\u4EE5\u5C06\u503C\u4E3A i \u7684\u5143\u7D20\u8C03\u6574\u5230\u7B2C i \u4E2A\u4F4D\u7F6E\u4E0A\u8FDB\u884C\u6C42\u89E3\u3002</p><p>\u4EE5 (2, 3, 1, 0, 2, 5) \u4E3A\u4F8B\uFF0C\u904D\u5386\u5230\u4F4D\u7F6E 4 \u65F6\uFF0C\u8BE5\u4F4D\u7F6E\u4E0A\u7684\u6570\u4E3A 2\uFF0C\u4F46\u662F\u7B2C 2 \u4E2A\u4F4D\u7F6E\u4E0A\u5DF2\u7ECF\u6709\u4E00\u4E2A 2 \u7684\u503C\u4E86\uFF0C\u56E0\u6B64\u53EF\u4EE5\u77E5\u9053 2 \u91CD\u590D\uFF1A</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/49d2adc1-b28a-44bf-babb-d44993f4a2e3.gif" width="250px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> duplication<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> length <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                duplication<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h1 id="_4-\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#_4-\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E" aria-hidden="true">#</a> 4. \u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u67E5\u627E</h1>`,11),m={href:"https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&tqId=11154&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},h=t("NowCoder"),g=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-1" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u5176\u6BCF\u4E00\u884C\u4ECE\u5DE6\u5230\u53F3\u9012\u589E\u6392\u5E8F\uFF0C\u4ECE\u4E0A\u5230\u4E0B\u4E5F\u662F\u9012\u589E\u6392\u5E8F\u3002\u7ED9\u5B9A\u4E00\u4E2A\u6570\uFF0C\u5224\u65AD\u8FD9\u4E2A\u6570\u662F\u5426\u5728\u8BE5\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u3002</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Consider the following matrix:
[
  [1,   4,  7, 11, 15],
  [2,   5,  8, 12, 19],
  [3,   6,  9, 16, 22],
  [10, 13, 14, 17, 24],
  [18, 21, 23, 26, 30]
]

Given target = 5, return true.
Given target = 20, return false.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u89E3\u9898\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-1" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u8981\u6C42\u65F6\u95F4\u590D\u6742\u5EA6 O(M + N)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6 O(1)\u3002\u5176\u4E2D M \u4E3A\u884C\u6570\uFF0CN \u4E3A \u5217\u6570\u3002</p><p>\u8BE5\u4E8C\u7EF4\u6570\u7EC4\u4E2D\u7684\u4E00\u4E2A\u6570\uFF0C\u5C0F\u4E8E\u5B83\u7684\u6570\u4E00\u5B9A\u5728\u5176\u5DE6\u8FB9\uFF0C\u5927\u4E8E\u5B83\u7684\u6570\u4E00\u5B9A\u5728\u5176\u4E0B\u8FB9\u3002\u56E0\u6B64\uFF0C\u4ECE\u53F3\u4E0A\u89D2\u5F00\u59CB\u67E5\u627E\uFF0C\u5C31\u53EF\u4EE5\u6839\u636E target \u548C\u5F53\u524D\u5143\u7D20\u7684\u5927\u5C0F\u5173\u7CFB\u6765\u7F29\u5C0F\u67E5\u627E\u533A\u95F4\uFF0C\u5F53\u524D\u5143\u7D20\u7684\u67E5\u627E\u533A\u95F4\u4E3A\u5DE6\u4E0B\u89D2\u7684\u6240\u6709\u5143\u7D20\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0ad9f7ba-f408-4999-a77a-9b73562c9088.gif" width="200px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token class-name">Find</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>matrix <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> matrix<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> rows <span class="token operator">=</span> matrix<span class="token punctuation">.</span>length<span class="token punctuation">,</span> cols <span class="token operator">=</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> c <span class="token operator">=</span> cols <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u53F3\u4E0A\u89D2\u5F00\u59CB</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;=</span> rows <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> c <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">==</span> matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span>
            r<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            c<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h1 id="_5-\u66FF\u6362\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#_5-\u66FF\u6362\u7A7A\u683C" aria-hidden="true">#</a> 5. \u66FF\u6362\u7A7A\u683C</h1>`,10),w={href:"https://www.nowcoder.com/practice/4060ac7e3e404ad1a894ef3e17650423?tpId=13&tqId=11155&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},f=t("NowCoder"),y=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-2" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-2" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\u7684\u7A7A\u683C\u66FF\u6362\u6210 &quot;%20&quot;\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>Input:
&quot;A B&quot;

Output:
&quot;A%20B&quot;
</code></pre></div><h2 id="\u89E3\u9898\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-2" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5728\u5B57\u7B26\u4E32\u5C3E\u90E8\u586B\u5145\u4EFB\u610F\u5B57\u7B26\uFF0C\u4F7F\u5F97\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u7B49\u4E8E\u66FF\u6362\u4E4B\u540E\u7684\u957F\u5EA6\u3002\u56E0\u4E3A\u4E00\u4E2A\u7A7A\u683C\u8981\u66FF\u6362\u6210\u4E09\u4E2A\u5B57\u7B26\uFF08%20\uFF09\uFF0C\u56E0\u6B64\u5F53\u904D\u5386\u5230\u4E00\u4E2A\u7A7A\u683C\u65F6\uFF0C\u9700\u8981\u5728\u5C3E\u90E8\u586B\u5145\u4E24\u4E2A\u4EFB\u610F\u5B57\u7B26\u3002</p><p>\u4EE4 P1 \u6307\u5411\u5B57\u7B26\u4E32\u539F\u6765\u7684\u672B\u5C3E\u4F4D\u7F6E\uFF0CP2 \u6307\u5411\u5B57\u7B26\u4E32\u73B0\u5728\u7684\u672B\u5C3E\u4F4D\u7F6E\u3002P1 \u548C P2 \u4ECE\u540E\u5411\u524D\u904D\u5386\uFF0C\u5F53 P1 \u904D\u5386\u5230\u4E00\u4E2A\u7A7A\u683C\u65F6\uFF0C\u5C31\u9700\u8981\u4EE4 P2 \u6307\u5411\u7684\u4F4D\u7F6E\u4F9D\u6B21\u586B\u5145 02%\uFF08\u6CE8\u610F\u662F\u9006\u5E8F\u7684\uFF09\uFF0C\u5426\u5219\u5C31\u586B\u5145\u4E0A P1 \u6307\u5411\u5B57\u7B26\u7684\u503C\u3002</p><p>\u4ECE\u540E\u5411\u524D\u904D\u662F\u4E3A\u4E86\u5728\u6539\u53D8 P2 \u6240\u6307\u5411\u7684\u5185\u5BB9\u65F6\uFF0C\u4E0D\u4F1A\u5F71\u54CD\u5230 P1 \u904D\u5386\u539F\u6765\u5B57\u7B26\u4E32\u7684\u5185\u5BB9\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/6980aef0-debe-4b4b-8da5-8b1befbc1408.gif" width="230px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span><span class="token class-name">StringBuffer</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> P1 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> P1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">)</span>
            str<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> P2 <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>P1 <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> P2 <span class="token operator">&gt;</span> P1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>P1<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span> <span class="token char">&#39;%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            str<span class="token punctuation">.</span><span class="token function">setCharAt</span><span class="token punctuation">(</span>P2<span class="token operator">--</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h1 id="_6-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#_6-\u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868" aria-hidden="true">#</a> 6. \u4ECE\u5C3E\u5230\u5934\u6253\u5370\u94FE\u8868</h1>`,11),E={href:"https://www.nowcoder.com/practice/d0267f7f55b3412ba93bd35cfa8e8035?tpId=13&tqId=11156&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},v=t("NowCoder"),A=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-3" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-3" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u4ECE\u5C3E\u5230\u5934\u53CD\u8FC7\u6765\u6253\u5370\u51FA\u6BCF\u4E2A\u7ED3\u70B9\u7684\u503C\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f5792051-d9b2-4ca4-a234-a4a2de3d5a57.png" width="280px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-3" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-3" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u4F7F\u7528\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u9012\u5F52" aria-hidden="true">#</a> \u4F7F\u7528\u9012\u5F52</h3><p>\u8981\u9006\u5E8F\u6253\u5370\u94FE\u8868 1-&gt;2-&gt;3\uFF083,2,1)\uFF0C\u53EF\u4EE5\u5148\u9006\u5E8F\u6253\u5370\u94FE\u8868 2-&gt;3(3,2)\uFF0C\u6700\u540E\u518D\u6253\u5370\u7B2C\u4E00\u4E2A\u8282\u70B9 1\u3002\u800C\u94FE\u8868 2-&gt;3 \u53EF\u4EE5\u770B\u6210\u4E00\u4E2A\u65B0\u7684\u94FE\u8868\uFF0C\u8981\u9006\u5E8F\u6253\u5370\u8BE5\u94FE\u8868\u53EF\u4EE5\u7EE7\u7EED\u4F7F\u7528\u6C42\u89E3\u51FD\u6570\uFF0C\u4E5F\u5C31\u662F\u5728\u6C42\u89E3\u51FD\u6570\u4E2D\u8C03\u7528\u81EA\u5DF1\uFF0C\u8FD9\u5C31\u662F\u9012\u5F52\u51FD\u6570\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">printListFromTailToHead</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> listNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ret<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token function">printListFromTailToHead</span><span class="token punctuation">(</span>listNode<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>listNode<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u4F7F\u7528\u5934\u63D2\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u5934\u63D2\u6CD5" aria-hidden="true">#</a> \u4F7F\u7528\u5934\u63D2\u6CD5</h3><p>\u4F7F\u7528\u5934\u63D2\u6CD5\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u9006\u5E8F\u7684\u94FE\u8868\u3002</p><p>\u5934\u7ED3\u70B9\u548C\u7B2C\u4E00\u4E2A\u8282\u70B9\u7684\u533A\u522B\uFF1A</p><ul><li>\u5934\u7ED3\u70B9\u662F\u5728\u5934\u63D2\u6CD5\u4E2D\u4F7F\u7528\u7684\u4E00\u4E2A\u989D\u5916\u8282\u70B9\uFF0C\u8FD9\u4E2A\u8282\u70B9\u4E0D\u5B58\u50A8\u503C\uFF1B</li><li>\u7B2C\u4E00\u4E2A\u8282\u70B9\u5C31\u662F\u94FE\u8868\u7684\u7B2C\u4E00\u4E2A\u771F\u6B63\u5B58\u50A8\u503C\u7684\u8282\u70B9\u3002</li></ul><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0dae7e93-cfd1-4bd3-97e8-325b032b716f.gif" width="370px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">printListFromTailToHead</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> listNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5934\u63D2\u6CD5\u6784\u5EFA\u9006\u5E8F\u94FE\u8868</span>
    <span class="token class-name">ListNode</span> head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>listNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> memo <span class="token operator">=</span> listNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        listNode<span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        head<span class="token punctuation">.</span>next <span class="token operator">=</span> listNode<span class="token punctuation">;</span>
        listNode <span class="token operator">=</span> memo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6784\u5EFA ArrayList</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>head <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        head <span class="token operator">=</span> head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="\u4F7F\u7528\u6808" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6808" aria-hidden="true">#</a> \u4F7F\u7528\u6808</h3><p>\u6808\u5177\u6709\u540E\u8FDB\u5148\u51FA\u7684\u7279\u70B9\uFF0C\u5728\u904D\u5386\u94FE\u8868\u65F6\u5C06\u503C\u6309\u987A\u5E8F\u653E\u5165\u6808\u4E2D\uFF0C\u6700\u540E\u51FA\u6808\u7684\u987A\u5E8F\u5373\u4E3A\u9006\u5E8F\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9d1deeba-4ae1-41dc-98f4-47d85b9831bc.gif" width="300px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">printListFromTailToHead</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> listNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>listNode <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stack<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>listNode<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        listNode <span class="token operator">=</span> listNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="_7-\u91CD\u5EFA\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#_7-\u91CD\u5EFA\u4E8C\u53C9\u6811" aria-hidden="true">#</a> 7. \u91CD\u5EFA\u4E8C\u53C9\u6811</h1>`,21),B={href:"https://www.nowcoder.com/practice/8a19cbe657394eeaac2f6ea9b0f6fcf6?tpId=13&tqId=11157&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},x=t("NowCoder"),_=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-4" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-4" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u6839\u636E\u4E8C\u53C9\u6811\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\uFF0C\u91CD\u5EFA\u51FA\u8BE5\u4E8C\u53C9\u6811\u3002\u5047\u8BBE\u8F93\u5165\u7684\u524D\u5E8F\u904D\u5386\u548C\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u4E2D\u90FD\u4E0D\u542B\u91CD\u590D\u7684\u6570\u5B57\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/31d9adce-2af8-4754-8386-0aabb4e500b0.png" width="300"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-4" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u524D\u5E8F\u904D\u5386\u7684\u7B2C\u4E00\u4E2A\u503C\u4E3A\u6839\u8282\u70B9\u7684\u503C\uFF0C\u4F7F\u7528\u8FD9\u4E2A\u503C\u5C06\u4E2D\u5E8F\u904D\u5386\u7ED3\u679C\u5206\u6210\u4E24\u90E8\u5206\uFF0C\u5DE6\u90E8\u5206\u4E3A\u6811\u7684\u5DE6\u5B50\u6811\u4E2D\u5E8F\u904D\u5386\u7ED3\u679C\uFF0C\u53F3\u90E8\u5206\u4E3A\u6811\u7684\u53F3\u5B50\u6811\u4E2D\u5E8F\u904D\u5386\u7684\u7ED3\u679C\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c269e362-1128-4212-9cf3-d4c12b363b2f.gif" width="330px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u7F13\u5B58\u4E2D\u5E8F\u904D\u5386\u6570\u7EC4\u6BCF\u4E2A\u503C\u5BF9\u5E94\u7684\u7D22\u5F15</span>
<span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> indexForInOrders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">TreeNode</span> <span class="token function">reConstructBinaryTree</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pre<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> in<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> in<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        indexForInOrders<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>in<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">reConstructBinaryTree</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pre<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">TreeNode</span> <span class="token function">reConstructBinaryTree</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pre<span class="token punctuation">,</span> <span class="token keyword">int</span> preL<span class="token punctuation">,</span> <span class="token keyword">int</span> preR<span class="token punctuation">,</span> <span class="token keyword">int</span> inL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>preL <span class="token operator">&gt;</span> preR<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>pre<span class="token punctuation">[</span>preL<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> inIndex <span class="token operator">=</span> indexForInOrders<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> leftTreeSize <span class="token operator">=</span> inIndex <span class="token operator">-</span> inL<span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">reConstructBinaryTree</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> preL <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> preL <span class="token operator">+</span> leftTreeSize<span class="token punctuation">,</span> inL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">reConstructBinaryTree</span><span class="token punctuation">(</span>pre<span class="token punctuation">,</span> preL <span class="token operator">+</span> leftTreeSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> preR<span class="token punctuation">,</span> inL <span class="token operator">+</span> leftTreeSize <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h1 id="_8-\u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9" tabindex="-1"><a class="header-anchor" href="#_8-\u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9" aria-hidden="true">#</a> 8. \u4E8C\u53C9\u6811\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9</h1>`,10),N={href:"https://www.nowcoder.com/practice/9023a0c988684a53960365b889ceaf5e?tpId=13&tqId=11210&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},F=t("NowCoder"),q=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-5" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-5" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u53C9\u6811\u548C\u5176\u4E2D\u7684\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u8BF7\u627E\u51FA\u4E2D\u5E8F\u904D\u5386\u987A\u5E8F\u7684\u4E0B\u4E00\u4E2A\u7ED3\u70B9\u5E76\u4E14\u8FD4\u56DE\u3002\u6CE8\u610F\uFF0C\u6811\u4E2D\u7684\u7ED3\u70B9\u4E0D\u4EC5\u5305\u542B\u5DE6\u53F3\u5B50\u7ED3\u70B9\uFF0C\u540C\u65F6\u5305\u542B\u6307\u5411\u7236\u7ED3\u70B9\u7684\u6307\u9488\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeLinkNode</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    <span class="token class-name">TreeLinkNode</span> left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeLinkNode</span> right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeLinkNode</span> next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token class-name">TreeLinkNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u89E3\u9898\u601D\u8DEF-5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-5" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u2460 \u5982\u679C\u4E00\u4E2A\u8282\u70B9\u7684\u53F3\u5B50\u6811\u4E0D\u4E3A\u7A7A\uFF0C\u90A3\u4E48\u8BE5\u8282\u70B9\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\u662F\u53F3\u5B50\u6811\u7684\u6700\u5DE6\u8282\u70B9\uFF1B</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/b0611f89-1e5f-4494-a795-3544bf65042a.gif" width="220px"></div><br><p>\u2461 \u5426\u5219\uFF0C\u5411\u4E0A\u627E\u7B2C\u4E00\u4E2A\u5DE6\u94FE\u63A5\u6307\u5411\u7684\u6811\u5305\u542B\u8BE5\u8282\u70B9\u7684\u7956\u5148\u8282\u70B9\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/95080fae-de40-463d-a76e-783a0c677fec.gif" width="200px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">TreeLinkNode</span> <span class="token class-name">GetNext</span><span class="token punctuation">(</span><span class="token class-name">TreeLinkNode</span> pNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pNode<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeLinkNode</span> node <span class="token operator">=</span> pNode<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            node <span class="token operator">=</span> node<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
        <span class="token keyword">return</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>pNode<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">TreeLinkNode</span> parent <span class="token operator">=</span> pNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>left <span class="token operator">==</span> pNode<span class="token punctuation">)</span>
                <span class="token keyword">return</span> parent<span class="token punctuation">;</span>
            pNode <span class="token operator">=</span> pNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h1 id="_9-\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#_9-\u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217" aria-hidden="true">#</a> 9. \u7528\u4E24\u4E2A\u6808\u5B9E\u73B0\u961F\u5217</h1>`,12),L={href:"https://www.nowcoder.com/practice/54275ddae22f475981afa2244dd448c6?tpId=13&tqId=11158&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},I=t("NowCoder"),j=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-6" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-6" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7528\u4E24\u4E2A\u6808\u6765\u5B9E\u73B0\u4E00\u4E2A\u961F\u5217\uFF0C\u5B8C\u6210\u961F\u5217\u7684 Push \u548C Pop \u64CD\u4F5C\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-6" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>in \u6808\u7528\u6765\u5904\u7406\u5165\u6808\uFF08push\uFF09\u64CD\u4F5C\uFF0Cout \u6808\u7528\u6765\u5904\u7406\u51FA\u6808\uFF08pop\uFF09\u64CD\u4F5C\u3002\u4E00\u4E2A\u5143\u7D20\u8FDB\u5165 in \u6808\u4E4B\u540E\uFF0C\u51FA\u6808\u7684\u987A\u5E8F\u88AB\u53CD\u8F6C\u3002\u5F53\u5143\u7D20\u8981\u51FA\u6808\u65F6\uFF0C\u9700\u8981\u5148\u8FDB\u5165 out \u6808\uFF0C\u6B64\u65F6\u5143\u7D20\u51FA\u6808\u987A\u5E8F\u518D\u4E00\u6B21\u88AB\u53CD\u8F6C\uFF0C\u56E0\u6B64\u51FA\u6808\u987A\u5E8F\u5C31\u548C\u6700\u5F00\u59CB\u5165\u6808\u987A\u5E8F\u662F\u76F8\u540C\u7684\uFF0C\u5148\u8FDB\u5165\u7684\u5143\u7D20\u5148\u9000\u51FA\uFF0C\u8FD9\u5C31\u662F\u961F\u5217\u7684\u987A\u5E8F\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/3ea280b5-be7d-471b-ac76-ff020384357c.gif" width="350"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">int</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    in<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>out<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>in<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            out<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>out<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;queue is empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> out<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,7);function T(P,C){const a=o("ExternalLinkIcon");return u(),c(l,null,[i,n("p",null,[n("a",k,[d,p(a)])]),b,n("p",null,[n("a",m,[h,p(a)])]),g,n("p",null,[n("a",w,[f,p(a)])]),y,n("p",null,[n("a",E,[v,p(a)])]),A,n("p",null,[n("a",B,[x,p(a)])]),_,n("p",null,[n("a",N,[F,p(a)])]),q,n("p",null,[n("a",L,[I,p(a)])]),j],64)}var S=e(r,[["render",T],["__file","\u5251\u6307Offer\u9898\u89E3-3~9.html.vue"]]);export{S as default};
