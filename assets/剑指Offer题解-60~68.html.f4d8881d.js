import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,c,a as n,b as p,F as l,f as s,d as t,o as r}from"./app.7d4bd0aa.js";const u={},i=s('<ul><li><a href="#60-n-%E4%B8%AA%E9%AA%B0%E5%AD%90%E7%9A%84%E7%82%B9%E6%95%B0">60. n \u4E2A\u9AB0\u5B50\u7684\u70B9\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF">\u89E3\u9898\u601D\u8DEF</a><ul><li><a href="#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">\u52A8\u6001\u89C4\u5212</a></li><li><a href="#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92--%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84">\u52A8\u6001\u89C4\u5212 + \u65CB\u8F6C\u6570\u7EC4</a></li></ul></li></ul></li><li><a href="#61-%E6%89%91%E5%85%8B%E7%89%8C%E9%A1%BA%E5%AD%90">61. \u6251\u514B\u724C\u987A\u5B50</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-1">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-1">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#62-%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0">62. \u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-2">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-2">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#63-%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6">63. \u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-3">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-3">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#64-%E6%B1%82-123n">64. \u6C42 1+2+3+...+n</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-4">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-4">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#65-%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95">65. \u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-5">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-5">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#66-%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84">66. \u6784\u5EFA\u4E58\u79EF\u6570\u7EC4</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-6">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-6">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#67-%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0">67. \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-7">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-7">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#68-%E6%A0%91%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E4%BD%8E%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88">68. \u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148</a><ul><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-8">\u89E3\u9898\u601D\u8DEF</a><ul><li><a href="#%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91">\u4E8C\u53C9\u67E5\u627E\u6811</a></li><li><a href="#%E6%99%AE%E9%80%9A%E4%BA%8C%E5%8F%89%E6%A0%91">\u666E\u901A\u4E8C\u53C9\u6811</a></li></ul></li></ul></li></ul><h1 id="_60-n-\u4E2A\u9AB0\u5B50\u7684\u70B9\u6570" tabindex="-1"><a class="header-anchor" href="#_60-n-\u4E2A\u9AB0\u5B50\u7684\u70B9\u6570" aria-hidden="true">#</a> 60. n \u4E2A\u9AB0\u5B50\u7684\u70B9\u6570</h1>',2),k={href:"https://www.lintcode.com/en/problem/dices-sum/",target:"_blank",rel:"noopener noreferrer"},d=t("Lintcode"),m=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u628A n \u4E2A\u9AB0\u5B50\u6254\u5728\u5730\u4E0A\uFF0C\u6C42\u70B9\u6570\u548C\u4E3A s \u7684\u6982\u7387\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/195f8693-5ec4-4987-8560-f25e365879dd.png" width="300px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h3><p>\u4F7F\u7528\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4 dp \u5B58\u50A8\u70B9\u6570\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u5176\u4E2D dp[i][j] \u8868\u793A\u524D i \u4E2A\u9AB0\u5B50\u4EA7\u751F\u70B9\u6570 j \u7684\u6B21\u6570\u3002</p><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(N<sup>2</sup>)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">dicesSum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> face <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> pointNum <span class="token operator">=</span> face <span class="token operator">*</span> n<span class="token punctuation">;</span>
    <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>pointNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> face<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> pointNum<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>     <span class="token comment">/* \u4F7F\u7528 i \u4E2A\u9AB0\u5B50\u6700\u5C0F\u70B9\u6570\u4E3A i */</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> face <span class="token operator">&amp;&amp;</span> k <span class="token operator">&lt;=</span> j<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> k<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token keyword">double</span> totalNum <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pointNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AbstractMap<span class="token punctuation">.</span>SimpleEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> totalNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u52A8\u6001\u89C4\u5212-\u65CB\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212-\u65CB\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212 + \u65CB\u8F6C\u6570\u7EC4</h3><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(N)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">dicesSum</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> face <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> pointNum <span class="token operator">=</span> face <span class="token operator">*</span> n<span class="token punctuation">;</span>
    <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span>pointNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> face<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                                     <span class="token comment">/* \u65CB\u8F6C\u6807\u8BB0 */</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> flag <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> pointNum<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            dp<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                          <span class="token comment">/* \u65CB\u8F6C\u6570\u7EC4\u6E05\u96F6 */</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> pointNum<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> face <span class="token operator">&amp;&amp;</span> k <span class="token operator">&lt;=</span> j<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                dp<span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">-</span> flag<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">final</span> <span class="token keyword">double</span> totalNum <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> pointNum<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AbstractMap<span class="token punctuation">.</span>SimpleEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> dp<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">-</span> flag<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">/</span> totalNum<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h1 id="_61-\u6251\u514B\u724C\u987A\u5B50" tabindex="-1"><a class="header-anchor" href="#_61-\u6251\u514B\u724C\u987A\u5B50" aria-hidden="true">#</a> 61. \u6251\u514B\u724C\u987A\u5B50</h1>`,13),b={href:"https://www.nowcoder.com/practice/762836f4d43d43ca9deb273b3de8e1f4?tpId=13&tqId=11198&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},h=t("NowCoder"),f=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-1" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u4E94\u5F20\u724C\uFF0C\u5176\u4E2D\u5927\u5C0F\u9B3C\u4E3A\u765E\u5B50\uFF0C\u724C\u9762\u4E3A 0\u3002\u5224\u65AD\u8FD9\u4E94\u5F20\u724C\u662F\u5426\u80FD\u7EC4\u6210\u987A\u5B50\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/eaa506b6-0747-4bee-81f8-3cda795d8154.png" width="350px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-1" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isContinuous</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7EDF\u8BA1\u765E\u5B50\u6570\u91CF</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            cnt<span class="token operator">++</span><span class="token punctuation">;</span>

    <span class="token comment">// \u4F7F\u7528\u765E\u5B50\u53BB\u8865\u5168\u4E0D\u8FDE\u7EED\u7684\u987A\u5B50</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> cnt<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        cnt <span class="token operator">-=</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> cnt <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h1 id="_62-\u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570" tabindex="-1"><a class="header-anchor" href="#_62-\u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570" aria-hidden="true">#</a> 62. \u5706\u5708\u4E2D\u6700\u540E\u5269\u4E0B\u7684\u6570</h1>`,7),w={href:"https://www.nowcoder.com/practice/f78a359491e64a50bce2d89cff857eb6?tpId=13&tqId=11199&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},E=t("NowCoder"),g=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-2" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-2" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8BA9\u5C0F\u670B\u53CB\u4EEC\u56F4\u6210\u4E00\u4E2A\u5927\u5708\u3002\u7136\u540E\uFF0C\u968F\u673A\u6307\u5B9A\u4E00\u4E2A\u6570 m\uFF0C\u8BA9\u7F16\u53F7\u4E3A 0 \u7684\u5C0F\u670B\u53CB\u5F00\u59CB\u62A5\u6570\u3002\u6BCF\u6B21\u558A\u5230 m-1 \u7684\u90A3\u4E2A\u5C0F\u670B\u53CB\u8981\u51FA\u5217\u5531\u9996\u6B4C\uFF0C\u7136\u540E\u53EF\u4EE5\u5728\u793C\u54C1\u7BB1\u4E2D\u4EFB\u610F\u7684\u6311\u9009\u793C\u7269\uFF0C\u5E76\u4E14\u4E0D\u518D\u56DE\u5230\u5708\u4E2D\uFF0C\u4ECE\u4ED6\u7684\u4E0B\u4E00\u4E2A\u5C0F\u670B\u53CB\u5F00\u59CB\uFF0C\u7EE7\u7EED 0...m-1 \u62A5\u6570 .... \u8FD9\u6837\u4E0B\u53BB .... \u76F4\u5230\u5269\u4E0B\u6700\u540E\u4E00\u4E2A\u5C0F\u670B\u53CB\uFF0C\u53EF\u4EE5\u4E0D\u7528\u8868\u6F14\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-2" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u7EA6\u745F\u592B\u73AF\uFF0C\u5706\u5708\u957F\u5EA6\u4E3A n \u7684\u89E3\u53EF\u4EE5\u770B\u6210\u957F\u5EA6\u4E3A n-1 \u7684\u89E3\u518D\u52A0\u4E0A\u62A5\u6570\u7684\u957F\u5EA6 m\u3002\u56E0\u4E3A\u662F\u5706\u5708\uFF0C\u6240\u4EE5\u6700\u540E\u9700\u8981\u5BF9 n \u53D6\u4F59\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">LastRemaining_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>     <span class="token comment">/* \u7279\u6B8A\u8F93\u5165\u7684\u5904\u7406 */</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>     <span class="token comment">/* \u9012\u5F52\u8FD4\u56DE\u6761\u4EF6 */</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">LastRemaining_Solution</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span> <span class="token operator">+</span> m<span class="token punctuation">)</span> <span class="token operator">%</span> n<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="_63-\u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6" tabindex="-1"><a class="header-anchor" href="#_63-\u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6" aria-hidden="true">#</a> 63. \u80A1\u7968\u7684\u6700\u5927\u5229\u6DA6</h1>`,6),y={href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/",target:"_blank",rel:"noopener noreferrer"},A=t("Leetcode"),_=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-3" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-3" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u53EF\u4EE5\u6709\u4E00\u6B21\u4E70\u5165\u548C\u4E00\u6B21\u5356\u51FA\uFF0C\u4E70\u5165\u5FC5\u987B\u5728\u524D\u3002\u6C42\u6700\u5927\u6536\u76CA\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/42661013-750f-420b-b3c1-437e9a11fb65.png" width="220px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-3" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-3" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4F7F\u7528\u8D2A\u5FC3\u7B56\u7565\uFF0C\u5047\u8BBE\u7B2C i \u8F6E\u8FDB\u884C\u5356\u51FA\u64CD\u4F5C\uFF0C\u4E70\u5165\u64CD\u4F5C\u4EF7\u683C\u5E94\u8BE5\u5728 i \u4E4B\u524D\u5E76\u4E14\u4EF7\u683C\u6700\u4F4E\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prices<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prices <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> prices<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> soFarMin <span class="token operator">=</span> prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxProfit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        soFarMin <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>soFarMin<span class="token punctuation">,</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        maxProfit <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxProfit<span class="token punctuation">,</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> soFarMin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> maxProfit<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="_64-\u6C42-1-2-3-n" tabindex="-1"><a class="header-anchor" href="#_64-\u6C42-1-2-3-n" aria-hidden="true">#</a> 64. \u6C42 1+2+3+...+n</h1>`,8),v={href:"https://www.nowcoder.com/practice/7a0da8fc483247ff8800059e12d7caf1?tpId=13&tqId=11200&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},B=t("NowCoder"),x=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-4" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-4" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u4E58\u9664\u6CD5\u3001for\u3001while\u3001if\u3001else\u3001switch\u3001case \u7B49\u5173\u952E\u5B57\u53CA\u6761\u4EF6\u5224\u65AD\u8BED\u53E5 A ? B : C\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-4" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4F7F\u7528\u9012\u5F52\u89E3\u6CD5\u6700\u91CD\u8981\u7684\u662F\u6307\u5B9A\u8FD4\u56DE\u6761\u4EF6\uFF0C\u4F46\u662F\u672C\u9898\u65E0\u6CD5\u76F4\u63A5\u4F7F\u7528 if \u8BED\u53E5\u6765\u6307\u5B9A\u8FD4\u56DE\u6761\u4EF6\u3002</p><p>\u6761\u4EF6\u4E0E &amp;&amp; \u5177\u6709\u77ED\u8DEF\u539F\u5219\uFF0C\u5373\u5728\u7B2C\u4E00\u4E2A\u6761\u4EF6\u8BED\u53E5\u4E3A false \u7684\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u53BB\u6267\u884C\u7B2C\u4E8C\u4E2A\u6761\u4EF6\u8BED\u53E5\u3002\u5229\u7528\u8FD9\u4E00\u7279\u6027\uFF0C\u5C06\u9012\u5F52\u7684\u8FD4\u56DE\u6761\u4EF6\u53D6\u975E\u7136\u540E\u4F5C\u4E3A &amp;&amp; \u7684\u7B2C\u4E00\u4E2A\u6761\u4EF6\u8BED\u53E5\uFF0C\u9012\u5F52\u7684\u4E3B\u4F53\u8F6C\u6362\u4E3A\u7B2C\u4E8C\u4E2A\u6761\u4EF6\u8BED\u53E5\uFF0C\u90A3\u4E48\u5F53\u9012\u5F52\u7684\u8FD4\u56DE\u6761\u4EF6\u4E3A true \u7684\u60C5\u51B5\u4E0B\u5C31\u4E0D\u4F1A\u6267\u884C\u9012\u5F52\u7684\u4E3B\u4F53\u90E8\u5206\uFF0C\u9012\u5F52\u8FD4\u56DE\u3002</p><p>\u672C\u9898\u7684\u9012\u5F52\u8FD4\u56DE\u6761\u4EF6\u4E3A n &lt;= 0\uFF0C\u53D6\u975E\u540E\u5C31\u662F n &gt; 0\uFF1B\u9012\u5F52\u7684\u4E3B\u4F53\u90E8\u5206\u4E3A sum += Sum_Solution(n - 1)\uFF0C\u8F6C\u6362\u4E3A\u6761\u4EF6\u8BED\u53E5\u540E\u5C31\u662F (sum += Sum_Solution(n - 1)) &gt; 0\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Sum_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> n<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">+=</span> <span class="token class-name">Sum_Solution</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="_65-\u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5" tabindex="-1"><a class="header-anchor" href="#_65-\u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5" aria-hidden="true">#</a> 65. \u4E0D\u7528\u52A0\u51CF\u4E58\u9664\u505A\u52A0\u6CD5</h1>`,8),j={href:"https://www.nowcoder.com/practice/59ac416b4b944300b617d4f7f111b215?tpId=13&tqId=11201&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},F=t("NowCoder"),q=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-5" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-5" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u6C42\u4E24\u4E2A\u6574\u6570\u4E4B\u548C\uFF0C\u8981\u6C42\u4E0D\u5F97\u4F7F\u7528 +\u3001-\u3001*\u3001/ \u56DB\u5219\u8FD0\u7B97\u7B26\u53F7\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-5" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>a ^ b \u8868\u793A\u6CA1\u6709\u8003\u8651\u8FDB\u4F4D\u7684\u60C5\u51B5\u4E0B\u4E24\u6570\u7684\u548C\uFF0C(a &amp; b) &lt;&lt; 1 \u5C31\u662F\u8FDB\u4F4D\u3002</p><p>\u9012\u5F52\u4F1A\u7EC8\u6B62\u7684\u539F\u56E0\u662F (a &amp; b) &lt;&lt; 1 \u6700\u53F3\u8FB9\u4F1A\u591A\u4E00\u4E2A 0\uFF0C\u90A3\u4E48\u7EE7\u7EED\u9012\u5F52\uFF0C\u8FDB\u4F4D\u6700\u53F3\u8FB9\u7684 0 \u4F1A\u6162\u6162\u589E\u591A\uFF0C\u6700\u540E\u8FDB\u4F4D\u4F1A\u53D8\u4E3A 0\uFF0C\u9012\u5F52\u7EC8\u6B62\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> b <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> a <span class="token operator">:</span> <span class="token class-name">Add</span><span class="token punctuation">(</span>a <span class="token operator">^</span> b<span class="token punctuation">,</span> <span class="token punctuation">(</span>a <span class="token operator">&amp;</span> b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="_66-\u6784\u5EFA\u4E58\u79EF\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_66-\u6784\u5EFA\u4E58\u79EF\u6570\u7EC4" aria-hidden="true">#</a> 66. \u6784\u5EFA\u4E58\u79EF\u6570\u7EC4</h1>`,7),N={href:"https://www.nowcoder.com/practice/94a4d381a68b47b7a8bed86f2975db46?tpId=13&tqId=11204&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},C=t("NowCoder"),D=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-6" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-6" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u7EC4 A[0, 1,..., n-1]\uFF0C\u8BF7\u6784\u5EFA\u4E00\u4E2A\u6570\u7EC4 B[0, 1,..., n-1]\uFF0C\u5176\u4E2D B \u4E2D\u7684\u5143\u7D20 B[i]=A[0]*A[1]*...*A[i-1]*A[i+1]*...*A[n-1]\u3002\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u9664\u6CD5\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4240a69f-4d51-4d16-b797-2dfe110f30bd.png" width="250px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-6" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token class-name">A</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token class-name">B</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> product <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> product <span class="token operator">*=</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token operator">++</span><span class="token punctuation">)</span>       <span class="token comment">/* \u4ECE\u5DE6\u5F80\u53F3\u7D2F\u4E58 */</span>
        <span class="token class-name">B</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> product<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> product <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> product <span class="token operator">*=</span> <span class="token class-name">A</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token operator">--</span><span class="token punctuation">)</span>  <span class="token comment">/* \u4ECE\u53F3\u5F80\u5DE6\u7D2F\u4E58 */</span>
        <span class="token class-name">B</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*=</span> product<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">B</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="_67-\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#_67-\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570" aria-hidden="true">#</a> 67. \u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u6574\u6570</h1>`,7),I={href:"https://www.nowcoder.com/practice/1277c681251b4372bdef344468e4f26e?tpId=13&tqId=11202&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},S=t("NowCoder"),L=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-7" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-7" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u4E00\u4E2A\u6574\u6570\uFF0C\u5B57\u7B26\u4E32\u4E0D\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u6570\u503C\u5219\u8FD4\u56DE 0\uFF0C\u8981\u6C42\u4E0D\u80FD\u4F7F\u7528\u5B57\u7B26\u4E32\u8F6C\u6362\u6574\u6570\u7684\u5E93\u51FD\u6570\u3002</p><div class="language-html ext-html"><pre class="language-html"><code>Iuput:
+2147483647
1a33

Output:
2147483647
0
</code></pre></div><h2 id="\u89E3\u9898\u601D\u8DEF-7" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-7" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">StrToInt</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> isNegative <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span> <span class="token operator">||</span> c <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">/* \u7B26\u53F7\u5224\u5B9A */</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">||</span> c <span class="token operator">&gt;</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">)</span>                <span class="token comment">/* \u975E\u6CD5\u8F93\u5165 */</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        ret <span class="token operator">=</span> ret <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token punctuation">(</span>c <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> isNegative <span class="token operator">?</span> <span class="token operator">-</span>ret <span class="token operator">:</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h1 id="_68-\u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148" tabindex="-1"><a class="header-anchor" href="#_68-\u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148" aria-hidden="true">#</a> 68. \u6811\u4E2D\u4E24\u4E2A\u8282\u70B9\u7684\u6700\u4F4E\u516C\u5171\u7956\u5148</h1><h2 id="\u89E3\u9898\u601D\u8DEF-8" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-8" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u4E8C\u53C9\u67E5\u627E\u6811" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u67E5\u627E\u6811" aria-hidden="true">#</a> \u4E8C\u53C9\u67E5\u627E\u6811</h3>`,8),M={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/description/",target:"_blank",rel:"noopener noreferrer"},T=t("Leetcode : 235. Lowest Common Ancestor of a Binary Search Tree"),P=s(`<p>\u4E8C\u53C9\u67E5\u627E\u6811\u4E2D\uFF0C\u4E24\u4E2A\u8282\u70B9 p, q \u7684\u516C\u5171\u7956\u5148 root \u6EE1\u8DB3 root.val &gt;= p.val &amp;&amp; root.val &lt;= q.val\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/047faac4-a368-4565-8331-2b66253080d3.jpg" width="220"></div><br><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">TreeNode</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span> p<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span> q<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> p<span class="token punctuation">.</span>val <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> q<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> p<span class="token punctuation">.</span>val <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> q<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u666E\u901A\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u666E\u901A\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u666E\u901A\u4E8C\u53C9\u6811</h3>`,5),z={href:"https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/",target:"_blank",rel:"noopener noreferrer"},O=t("Leetcode : 236. Lowest Common Ancestor of a Binary Tree"),V=s(`<p>\u5728\u5DE6\u53F3\u5B50\u6811\u4E2D\u67E5\u627E\u662F\u5426\u5B58\u5728 p \u6216\u8005 q\uFF0C\u5982\u679C p \u548C q \u5206\u522B\u5728\u4E24\u4E2A\u5B50\u6811\u4E2D\uFF0C\u90A3\u4E48\u5C31\u8BF4\u660E\u6839\u8282\u70B9\u5C31\u662F\u6700\u4F4E\u516C\u5171\u7956\u5148\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/d27c99f0-7881-4f2d-9675-c75cbdee3acd.jpg" width="250"></div><br><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">TreeNode</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span> p<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span> q<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> root <span class="token operator">==</span> p <span class="token operator">||</span> root <span class="token operator">==</span> q<span class="token punctuation">)</span>
        <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span> left <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span> right <span class="token operator">=</span> <span class="token function">lowestCommonAncestor</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> right <span class="token operator">:</span> right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> left <span class="token operator">:</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,4);function R(G,H){const a=e("ExternalLinkIcon");return r(),c(l,null,[i,n("p",null,[n("a",k,[d,p(a)])]),m,n("p",null,[n("a",b,[h,p(a)])]),f,n("p",null,[n("a",w,[E,p(a)])]),g,n("p",null,[n("a",y,[A,p(a)])]),_,n("p",null,[n("a",v,[B,p(a)])]),x,n("p",null,[n("a",j,[F,p(a)])]),q,n("p",null,[n("a",N,[C,p(a)])]),D,n("p",null,[n("a",I,[S,p(a)])]),L,n("p",null,[n("a",M,[T,p(a)])]),P,n("p",null,[n("a",z,[O,p(a)])]),V],64)}var Q=o(u,[["render",R],["__file","\u5251\u6307Offer\u9898\u89E3-60~68.html.vue"]]);export{Q as default};
