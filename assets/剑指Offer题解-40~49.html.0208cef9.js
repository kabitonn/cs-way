import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,c,a as n,b as p,F as l,f as s,d as t,o as u}from"./app.7d4bd0aa.js";const r={},i=s('<ul><li><a href="#40-%E6%9C%80%E5%B0%8F%E7%9A%84-K-%E4%B8%AA%E6%95%B0">40. \u6700\u5C0F\u7684 K \u4E2A\u6570</a><ul><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF">\u89E3\u9898\u601D\u8DEF</a><ul><li><a href="#%E5%BF%AB%E9%80%9F%E9%80%89%E6%8B%A9">\u5FEB\u901F\u9009\u62E9</a></li><li><a href="#%E5%A4%A7%E5%B0%8F%E4%B8%BA-K-%E7%9A%84%E6%9C%80%E5%B0%8F%E5%A0%86">\u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806</a></li></ul></li></ul></li><li><a href="#411-%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0">41.1 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-1">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#412-%E5%AD%97%E7%AC%A6%E6%B5%81%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6">41.2 \u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-1">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-2">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#42-%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C">42. \u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-2">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-3">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#43-%E4%BB%8E-1-%E5%88%B0-n-%E6%95%B4%E6%95%B0%E4%B8%AD-1-%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0">43. \u4ECE 1 \u5230 n \u6574\u6570\u4E2D 1 \u51FA\u73B0\u7684\u6B21\u6570</a><ul><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-4">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#44-%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97">44. \u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-3">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-5">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#45-%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0">45. \u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-4">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-6">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#46-%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2">46. \u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-5">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-7">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#47-%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC">47. \u793C\u7269\u7684\u6700\u5927\u4EF7\u503C</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-6">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-8">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#48-%E6%9C%80%E9%95%BF%E4%B8%8D%E5%90%AB%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2">48. \u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-7">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-9">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#49-%E4%B8%91%E6%95%B0">49. \u4E11\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-8">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-10">\u89E3\u9898\u601D\u8DEF</a></li></ul></li></ul><h1 id="_40-\u6700\u5C0F\u7684-k-\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#_40-\u6700\u5C0F\u7684-k-\u4E2A\u6570" aria-hidden="true">#</a> 40. \u6700\u5C0F\u7684 K \u4E2A\u6570</h1>',2),k={href:"https://www.nowcoder.com/practice/6a296eb82cf844ca8539b57c23e6e9bf?tpId=13&tqId=11182&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},b=t("NowCoder"),d=s(`<h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u5FEB\u901F\u9009\u62E9" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u9009\u62E9" aria-hidden="true">#</a> \u5FEB\u901F\u9009\u62E9</h3><ul><li>\u590D\u6742\u5EA6\uFF1AO(N) + O(1)</li><li>\u53EA\u6709\u5F53\u5141\u8BB8\u4FEE\u6539\u6570\u7EC4\u5143\u7D20\u65F6\u624D\u53EF\u4EE5\u4F7F\u7528</li></ul><p>\u5FEB\u901F\u6392\u5E8F\u7684 partition() \u65B9\u6CD5\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6574\u6570 j \u4F7F\u5F97 a[l..j-1] \u5C0F\u4E8E\u7B49\u4E8E a[j]\uFF0C\u4E14 a[j+1..h] \u5927\u4E8E\u7B49\u4E8E a[j]\uFF0C\u6B64\u65F6 a[j] \u5C31\u662F\u6570\u7EC4\u7684\u7B2C j \u5927\u5143\u7D20\u3002\u53EF\u4EE5\u5229\u7528\u8FD9\u4E2A\u7279\u6027\u627E\u51FA\u6570\u7EC4\u7684\u7B2C K \u4E2A\u5143\u7D20\uFF0C\u8FD9\u79CD\u627E\u7B2C K \u4E2A\u5143\u7D20\u7684\u7B97\u6CD5\u79F0\u4E3A\u5FEB\u901F\u9009\u62E9\u7B97\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">GetLeastNumbers_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ret <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">||</span> k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token function">findKthSmallest</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* findKthSmallest \u4F1A\u6539\u53D8\u6570\u7EC4\uFF0C\u4F7F\u5F97\u524D k \u4E2A\u6570\u90FD\u662F\u6700\u5C0F\u7684 k \u4E2A\u6570 */</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        ret<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findKthSmallest</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> k<span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> k<span class="token punctuation">)</span>
            h <span class="token operator">=</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            l <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">partition</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> p <span class="token operator">=</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">/* \u5207\u5206\u5143\u7D20 */</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">,</span> j <span class="token operator">=</span> h <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> h <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span><span class="token operator">++</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> p<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">!=</span> l <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span><span class="token operator">--</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> p<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> j<span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> j<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> t <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="\u5927\u5C0F\u4E3A-k-\u7684\u6700\u5C0F\u5806" tabindex="-1"><a class="header-anchor" href="#\u5927\u5C0F\u4E3A-k-\u7684\u6700\u5C0F\u5806" aria-hidden="true">#</a> \u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806</h3><ul><li>\u590D\u6742\u5EA6\uFF1AO(NlogK) + O(K)</li><li>\u7279\u522B\u9002\u5408\u5904\u7406\u6D77\u91CF\u6570\u636E</li></ul><p>\u5E94\u8BE5\u4F7F\u7528\u5927\u9876\u5806\u6765\u7EF4\u62A4\u6700\u5C0F\u5806\uFF0C\u800C\u4E0D\u80FD\u76F4\u63A5\u521B\u5EFA\u4E00\u4E2A\u5C0F\u9876\u5806\u5E76\u8BBE\u7F6E\u4E00\u4E2A\u5927\u5C0F\uFF0C\u4F01\u56FE\u8BA9\u5C0F\u9876\u5806\u4E2D\u7684\u5143\u7D20\u90FD\u662F\u6700\u5C0F\u5143\u7D20\u3002</p><p>\u7EF4\u62A4\u4E00\u4E2A\u5927\u5C0F\u4E3A K \u7684\u6700\u5C0F\u5806\u8FC7\u7A0B\u5982\u4E0B\uFF1A\u5728\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20\u4E4B\u540E\uFF0C\u5982\u679C\u5927\u9876\u5806\u7684\u5927\u5C0F\u5927\u4E8E K\uFF0C\u90A3\u4E48\u9700\u8981\u5C06\u5927\u9876\u5806\u7684\u5806\u9876\u5143\u7D20\u53BB\u9664\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">GetLeastNumbers_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> nums<span class="token punctuation">.</span>length <span class="token operator">||</span> k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> maxHeap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2 <span class="token operator">-</span> o1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        maxHeap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>maxHeap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> k<span class="token punctuation">)</span>
            maxHeap<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>maxHeap<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="_41-1-\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570" tabindex="-1"><a class="header-anchor" href="#_41-1-\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570" aria-hidden="true">#</a> 41.1 \u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570</h1>`,11),m={href:"https://www.nowcoder.com/practice/9be0172896bd43948f8a32fb954e1be1?tpId=13&tqId=11216&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},h=t("NowCoder"),w=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5982\u4F55\u5F97\u5230\u4E00\u4E2A\u6570\u636E\u6D41\u4E2D\u7684\u4E2D\u4F4D\u6570\uFF1F\u5982\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5947\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u4E4B\u540E\u4F4D\u4E8E\u4E2D\u95F4\u7684\u6570\u503C\u3002\u5982\u679C\u4ECE\u6570\u636E\u6D41\u4E2D\u8BFB\u51FA\u5076\u6570\u4E2A\u6570\u503C\uFF0C\u90A3\u4E48\u4E2D\u4F4D\u6570\u5C31\u662F\u6240\u6709\u6570\u503C\u6392\u5E8F\u4E4B\u540E\u4E2D\u95F4\u4E24\u4E2A\u6570\u7684\u5E73\u5747\u503C\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-1" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/* \u5927\u9876\u5806\uFF0C\u5B58\u50A8\u5DE6\u534A\u8FB9\u5143\u7D20 */</span>
<span class="token keyword">private</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2 <span class="token operator">-</span> o1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* \u5C0F\u9876\u5806\uFF0C\u5B58\u50A8\u53F3\u534A\u8FB9\u5143\u7D20\uFF0C\u5E76\u4E14\u53F3\u534A\u8FB9\u5143\u7D20\u90FD\u5927\u4E8E\u5DE6\u534A\u8FB9 */</span>
<span class="token keyword">private</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* \u5F53\u524D\u6570\u636E\u6D41\u8BFB\u5165\u7684\u5143\u7D20\u4E2A\u6570 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Insert</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* \u63D2\u5165\u8981\u4FDD\u8BC1\u4E24\u4E2A\u5806\u5B58\u4E8E\u5E73\u8861\u72B6\u6001 */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* N \u4E3A\u5076\u6570\u7684\u60C5\u51B5\u4E0B\u63D2\u5165\u5230\u53F3\u534A\u8FB9\u3002
         * \u56E0\u4E3A\u53F3\u534A\u8FB9\u5143\u7D20\u90FD\u8981\u5927\u4E8E\u5DE6\u534A\u8FB9\uFF0C\u4F46\u662F\u65B0\u63D2\u5165\u7684\u5143\u7D20\u4E0D\u4E00\u5B9A\u6BD4\u5DE6\u534A\u8FB9\u5143\u7D20\u6765\u7684\u5927\uFF0C
         * \u56E0\u6B64\u9700\u8981\u5148\u5C06\u5143\u7D20\u63D2\u5165\u5DE6\u534A\u8FB9\uFF0C\u7136\u540E\u5229\u7528\u5DE6\u534A\u8FB9\u4E3A\u5927\u9876\u5806\u7684\u7279\u70B9\uFF0C\u53D6\u51FA\u5806\u9876\u5143\u7D20\u5373\u4E3A\u6700\u5927\u5143\u7D20\uFF0C\u6B64\u65F6\u63D2\u5165\u53F3\u534A\u8FB9 */</span>
        left<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        right<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        right<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        left<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">N</span><span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token class-name">GetMedian</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> right<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h1 id="_41-2-\u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#_41-2-\u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26" aria-hidden="true">#</a> 41.2 \u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u4E0D\u91CD\u590D\u7684\u5B57\u7B26</h1>`,5),f={href:"https://www.nowcoder.com/practice/00de97733b8e4f97a3fb5c680ee10720?tpId=13&tqId=11207&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},y=t("NowCoder"),E=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-1" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u627E\u51FA\u5B57\u7B26\u6D41\u4E2D\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u3002\u4F8B\u5982\uFF0C\u5F53\u4ECE\u5B57\u7B26\u6D41\u4E2D\u53EA\u8BFB\u51FA\u524D\u4E24\u4E2A\u5B57\u7B26 &quot;go&quot; \u65F6\uFF0C\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u662F &quot;g&quot;\u3002\u5F53\u4ECE\u8BE5\u5B57\u7B26\u6D41\u4E2D\u8BFB\u51FA\u524D\u516D\u4E2A\u5B57\u7B26\u201Cgoogle&quot; \u65F6\uFF0C\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u7684\u5B57\u7B26\u662F &quot;l&quot;\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-2" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cnts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">Insert</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cnts<span class="token punctuation">[</span>ch<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> cnts<span class="token punctuation">[</span>queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
        queue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">char</span> <span class="token class-name">FirstAppearingOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token char">&#39;#&#39;</span> <span class="token operator">:</span> queue<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h1 id="_42-\u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C" tabindex="-1"><a class="header-anchor" href="#_42-\u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C" aria-hidden="true">#</a> 42. \u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C</h1>`,5),g={href:"https://www.nowcoder.com/practice/459bd355da1549fa8a49e350bf3df484?tpId=13&tqId=11183&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},A=t("NowCoder"),v=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-2" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-2" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>{6, -3, -2, 7, -15, 1, 2, 2}\uFF0C\u8FDE\u7EED\u5B50\u6570\u7EC4\u7684\u6700\u5927\u548C\u4E3A 8\uFF08\u4ECE\u7B2C 0 \u4E2A\u5F00\u59CB\uFF0C\u5230\u7B2C 3 \u4E2A\u4E3A\u6B62\uFF09\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-3" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-3" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">FindGreatestSumOfSubArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> greatestSum <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">;</span>
    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> val <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">=</span> sum <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">?</span> val <span class="token operator">:</span> sum <span class="token operator">+</span> val<span class="token punctuation">;</span>
        greatestSum <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>greatestSum<span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> greatestSum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h1 id="_43-\u4ECE-1-\u5230-n-\u6574\u6570\u4E2D-1-\u51FA\u73B0\u7684\u6B21\u6570" tabindex="-1"><a class="header-anchor" href="#_43-\u4ECE-1-\u5230-n-\u6574\u6570\u4E2D-1-\u51FA\u73B0\u7684\u6B21\u6570" aria-hidden="true">#</a> 43. \u4ECE 1 \u5230 n \u6574\u6570\u4E2D 1 \u51FA\u73B0\u7684\u6B21\u6570</h1>`,5),_={href:"https://www.nowcoder.com/practice/bd7f978302044eee894445e244c7eee6?tpId=13&tqId=11184&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},B=t("NowCoder"),x=s(`<h2 id="\u89E3\u9898\u601D\u8DEF-4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-4" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">NumberOf1Between1AndN_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> m <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> m <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> n <span class="token operator">/</span> m<span class="token punctuation">,</span> b <span class="token operator">=</span> n <span class="token operator">%</span> m<span class="token punctuation">;</span>
        cnt <span class="token operator">+=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span> <span class="token operator">*</span> m <span class="token operator">+</span> <span class="token punctuation">(</span>a <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> b <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,2),j={href:"https://leetcode.com/problems/number-of-digit-one/discuss/64381/4+-lines-O(log-n)-C++JavaPython",target:"_blank",rel:"noopener noreferrer"},F=t("Leetcode : 233. Number of Digit One"),I=s(`<h1 id="_44-\u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_44-\u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57" aria-hidden="true">#</a> 44. \u6570\u5B57\u5E8F\u5217\u4E2D\u7684\u67D0\u4E00\u4F4D\u6570\u5B57</h1><h2 id="\u9898\u76EE\u63CF\u8FF0-3" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-3" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u6570\u5B57\u4EE5 0123456789101112131415... \u7684\u683C\u5F0F\u5E8F\u5217\u5316\u5230\u4E00\u4E2A\u5B57\u7B26\u4E32\u4E2D\uFF0C\u6C42\u8FD9\u4E2A\u5B57\u7B26\u4E32\u7684\u7B2C index \u4F4D\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-5" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getDigitAtIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> place <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// 1 \u8868\u793A\u4E2A\u4F4D\uFF0C2 \u8868\u793A \u5341\u4F4D...</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> amount <span class="token operator">=</span> <span class="token function">getAmountOfPlace</span><span class="token punctuation">(</span>place<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> totalAmount <span class="token operator">=</span> amount <span class="token operator">*</span> place<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> totalAmount<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">getDigitAtIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> place<span class="token punctuation">)</span><span class="token punctuation">;</span>
        index <span class="token operator">-=</span> totalAmount<span class="token punctuation">;</span>
        place<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * place \u4F4D\u6570\u7684\u6570\u5B57\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u957F\u5EA6
 * 10, 90, 900, ...
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getAmountOfPlace</span><span class="token punctuation">(</span><span class="token keyword">int</span> place<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>place <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> place <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * place \u4F4D\u6570\u7684\u8D77\u59CB\u6570\u5B57
 * 0, 10, 100, ...
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getBeginNumberOfPlace</span><span class="token punctuation">(</span><span class="token keyword">int</span> place<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>place <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> place <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u5728 place \u4F4D\u6570\u7EC4\u6210\u7684\u5B57\u7B26\u4E32\u4E2D\uFF0C\u7B2C index \u4E2A\u6570
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">getDigitAtIndex</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> place<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> beginNumber <span class="token operator">=</span> <span class="token function">getBeginNumberOfPlace</span><span class="token punctuation">(</span>place<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> shiftNumber <span class="token operator">=</span> index <span class="token operator">/</span> place<span class="token punctuation">;</span>
    <span class="token class-name">String</span> number <span class="token operator">=</span> <span class="token punctuation">(</span>beginNumber <span class="token operator">+</span> shiftNumber<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> count <span class="token operator">=</span> index <span class="token operator">%</span> place<span class="token punctuation">;</span>
    <span class="token keyword">return</span> number<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h1 id="_45-\u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570" tabindex="-1"><a class="header-anchor" href="#_45-\u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570" aria-hidden="true">#</a> 45. \u628A\u6570\u7EC4\u6392\u6210\u6700\u5C0F\u7684\u6570</h1>`,6),q={href:"https://www.nowcoder.com/practice/8fecd3f8ba334add803bf2a06af1b993?tpId=13&tqId=11185&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},D=t("NowCoder"),N=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-4" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-4" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8F93\u5165\u4E00\u4E2A\u6B63\u6574\u6570\u6570\u7EC4\uFF0C\u628A\u6570\u7EC4\u91CC\u6240\u6709\u6570\u5B57\u62FC\u63A5\u8D77\u6765\u6392\u6210\u4E00\u4E2A\u6570\uFF0C\u6253\u5370\u80FD\u62FC\u63A5\u51FA\u7684\u6240\u6709\u6570\u5B57\u4E2D\u6700\u5C0F\u7684\u4E00\u4E2A\u3002\u4F8B\u5982\u8F93\u5165\u6570\u7EC4 {3\uFF0C32\uFF0C321}\uFF0C\u5219\u6253\u5370\u51FA\u8FD9\u4E09\u4E2A\u6570\u5B57\u80FD\u6392\u6210\u7684\u6700\u5C0F\u6570\u5B57\u4E3A 321323\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-6" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u53EF\u4EE5\u770B\u6210\u662F\u4E00\u4E2A\u6392\u5E8F\u95EE\u9898\uFF0C\u5728\u6BD4\u8F83\u4E24\u4E2A\u5B57\u7B26\u4E32 S1 \u548C S2 \u7684\u5927\u5C0F\u65F6\uFF0C\u5E94\u8BE5\u6BD4\u8F83\u7684\u662F S1+S2 \u548C S2+S1 \u7684\u5927\u5C0F\uFF0C\u5982\u679C S1+S2 &lt; S2+S1\uFF0C\u90A3\u4E48\u5E94\u8BE5\u628A S1 \u6392\u5728\u524D\u9762\uFF0C\u5426\u5219\u5E94\u8BE5\u628A S2 \u6392\u5728\u524D\u9762\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">PrintMinNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> numbers<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> numbers<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>s1 <span class="token operator">+</span> s2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>s2 <span class="token operator">+</span> s1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> ret <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> nums<span class="token punctuation">)</span>
        ret <span class="token operator">+=</span> str<span class="token punctuation">;</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h1 id="_46-\u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_46-\u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 46. \u628A\u6570\u5B57\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32</h1>`,6),S={href:"https://leetcode.com/problems/decode-ways/description/",target:"_blank",rel:"noopener noreferrer"},C=t("Leetcode"),L=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-5" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-5" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u5B57\uFF0C\u6309\u7167\u5982\u4E0B\u89C4\u5219\u7FFB\u8BD1\u6210\u5B57\u7B26\u4E32\uFF1A1 \u7FFB\u8BD1\u6210\u201Ca\u201D\uFF0C2 \u7FFB\u8BD1\u6210\u201Cb\u201D... 26 \u7FFB\u8BD1\u6210\u201Cz\u201D\u3002\u4E00\u4E2A\u6570\u5B57\u6709\u591A\u79CD\u7FFB\u8BD1\u53EF\u80FD\uFF0C\u4F8B\u5982 12258 \u4E00\u5171\u6709 5 \u79CD\uFF0C\u5206\u522B\u662F abbeh\uFF0Clbeh\uFF0Caveh\uFF0Cabyh\uFF0Clyh\u3002\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u8BA1\u7B97\u4E00\u4E2A\u6570\u5B57\u6709\u591A\u5C11\u79CD\u4E0D\u540C\u7684\u7FFB\u8BD1\u65B9\u6CD5\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-7" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-7" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numDecodings</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> one <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>one <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> two <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>two <span class="token operator">&lt;=</span> <span class="token number">26</span><span class="token punctuation">)</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h1 id="_47-\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C" tabindex="-1"><a class="header-anchor" href="#_47-\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C" aria-hidden="true">#</a> 47. \u793C\u7269\u7684\u6700\u5927\u4EF7\u503C</h1>`,5),P={href:"https://www.nowcoder.com/questionTerminal/72a99e28381a407991f2c96d8cb238ab",target:"_blank",rel:"noopener noreferrer"},O=t("NowCoder"),K=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-6" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-6" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5728\u4E00\u4E2A m*n \u7684\u68CB\u76D8\u7684\u6BCF\u4E00\u4E2A\u683C\u90FD\u653E\u6709\u4E00\u4E2A\u793C\u7269\uFF0C\u6BCF\u4E2A\u793C\u7269\u90FD\u6709\u4E00\u5B9A\u4EF7\u503C\uFF08\u5927\u4E8E 0\uFF09\u3002\u4ECE\u5DE6\u4E0A\u89D2\u5F00\u59CB\u62FF\u793C\u7269\uFF0C\u6BCF\u6B21\u5411\u53F3\u6216\u5411\u4E0B\u79FB\u52A8\u4E00\u683C\uFF0C\u76F4\u5230\u53F3\u4E0B\u89D2\u7ED3\u675F\u3002\u7ED9\u5B9A\u4E00\u4E2A\u68CB\u76D8\uFF0C\u6C42\u62FF\u5230\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C\u3002\u4F8B\u5982\uFF0C\u5BF9\u4E8E\u5982\u4E0B\u68CB\u76D8</p><div class="language-text ext-text"><pre class="language-text"><code>1    10   3    8
12   2    9    6
5    7    4    11
3    7    16   5
</code></pre></div><p>\u793C\u7269\u7684\u6700\u5927\u4EF7\u503C\u4E3A 1+12+5+7+7+16+5=53\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-8" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-8" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5E94\u8BE5\u7528\u52A8\u6001\u89C4\u5212\u6C42\u89E3\uFF0C\u800C\u4E0D\u662F\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF0C\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u8FC7\u4E8E\u590D\u6742\uFF0C\u4E0D\u662F\u6700\u4F18\u89E3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMost</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>values <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> values<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> values<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value <span class="token operator">:</span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h1 id="_48-\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_48-\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 48. \u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32</h1><h2 id="\u9898\u76EE\u63CF\u8FF0-7" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-7" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8F93\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF08\u53EA\u5305\u542B a~z \u7684\u5B57\u7B26\uFF09\uFF0C\u6C42\u5176\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u3002\u4F8B\u5982\u5BF9\u4E8E arabcacfr\uFF0C\u6700\u957F\u4E0D\u542B\u91CD\u590D\u5B57\u7B26\u7684\u5B50\u5B57\u7B26\u4E32\u4E3A acfr\uFF0C\u957F\u5EA6\u4E3A 4\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-9" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-9" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">longestSubStringWithoutDuplication</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> curLen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> maxLen <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> preIndexs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>preIndexs<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> curI <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> curI <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> curI<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>curI<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> preI <span class="token operator">=</span> preIndexs<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>preI <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> curI <span class="token operator">-</span> preI <span class="token operator">&gt;</span> curLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            curLen<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            maxLen <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxLen<span class="token punctuation">,</span> curLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
            curLen <span class="token operator">=</span> curI <span class="token operator">-</span> preI<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        preIndexs<span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> curI<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    maxLen <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>maxLen<span class="token punctuation">,</span> curLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> maxLen<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h1 id="_49-\u4E11\u6570" tabindex="-1"><a class="header-anchor" href="#_49-\u4E11\u6570" aria-hidden="true">#</a> 49. \u4E11\u6570</h1>`,13),M={href:"https://www.nowcoder.com/practice/6aa9e04fc3794f68acf8778237ba065b?tpId=13&tqId=11186&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},Q=t("NowCoder"),G=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-8" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-8" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u628A\u53EA\u5305\u542B\u56E0\u5B50 2\u30013 \u548C 5 \u7684\u6570\u79F0\u4F5C\u4E11\u6570\uFF08Ugly Number\uFF09\u3002\u4F8B\u5982 6\u30018 \u90FD\u662F\u4E11\u6570\uFF0C\u4F46 14 \u4E0D\u662F\uFF0C\u56E0\u4E3A\u5B83\u5305\u542B\u56E0\u5B50 7\u3002\u4E60\u60EF\u4E0A\u6211\u4EEC\u628A 1 \u5F53\u505A\u662F\u7B2C\u4E00\u4E2A\u4E11\u6570\u3002\u6C42\u6309\u4ECE\u5C0F\u5230\u5927\u7684\u987A\u5E8F\u7684\u7B2C N \u4E2A\u4E11\u6570\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-10" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-10" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">GetUglyNumber_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">N</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">N</span> <span class="token operator">&lt;=</span> <span class="token number">6</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token class-name">N</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> next2 <span class="token operator">=</span> dp<span class="token punctuation">[</span>i2<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> next3 <span class="token operator">=</span> dp<span class="token punctuation">[</span>i3<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> next5 <span class="token operator">=</span> dp<span class="token punctuation">[</span>i5<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">;</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>next2<span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>next3<span class="token punctuation">,</span> next5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> next2<span class="token punctuation">)</span>
            i2<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> next3<span class="token punctuation">)</span>
            i3<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> next5<span class="token punctuation">)</span>
            i5<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,4);function H(V,z){const a=o("ExternalLinkIcon");return u(),c(l,null,[i,n("p",null,[n("a",k,[b,p(a)])]),d,n("p",null,[n("a",m,[h,p(a)])]),w,n("p",null,[n("a",f,[y,p(a)])]),E,n("p",null,[n("a",g,[A,p(a)])]),v,n("p",null,[n("a",_,[B,p(a)])]),x,n("blockquote",null,[n("p",null,[n("a",j,[F,p(a)])])]),I,n("p",null,[n("a",q,[D,p(a)])]),N,n("p",null,[n("a",S,[C,p(a)])]),L,n("p",null,[n("a",P,[O,p(a)])]),K,n("p",null,[n("a",M,[Q,p(a)])]),G],64)}var J=e(r,[["render",H],["__file","\u5251\u6307Offer\u9898\u89E3-40~49.html.vue"]]);export{J as default};
