import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,c,a as n,b as p,F as l,f as s,d as t,o as u}from"./app.005c29cc.js";const r={},i=s('<ul><li><a href="#101-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97">10.1 \u6590\u6CE2\u90A3\u5951\u6570\u5217</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#102-%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96">10.2 \u77E9\u5F62\u8986\u76D6</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-1">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-1">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#103-%E8%B7%B3%E5%8F%B0%E9%98%B6">10.3 \u8DF3\u53F0\u9636</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-2">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-2">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#104-%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6">10.4 \u53D8\u6001\u8DF3\u53F0\u9636</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-3">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-3">\u89E3\u9898\u601D\u8DEF</a><ul><li><a href="#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">\u52A8\u6001\u89C4\u5212</a></li><li><a href="#%E6%95%B0%E5%AD%A6%E6%8E%A8%E5%AF%BC">\u6570\u5B66\u63A8\u5BFC</a></li></ul></li></ul></li><li><a href="#11-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97">11. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-4">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-4">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#12-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84">12. \u77E9\u9635\u4E2D\u7684\u8DEF\u5F84</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-5">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-5">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#13-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4">13. \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-6">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-6">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#14-%E5%89%AA%E7%BB%B3%E5%AD%90">14. \u526A\u7EF3\u5B50</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-7">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-7">\u89E3\u9898\u601D\u8DEF</a><ul><li><a href="#%E8%B4%AA%E5%BF%83">\u8D2A\u5FC3</a></li><li><a href="#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-1">\u52A8\u6001\u89C4\u5212</a></li></ul></li></ul></li><li><a href="#15-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD-1-%E7%9A%84%E4%B8%AA%E6%95%B0">15. \u4E8C\u8FDB\u5236\u4E2D 1 \u7684\u4E2A\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-8">\u9898\u76EE\u63CF\u8FF0</a><ul><li><a href="#nn-1">n&amp;(n-1)</a></li><li><a href="#IntegerbitCount">Integer.bitCount()</a></li></ul></li></ul></li><li><a href="#16-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9">16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-9">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-8">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#17-%E6%89%93%E5%8D%B0%E4%BB%8E-1-%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84-n-%E4%BD%8D%E6%95%B0">17. \u6253\u5370\u4ECE 1 \u5230\u6700\u5927\u7684 n \u4F4D\u6570</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-10">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-9">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#181-%E5%9C%A8-O1-%E6%97%B6%E9%97%B4%E5%86%85%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9">18.1 \u5728 O(1) \u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9</a><ul><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-10">\u89E3\u9898\u601D\u8DEF</a></li></ul></li><li><a href="#182-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9">18.2 \u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-11">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%8F%8F%E8%BF%B0">\u89E3\u9898\u63CF\u8FF0</a></li></ul></li><li><a href="#19-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D">19. \u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D</a><ul><li><a href="#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0-12">\u9898\u76EE\u63CF\u8FF0</a></li><li><a href="#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-11">\u89E3\u9898\u601D\u8DEF</a></li></ul></li></ul><h1 id="_10-1-\u6590\u6CE2\u90A3\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#_10-1-\u6590\u6CE2\u90A3\u5951\u6570\u5217" aria-hidden="true">#</a> 10.1 \u6590\u6CE2\u90A3\u5951\u6570\u5217</h1>',2),k={href:"https://www.nowcoder.com/practice/c6c7742f5ba7442aada113136ddea0c3?tpId=13&tqId=11160&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},d=t("NowCoder"),b=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u6C42\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u7B2C n \u9879\uFF0Cn &lt;= 39\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/45be9587-6069-4ab7-b9ac-840db1a53744.jpg" width="300px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5982\u679C\u4F7F\u7528\u9012\u5F52\u6C42\u89E3\uFF0C\u4F1A\u91CD\u590D\u8BA1\u7B97\u4E00\u4E9B\u5B50\u95EE\u9898\u3002\u4F8B\u5982\uFF0C\u8BA1\u7B97 f(4) \u9700\u8981\u8BA1\u7B97 f(3) \u548C f(2)\uFF0C\u8BA1\u7B97 f(3) \u9700\u8981\u8BA1\u7B97 f(2) \u548C f(1)\uFF0C\u53EF\u4EE5\u770B\u5230 f(2) \u88AB\u91CD\u590D\u8BA1\u7B97\u4E86\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c13e2a3d-b01c-4a08-a69b-db2c4e821e09.png" width="350px"></div><br><p>\u9012\u5F52\u662F\u5C06\u4E00\u4E2A\u95EE\u9898\u5212\u5206\u6210\u591A\u4E2A\u5B50\u95EE\u9898\u6C42\u89E3\uFF0C\u52A8\u6001\u89C4\u5212\u4E5F\u662F\u5982\u6B64\uFF0C\u4F46\u662F\u52A8\u6001\u89C4\u5212\u4F1A\u628A\u5B50\u95EE\u9898\u7684\u89E3\u7F13\u5B58\u8D77\u6765\uFF0C\u4ECE\u800C\u907F\u514D\u91CD\u590D\u6C42\u89E3\u5B50\u95EE\u9898\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fib <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    fib<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        fib<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> fib<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8003\u8651\u5230\u7B2C i \u9879\u53EA\u4E0E\u7B2C i-1 \u548C\u7B2C i-2 \u9879\u6709\u5173\uFF0C\u56E0\u6B64\u53EA\u9700\u8981\u5B58\u50A8\u524D\u4E24\u9879\u7684\u503C\u5C31\u80FD\u6C42\u89E3\u7B2C i \u9879\uFF0C\u4ECE\u800C\u5C06\u7A7A\u95F4\u590D\u6742\u5EA6\u7531 O(N) \u964D\u4F4E\u4E3A O(1)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> pre2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> pre1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> fib <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fib <span class="token operator">=</span> pre2 <span class="token operator">+</span> pre1<span class="token punctuation">;</span>
        pre2 <span class="token operator">=</span> pre1<span class="token punctuation">;</span>
        pre1 <span class="token operator">=</span> fib<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> fib<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u7531\u4E8E\u5F85\u6C42\u89E3\u7684 n \u5C0F\u4E8E 40\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5C06\u524D 40 \u9879\u7684\u7ED3\u679C\u5148\u8FDB\u884C\u8BA1\u7B97\uFF0C\u4E4B\u540E\u5C31\u80FD\u4EE5 O(1) \u65F6\u95F4\u590D\u6742\u5EA6\u5F97\u5230\u7B2C n \u9879\u7684\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fib <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fib<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fib<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            fib<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> fib<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fib<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h1 id="_10-2-\u77E9\u5F62\u8986\u76D6" tabindex="-1"><a class="header-anchor" href="#_10-2-\u77E9\u5F62\u8986\u76D6" aria-hidden="true">#</a> 10.2 \u77E9\u5F62\u8986\u76D6</h1>`,15),m={href:"https://www.nowcoder.com/practice/72a5a919508a4251859fb2cfb987a0e6?tpId=13&tqId=11163&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},h=t("NowCoder"),w=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-1" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u6211\u4EEC\u53EF\u4EE5\u7528 2*1 \u7684\u5C0F\u77E9\u5F62\u6A2A\u7740\u6216\u8005\u7AD6\u7740\u53BB\u8986\u76D6\u66F4\u5927\u7684\u77E9\u5F62\u3002\u8BF7\u95EE\u7528 n \u4E2A 2*1 \u7684\u5C0F\u77E9\u5F62\u65E0\u91CD\u53E0\u5730\u8986\u76D6\u4E00\u4E2A 2*n \u7684\u5927\u77E9\u5F62\uFF0C\u603B\u5171\u6709\u591A\u5C11\u79CD\u65B9\u6CD5\uFF1F</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/b903fda8-07d0-46a7-91a7-e803892895cf.gif" width="100px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-1" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5F53 n \u4E3A 1 \u65F6\uFF0C\u53EA\u6709\u4E00\u79CD\u8986\u76D6\u65B9\u6CD5\uFF1A</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/f6e146f1-57ad-411b-beb3-770a142164ef.png" width="100px"></div><br><p>\u5F53 n \u4E3A 2 \u65F6\uFF0C\u6709\u4E24\u79CD\u8986\u76D6\u65B9\u6CD5\uFF1A</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/fb3b8f7a-4293-4a38-aae1-62284db979a3.png" width="200px"></div><br><p>\u8981\u8986\u76D6 2*n \u7684\u5927\u77E9\u5F62\uFF0C\u53EF\u4EE5\u5148\u8986\u76D6 2*1 \u7684\u77E9\u5F62\uFF0C\u518D\u8986\u76D6 2*(n-1) \u7684\u77E9\u5F62\uFF1B\u6216\u8005\u5148\u8986\u76D6 2*2 \u7684\u77E9\u5F62\uFF0C\u518D\u8986\u76D6 2*(n-2) \u7684\u77E9\u5F62\u3002\u800C\u8986\u76D6 2*(n-1) \u548C 2*(n-2) \u7684\u77E9\u5F62\u53EF\u4EE5\u770B\u6210\u5B50\u95EE\u9898\u3002\u8BE5\u95EE\u9898\u7684\u9012\u63A8\u516C\u5F0F\u5982\u4E0B\uFF1A</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/508c6e52-9f93-44ed-b6b9-e69050e14807.jpg" width="350px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">RectCover</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> pre2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> pre1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> pre2 <span class="token operator">+</span> pre1<span class="token punctuation">;</span>
        pre2 <span class="token operator">=</span> pre1<span class="token punctuation">;</span>
        pre1 <span class="token operator">=</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h1 id="_10-3-\u8DF3\u53F0\u9636" tabindex="-1"><a class="header-anchor" href="#_10-3-\u8DF3\u53F0\u9636" aria-hidden="true">#</a> 10.3 \u8DF3\u53F0\u9636</h1>`,16),y={href:"https://www.nowcoder.com/practice/8c82a5b80378478f9484d87d1c5f12a4?tpId=13&tqId=11161&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},f=t("NowCoder"),g=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-2" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-2" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A 1 \u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A 2 \u7EA7\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2A n \u7EA7\u7684\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/9dae7475-934f-42e5-b3b3-12724337170a.png" width="380px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-2" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-2" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5F53 n = 1 \u65F6\uFF0C\u53EA\u6709\u4E00\u79CD\u8DF3\u6CD5\uFF1A</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/72aac98a-d5df-4bfa-a71a-4bb16a87474c.png" width="250px"></div><br><p>\u5F53 n = 2 \u65F6\uFF0C\u6709\u4E24\u79CD\u8DF3\u6CD5\uFF1A</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1b80288d-1b35-4cd3-aa17-7e27ab9a2389.png" width="300px"></div><br><p>\u8DF3 n \u9636\u53F0\u9636\uFF0C\u53EF\u4EE5\u5148\u8DF3 1 \u9636\u53F0\u9636\uFF0C\u518D\u8DF3 n-1 \u9636\u53F0\u9636\uFF1B\u6216\u8005\u5148\u8DF3 2 \u9636\u53F0\u9636\uFF0C\u518D\u8DF3 n-2 \u9636\u53F0\u9636\u3002\u800C n-1 \u548C n-2 \u9636\u53F0\u9636\u7684\u8DF3\u6CD5\u53EF\u4EE5\u770B\u6210\u5B50\u95EE\u9898\uFF0C\u8BE5\u95EE\u9898\u7684\u9012\u63A8\u516C\u5F0F\u4E3A\uFF1A</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/508c6e52-9f93-44ed-b6b9-e69050e14807.jpg" width="350px"></div><br><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">JumpFloor</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> pre2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> pre1 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> pre2 <span class="token operator">+</span> pre1<span class="token punctuation">;</span>
        pre2 <span class="token operator">=</span> pre1<span class="token punctuation">;</span>
        pre1 <span class="token operator">=</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h1 id="_10-4-\u53D8\u6001\u8DF3\u53F0\u9636" tabindex="-1"><a class="header-anchor" href="#_10-4-\u53D8\u6001\u8DF3\u53F0\u9636" aria-hidden="true">#</a> 10.4 \u53D8\u6001\u8DF3\u53F0\u9636</h1>`,16),v={href:"https://www.nowcoder.com/practice/22243d016f6b47f2a6928b4313c85387?tpId=13&tqId=11162&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},E=t("NowCoder"),x=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-3" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-3" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u4E00\u53EA\u9752\u86D9\u4E00\u6B21\u53EF\u4EE5\u8DF3\u4E0A 1 \u7EA7\u53F0\u9636\uFF0C\u4E5F\u53EF\u4EE5\u8DF3\u4E0A 2 \u7EA7... \u5B83\u4E5F\u53EF\u4EE5\u8DF3\u4E0A n \u7EA7\u3002\u6C42\u8BE5\u9752\u86D9\u8DF3\u4E0A\u4E00\u4E2A n \u7EA7\u7684\u53F0\u9636\u603B\u5171\u6709\u591A\u5C11\u79CD\u8DF3\u6CD5\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/cd411a94-3786-4c94-9e08-f28320e010d5.png" width="380px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-3" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-3" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">JumpFloorII</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> target<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>target <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6570\u5B66\u63A8\u5BFC" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B66\u63A8\u5BFC" aria-hidden="true">#</a> \u6570\u5B66\u63A8\u5BFC</h3><p>\u8DF3\u4E0A n-1 \u7EA7\u53F0\u9636\uFF0C\u53EF\u4EE5\u4ECE n-2 \u7EA7\u8DF3 1 \u7EA7\u4E0A\u53BB\uFF0C\u4E5F\u53EF\u4EE5\u4ECE n-3 \u7EA7\u8DF3 2 \u7EA7\u4E0A\u53BB...\uFF0C\u90A3\u4E48</p><div class="language-text ext-text"><pre class="language-text"><code>f(n-1) = f(n-2) + f(n-3) + ... + f(0)
</code></pre></div><p>\u540C\u6837\uFF0C\u8DF3\u4E0A n \u7EA7\u53F0\u9636\uFF0C\u53EF\u4EE5\u4ECE n-1 \u7EA7\u8DF3 1 \u7EA7\u4E0A\u53BB\uFF0C\u4E5F\u53EF\u4EE5\u4ECE n-2 \u7EA7\u8DF3 2 \u7EA7\u4E0A\u53BB... \uFF0C\u90A3\u4E48</p><div class="language-text ext-text"><pre class="language-text"><code>f(n) = f(n-1) + f(n-2) + ... + f(0)
</code></pre></div><p>\u7EFC\u4E0A\u53EF\u5F97</p><div class="language-text ext-text"><pre class="language-text"><code>f(n) - f(n-1) = f(n-1)
</code></pre></div><p>\u5373</p><div class="language-text ext-text"><pre class="language-text"><code>f(n) = 2*f(n-1)
</code></pre></div><p>\u6240\u4EE5 f(n) \u662F\u4E00\u4E2A\u7B49\u6BD4\u6570\u5217</p><div class="language-source-java ext-source-java"><pre class="language-source-java"><code>public int JumpFloorII(int target) {
    return (int) Math.pow(2, target - 1);
}
</code></pre></div><h1 id="_11-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57" tabindex="-1"><a class="header-anchor" href="#_11-\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57" aria-hidden="true">#</a> 11. \u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u6570\u5B57</h1>`,19),A={href:"https://www.nowcoder.com/practice/9f3231a991af4f55b95579b44b7a01ba?tpId=13&tqId=11159&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},_=t("NowCoder"),B=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-4" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-4" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u628A\u4E00\u4E2A\u6570\u7EC4\u6700\u5F00\u59CB\u7684\u82E5\u5E72\u4E2A\u5143\u7D20\u642C\u5230\u6570\u7EC4\u7684\u672B\u5C3E\uFF0C\u6211\u4EEC\u79F0\u4E4B\u4E3A\u6570\u7EC4\u7684\u65CB\u8F6C\u3002\u8F93\u5165\u4E00\u4E2A\u975E\u9012\u51CF\u6392\u5E8F\u7684\u6570\u7EC4\u7684\u4E00\u4E2A\u65CB\u8F6C\uFF0C\u8F93\u51FA\u65CB\u8F6C\u6570\u7EC4\u7684\u6700\u5C0F\u5143\u7D20\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/0038204c-4b8a-42a5-921d-080f6674f989.png" width="210px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-4" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-4" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5C06\u65CB\u8F6C\u6570\u7EC4\u5BF9\u534A\u5206\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u5305\u542B\u6700\u5C0F\u5143\u7D20\u7684\u65B0\u65CB\u8F6C\u6570\u7EC4\uFF0C\u4EE5\u53CA\u4E00\u4E2A\u975E\u9012\u51CF\u6392\u5E8F\u7684\u6570\u7EC4\u3002\u65B0\u7684\u65CB\u8F6C\u6570\u7EC4\u7684\u6570\u7EC4\u5143\u7D20\u662F\u539F\u6570\u7EC4\u7684\u4E00\u534A\uFF0C\u4ECE\u800C\u5C06\u95EE\u9898\u89C4\u6A21\u51CF\u5C11\u4E86\u4E00\u534A\uFF0C\u8FD9\u79CD\u6298\u534A\u6027\u8D28\u7684\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logN)\uFF08\u4E3A\u4E86\u65B9\u4FBF\uFF0C\u8FD9\u91CC\u5C06 log<sub>2</sub>N \u5199\u4E3A logN\uFF09\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/424f34ab-a9fd-49a6-9969-d76b42251365.png" width="300px"></div><br><p>\u6B64\u65F6\u95EE\u9898\u7684\u5173\u952E\u5728\u4E8E\u786E\u5B9A\u5BF9\u534A\u5206\u5F97\u5230\u7684\u4E24\u4E2A\u6570\u7EC4\u54EA\u4E00\u4E2A\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u54EA\u4E00\u4E2A\u662F\u975E\u9012\u51CF\u6570\u7EC4\u3002\u6211\u4EEC\u5F88\u5BB9\u6613\u77E5\u9053\u975E\u9012\u51CF\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E00\u5B9A\u5C0F\u4E8E\u7B49\u4E8E\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002</p><p>\u901A\u8FC7\u4FEE\u6539\u4E8C\u5206\u67E5\u627E\u7B97\u6CD5\u8FDB\u884C\u6C42\u89E3\uFF08l \u4EE3\u8868 low\uFF0Cm \u4EE3\u8868 mid\uFF0Ch \u4EE3\u8868 high\uFF09\uFF1A</p><ul><li>\u5F53 nums[m] &lt;= nums[h] \u65F6\uFF0C\u8868\u793A [m, h] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u975E\u9012\u51CF\u6570\u7EC4\uFF0C[l, m] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u6B64\u65F6\u4EE4 h = m\uFF1B</li><li>\u5426\u5219 [m + 1, h] \u533A\u95F4\u5185\u7684\u6570\u7EC4\u662F\u65CB\u8F6C\u6570\u7EC4\uFF0C\u4EE4 l = m + 1\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minNumberInRotateArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5982\u679C\u6570\u7EC4\u5143\u7D20\u5141\u8BB8\u91CD\u590D\uFF0C\u4F1A\u51FA\u73B0\u4E00\u4E2A\u7279\u6B8A\u7684\u60C5\u51B5\uFF1Anums[l] == nums[m] == nums[h]\uFF0C\u6B64\u65F6\u65E0\u6CD5\u786E\u5B9A\u89E3\u5728\u54EA\u4E2A\u533A\u95F4\uFF0C\u9700\u8981\u5207\u6362\u5230\u987A\u5E8F\u67E5\u627E\u3002\u4F8B\u5982\u5BF9\u4E8E\u6570\u7EC4 {1,1,1,0,1}\uFF0Cl\u3001m \u548C h \u6307\u5411\u7684\u6570\u90FD\u4E3A 1\uFF0C\u6B64\u65F6\u65E0\u6CD5\u77E5\u9053\u6700\u5C0F\u6570\u5B57 0 \u5728\u54EA\u4E2A\u533A\u95F4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minNumberInRotateArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> h <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>h <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">==</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token function">minNumber</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> l<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">)</span>
            h <span class="token operator">=</span> m<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            l <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">minNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> l<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> h<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h1 id="_12-\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#_12-\u77E9\u9635\u4E2D\u7684\u8DEF\u5F84" aria-hidden="true">#</a> 12. \u77E9\u9635\u4E2D\u7684\u8DEF\u5F84</h1>`,15),j={href:"https://www.nowcoder.com/practice/c61c6999eecb4b8f88a98f66b273a3cc?tpId=13&tqId=11218&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},F=t("NowCoder"),q=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-5" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-5" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5224\u65AD\u5728\u4E00\u4E2A\u77E9\u9635\u4E2D\u662F\u5426\u5B58\u5728\u4E00\u6761\u5305\u542B\u67D0\u5B57\u7B26\u4E32\u6240\u6709\u5B57\u7B26\u7684\u8DEF\u5F84\u3002\u8DEF\u5F84\u53EF\u4EE5\u4ECE\u77E9\u9635\u4E2D\u7684\u4EFB\u610F\u4E00\u4E2A\u683C\u5B50\u5F00\u59CB\uFF0C\u6BCF\u4E00\u6B65\u53EF\u4EE5\u5728\u77E9\u9635\u4E2D\u5411\u4E0A\u4E0B\u5DE6\u53F3\u79FB\u52A8\u4E00\u4E2A\u683C\u5B50\u3002\u5982\u679C\u4E00\u6761\u8DEF\u5F84\u7ECF\u8FC7\u4E86\u77E9\u9635\u4E2D\u7684\u67D0\u4E00\u4E2A\u683C\u5B50\uFF0C\u5219\u8BE5\u8DEF\u5F84\u4E0D\u80FD\u518D\u8FDB\u5165\u8BE5\u683C\u5B50\u3002</p><p>\u4F8B\u5982\u4E0B\u9762\u7684\u77E9\u9635\u5305\u542B\u4E86\u4E00\u6761 bfce \u8DEF\u5F84\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1db1c7ea-0443-478b-8df9-7e33b1336cc4.png" width="200px"></div><br><h2 id="\u89E3\u9898\u601D\u8DEF-5" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-5" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4F7F\u7528\u56DE\u6EAF\u6CD5\uFF08backtracking\uFF09\u8FDB\u884C\u6C42\u89E3\uFF0C\u5B83\u662F\u4E00\u79CD\u66B4\u529B\u641C\u7D22\u65B9\u6CD5\uFF0C\u901A\u8FC7\u641C\u7D22\u6240\u6709\u53EF\u80FD\u7684\u7ED3\u679C\u6765\u6C42\u89E3\u95EE\u9898\u3002\u56DE\u6EAF\u6CD5\u5728\u4E00\u6B21\u641C\u7D22\u7ED3\u675F\u65F6\u9700\u8981\u8FDB\u884C\u56DE\u6EAF\uFF08\u56DE\u9000\uFF09\uFF0C\u5C06\u8FD9\u4E00\u6B21\u641C\u7D22\u8FC7\u7A0B\u4E2D\u8BBE\u7F6E\u7684\u72B6\u6001\u8FDB\u884C\u6E05\u9664\uFF0C\u4ECE\u800C\u5F00\u59CB\u4E00\u6B21\u65B0\u7684\u641C\u7D22\u8FC7\u7A0B\u3002\u4F8B\u5982\u4E0B\u56FE\u793A\u4F8B\u4E2D\uFF0C\u4ECE f \u5F00\u59CB\uFF0C\u4E0B\u4E00\u6B65\u6709 4 \u79CD\u641C\u7D22\u53EF\u80FD\uFF0C\u5982\u679C\u5148\u641C\u7D22 b\uFF0C\u9700\u8981\u5C06 b \u6807\u8BB0\u4E3A\u5DF2\u7ECF\u4F7F\u7528\uFF0C\u9632\u6B62\u91CD\u590D\u4F7F\u7528\u3002\u5728\u8FD9\u4E00\u6B21\u641C\u7D22\u7ED3\u675F\u4E4B\u540E\uFF0C\u9700\u8981\u5C06 b \u7684\u5DF2\u7ECF\u4F7F\u7528\u72B6\u6001\u6E05\u9664\uFF0C\u5E76\u641C\u7D22 c\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/dc964b86-7a08-4bde-a3d9-e6ddceb29f98.png" width="200px"></div><br><p>\u672C\u9898\u7684\u8F93\u5165\u662F\u6570\u7EC4\u800C\u4E0D\u662F\u77E9\u9635\uFF08\u4E8C\u7EF4\u6570\u7EC4\uFF09\uFF0C\u56E0\u6B64\u9700\u8981\u5148\u5C06\u6570\u7EC4\u8F6C\u6362\u6210\u77E9\u9635\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> next <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> rows<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> cols<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">hasPath</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> rows<span class="token punctuation">,</span> <span class="token keyword">int</span> cols<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rows <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> cols <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>rows <span class="token operator">=</span> rows<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cols <span class="token operator">=</span> cols<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix <span class="token operator">=</span> <span class="token function">buildMatrix</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cols<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">backtracking</span><span class="token punctuation">(</span>matrix<span class="token punctuation">,</span> str<span class="token punctuation">,</span> marked<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">backtracking</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token punctuation">,</span>
                             <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked<span class="token punctuation">,</span> <span class="token keyword">int</span> pathLen<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>pathLen <span class="token operator">==</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> r <span class="token operator">&gt;=</span> rows <span class="token operator">||</span> c <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> c <span class="token operator">&gt;=</span> cols
            <span class="token operator">||</span> matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">!=</span> str<span class="token punctuation">[</span>pathLen<span class="token punctuation">]</span> <span class="token operator">||</span> marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> n <span class="token operator">:</span> next<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">backtracking</span><span class="token punctuation">(</span>matrix<span class="token punctuation">,</span> str<span class="token punctuation">,</span> marked<span class="token punctuation">,</span> pathLen <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">buildMatrix</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> r <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> r<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> c <span class="token operator">&lt;</span> cols<span class="token punctuation">;</span> c<span class="token operator">++</span><span class="token punctuation">)</span>
            matrix<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>idx<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> matrix<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h1 id="_13-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#_13-\u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4" aria-hidden="true">#</a> 13. \u673A\u5668\u4EBA\u7684\u8FD0\u52A8\u8303\u56F4</h1>`,12),N={href:"https://www.nowcoder.com/practice/6e5207314b5241fb83f2329e89fdecc8?tpId=13&tqId=11219&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},D=t("NowCoder"),I=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-6" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-6" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u5730\u4E0A\u6709\u4E00\u4E2A m \u884C\u548C n \u5217\u7684\u65B9\u683C\u3002\u4E00\u4E2A\u673A\u5668\u4EBA\u4ECE\u5750\u6807 (0, 0) \u7684\u683C\u5B50\u5F00\u59CB\u79FB\u52A8\uFF0C\u6BCF\u4E00\u6B21\u53EA\u80FD\u5411\u5DE6\u53F3\u4E0A\u4E0B\u56DB\u4E2A\u65B9\u5411\u79FB\u52A8\u4E00\u683C\uFF0C\u4F46\u662F\u4E0D\u80FD\u8FDB\u5165\u884C\u5750\u6807\u548C\u5217\u5750\u6807\u7684\u6570\u4F4D\u4E4B\u548C\u5927\u4E8E k \u7684\u683C\u5B50\u3002</p><p>\u4F8B\u5982\uFF0C\u5F53 k \u4E3A 18 \u65F6\uFF0C\u673A\u5668\u4EBA\u80FD\u591F\u8FDB\u5165\u65B9\u683C (35,37)\uFF0C\u56E0\u4E3A 3+5+3+7=18\u3002\u4F46\u662F\uFF0C\u5B83\u4E0D\u80FD\u8FDB\u5165\u65B9\u683C (35,38)\uFF0C\u56E0\u4E3A 3+5+3+8=19\u3002\u8BF7\u95EE\u8BE5\u673A\u5668\u4EBA\u80FD\u591F\u8FBE\u5230\u591A\u5C11\u4E2A\u683C\u5B50\uFF1F</p><h2 id="\u89E3\u9898\u601D\u8DEF-6" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-6" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\uFF08Depth First Search\uFF0CDFS\uFF09\u65B9\u6CD5\u8FDB\u884C\u6C42\u89E3\u3002\u56DE\u6EAF\u662F\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u7684\u4E00\u79CD\u7279\u4F8B\uFF0C\u5B83\u5728\u4E00\u6B21\u641C\u7D22\u8FC7\u7A0B\u4E2D\u9700\u8981\u8BBE\u7F6E\u4E00\u4E9B\u672C\u6B21\u641C\u7D22\u8FC7\u7A0B\u7684\u5C40\u90E8\u72B6\u6001\uFF0C\u5E76\u5728\u672C\u6B21\u641C\u7D22\u7ED3\u675F\u4E4B\u540E\u6E05\u9664\u72B6\u6001\u3002\u800C\u666E\u901A\u7684\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u5E76\u4E0D\u9700\u8981\u4F7F\u7528\u8FD9\u4E9B\u5C40\u90E8\u72B6\u6001\uFF0C\u867D\u7136\u8FD8\u662F\u6709\u53EF\u80FD\u8BBE\u7F6E\u4E00\u4E9B\u5168\u5C40\u72B6\u6001\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> next <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> rows<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> cols<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> threshold<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digitSum<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">movingCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> threshold<span class="token punctuation">,</span> <span class="token keyword">int</span> rows<span class="token punctuation">,</span> <span class="token keyword">int</span> cols<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>rows <span class="token operator">=</span> rows<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cols <span class="token operator">=</span> cols<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>threshold <span class="token operator">=</span> threshold<span class="token punctuation">;</span>
    <span class="token function">initDigitSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>marked<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> marked<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> r <span class="token operator">&gt;=</span> rows <span class="token operator">||</span> c <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> c <span class="token operator">&gt;=</span> cols <span class="token operator">||</span> marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    marked<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>digitSum<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>threshold<span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    cnt<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> n <span class="token operator">:</span> next<span class="token punctuation">)</span>
        <span class="token function">dfs</span><span class="token punctuation">(</span>marked<span class="token punctuation">,</span> r <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> c <span class="token operator">+</span> n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initDigitSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> digitSumOne <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>rows<span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> digitSumOne<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            digitSumOne<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
            n <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>digitSum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>rows<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>rows<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cols<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>digitSum<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> digitSumOne<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> digitSumOne<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h1 id="_14-\u526A\u7EF3\u5B50" tabindex="-1"><a class="header-anchor" href="#_14-\u526A\u7EF3\u5B50" aria-hidden="true">#</a> 14. \u526A\u7EF3\u5B50</h1>`,7),O={href:"https://leetcode.com/problems/integer-break/description/",target:"_blank",rel:"noopener noreferrer"},C=t("Leetcode"),z=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-7" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-7" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u628A\u4E00\u6839\u7EF3\u5B50\u526A\u6210\u591A\u6BB5\uFF0C\u5E76\u4E14\u4F7F\u5F97\u6BCF\u6BB5\u7684\u957F\u5EA6\u4E58\u79EF\u6700\u5927\u3002</p><div class="language-html ext-html"><pre class="language-html"><code>n = 2
return 1 (2 = 1 + 1)

n = 10
return 36 (10 = 3 + 3 + 4)
</code></pre></div><h2 id="\u89E3\u9898\u601D\u8DEF-7" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-7" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><h3 id="\u8D2A\u5FC3" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3" aria-hidden="true">#</a> \u8D2A\u5FC3</h3><p>\u5C3D\u53EF\u80FD\u591A\u526A\u957F\u5EA6\u4E3A 3 \u7684\u7EF3\u5B50\uFF0C\u5E76\u4E14\u4E0D\u5141\u8BB8\u6709\u957F\u5EA6\u4E3A 1 \u7684\u7EF3\u5B50\u51FA\u73B0\u3002\u5982\u679C\u51FA\u73B0\u4E86\uFF0C\u5C31\u4ECE\u5DF2\u7ECF\u5207\u597D\u957F\u5EA6\u4E3A 3 \u7684\u7EF3\u5B50\u4E2D\u62FF\u51FA\u4E00\u6BB5\u4E0E\u957F\u5EA6\u4E3A 1 \u7684\u7EF3\u5B50\u91CD\u65B0\u7EC4\u5408\uFF0C\u628A\u5B83\u4EEC\u5207\u6210\u4E24\u6BB5\u957F\u5EA6\u4E3A 2 \u7684\u7EF3\u5B50\u3002</p><p>\u8BC1\u660E\uFF1A\u5F53 n &gt;= 5 \u65F6\uFF0C3(n - 3) - n = 2n - 9 &gt; 0\uFF0C\u4E14 2(n - 2) - n = n - 4 &gt; 0\u3002\u56E0\u6B64\u5728 n &gt;= 5 \u7684\u60C5\u51B5\u4E0B\uFF0C\u5C06\u7EF3\u5B50\u526A\u6210\u4E00\u6BB5\u4E3A 2 \u6216\u8005 3\uFF0C\u5F97\u5230\u7684\u4E58\u79EF\u4F1A\u66F4\u5927\u3002\u53C8\u56E0\u4E3A 3(n - 3) - 2(n - 2) = n - 5 &gt;= 0\uFF0C\u6240\u4EE5\u526A\u6210\u4E00\u6BB5\u957F\u5EA6\u4E3A 3 \u6BD4\u957F\u5EA6\u4E3A 2 \u5F97\u5230\u7684\u4E58\u79EF\u66F4\u5927\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">integerBreak</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> timesOf3 <span class="token operator">=</span> n <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> timesOf3 <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        timesOf3<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> timesOf2 <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> timesOf3 <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> timesOf3<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> timesOf2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u52A8\u6001\u89C4\u5212-1" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212-1" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">integerBreak</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>j <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="_15-\u4E8C\u8FDB\u5236\u4E2D-1-\u7684\u4E2A\u6570" tabindex="-1"><a class="header-anchor" href="#_15-\u4E8C\u8FDB\u5236\u4E2D-1-\u7684\u4E2A\u6570" aria-hidden="true">#</a> 15. \u4E8C\u8FDB\u5236\u4E2D 1 \u7684\u4E2A\u6570</h1>`,11),S={href:"https://www.nowcoder.com/practice/8ee967e43c2c4ec193b040ea7fbb10b8?tpId=13&tqId=11164&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},L=t("NowCoder"),M=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-8" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-8" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8F93\u5165\u4E00\u4E2A\u6574\u6570\uFF0C\u8F93\u51FA\u8BE5\u6570\u4E8C\u8FDB\u5236\u8868\u793A\u4E2D 1 \u7684\u4E2A\u6570\u3002</p><h3 id="n-n-1" tabindex="-1"><a class="header-anchor" href="#n-n-1" aria-hidden="true">#</a> n&amp;(n-1)</h3><p>\u8BE5\u4F4D\u8FD0\u7B97\u53BB\u9664 n \u7684\u4F4D\u7EA7\u8868\u793A\u4E2D\u6700\u4F4E\u7684\u90A3\u4E00\u4F4D\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>n       : 10110100
n-1     : 10110011
n&amp;(n-1) : 10110000
</code></pre></div><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(M)\uFF0C\u5176\u4E2D M \u8868\u793A 1 \u7684\u4E2A\u6570\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">NumberOf1</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>n <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cnt<span class="token operator">++</span><span class="token punctuation">;</span>
        n <span class="token operator">&amp;=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> cnt<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="integer-bitcount" tabindex="-1"><a class="header-anchor" href="#integer-bitcount" aria-hidden="true">#</a> Integer.bitCount()</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token class-name">NumberOf1</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">bitCount</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="_16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" tabindex="-1"><a class="header-anchor" href="#_16-\u6570\u503C\u7684\u6574\u6570\u6B21\u65B9" aria-hidden="true">#</a> 16. \u6570\u503C\u7684\u6574\u6570\u6B21\u65B9</h1>`,10),P={href:"https://www.nowcoder.com/practice/1a834e5e3e1a4b7ba251417554e07c00?tpId=13&tqId=11165&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},H=t("NowCoder"),T=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-9" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-9" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u7ED9\u5B9A\u4E00\u4E2A double \u7C7B\u578B\u7684\u6D6E\u70B9\u6570 base \u548C int \u7C7B\u578B\u7684\u6574\u6570 exponent\uFF0C\u6C42 base \u7684 exponent \u6B21\u65B9\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-8" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-8" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u4E0B\u9762\u7684\u8BA8\u8BBA\u4E2D x \u4EE3\u8868 base\uFF0Cn \u4EE3\u8868 exponent\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/48b1d459-8832-4e92-938a-728aae730739.jpg" width="330px"></div><br><p>\u56E0\u4E3A (x*x)<sup>n/2</sup> \u53EF\u4EE5\u901A\u8FC7\u9012\u5F52\u6C42\u89E3\uFF0C\u5E76\u4E14\u6BCF\u6B21\u9012\u5F52 n \u90FD\u51CF\u5C0F\u4E00\u534A\uFF0C\u56E0\u6B64\u6574\u4E2A\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(logN)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token class-name">Power</span><span class="token punctuation">(</span><span class="token keyword">double</span> base<span class="token punctuation">,</span> <span class="token keyword">int</span> exponent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> base<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> isNegative <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        exponent <span class="token operator">=</span> <span class="token operator">-</span>exponent<span class="token punctuation">;</span>
        isNegative <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">double</span> pow <span class="token operator">=</span> <span class="token class-name">Power</span><span class="token punctuation">(</span>base <span class="token operator">*</span> base<span class="token punctuation">,</span> exponent <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exponent <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        pow <span class="token operator">=</span> pow <span class="token operator">*</span> base<span class="token punctuation">;</span>
    <span class="token keyword">return</span> isNegative <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">/</span> pow <span class="token operator">:</span> pow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h1 id="_17-\u6253\u5370\u4ECE-1-\u5230\u6700\u5927\u7684-n-\u4F4D\u6570" tabindex="-1"><a class="header-anchor" href="#_17-\u6253\u5370\u4ECE-1-\u5230\u6700\u5927\u7684-n-\u4F4D\u6570" aria-hidden="true">#</a> 17. \u6253\u5370\u4ECE 1 \u5230\u6700\u5927\u7684 n \u4F4D\u6570</h1><h2 id="\u9898\u76EE\u63CF\u8FF0-10" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-10" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8F93\u5165\u6570\u5B57 n\uFF0C\u6309\u987A\u5E8F\u6253\u5370\u51FA\u4ECE 1 \u5230\u6700\u5927\u7684 n \u4F4D\u5341\u8FDB\u5236\u6570\u3002\u6BD4\u5982\u8F93\u5165 3\uFF0C\u5219\u6253\u5370\u51FA 1\u30012\u30013 \u4E00\u76F4\u5230\u6700\u5927\u7684 3 \u4F4D\u6570\u5373 999\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-9" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-9" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u7531\u4E8E n \u53EF\u80FD\u4F1A\u975E\u5E38\u5927\uFF0C\u56E0\u6B64\u4E0D\u80FD\u76F4\u63A5\u7528 int \u8868\u793A\u6570\u5B57\uFF0C\u800C\u662F\u7528 char \u6570\u7EC4\u8FDB\u884C\u5B58\u50A8\u3002</p><p>\u4F7F\u7528\u56DE\u6EAF\u6CD5\u5F97\u5230\u6240\u6709\u7684\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">print1ToMaxOfNDigits</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">print1ToMaxOfNDigits</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">print1ToMaxOfNDigits</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number<span class="token punctuation">,</span> <span class="token keyword">int</span> digit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>digit <span class="token operator">==</span> number<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printNumber</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        number<span class="token punctuation">[</span>digit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">print1ToMaxOfNDigits</span><span class="token punctuation">(</span>number<span class="token punctuation">,</span> digit <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">printNumber</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> number<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> number<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span>
        index<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> number<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>number<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h1 id="_18-1-\u5728-o-1-\u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#_18-1-\u5728-o-1-\u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9" aria-hidden="true">#</a> 18.1 \u5728 O(1) \u65F6\u95F4\u5185\u5220\u9664\u94FE\u8868\u8282\u70B9</h1><h2 id="\u89E3\u9898\u601D\u8DEF-10" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-10" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u2460 \u5982\u679C\u8BE5\u8282\u70B9\u4E0D\u662F\u5C3E\u8282\u70B9\uFF0C\u90A3\u4E48\u53EF\u4EE5\u76F4\u63A5\u5C06\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u503C\u8D4B\u7ED9\u8BE5\u8282\u70B9\uFF0C\u7136\u540E\u4EE4\u8BE5\u8282\u70B9\u6307\u5411\u4E0B\u4E0B\u4E2A\u8282\u70B9\uFF0C\u518D\u5220\u9664\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/1176f9e1-3442-4808-a47a-76fbaea1b806.png" width="600"></div><br><p>\u2461 \u5426\u5219\uFF0C\u5C31\u9700\u8981\u5148\u904D\u5386\u94FE\u8868\uFF0C\u627E\u5230\u8282\u70B9\u7684\u524D\u4E00\u4E2A\u8282\u70B9\uFF0C\u7136\u540E\u8BA9\u524D\u4E00\u4E2A\u8282\u70B9\u6307\u5411 null\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\u3002</p><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/4bf8d0ba-36f0-459e-83a0-f15278a5a157.png" width="600"></div><br><p>\u7EFC\u4E0A\uFF0C\u5982\u679C\u8FDB\u884C N \u6B21\u64CD\u4F5C\uFF0C\u90A3\u4E48\u5927\u7EA6\u9700\u8981\u64CD\u4F5C\u8282\u70B9\u7684\u6B21\u6570\u4E3A N-1+N=2N-1\uFF0C\u5176\u4E2D N-1 \u8868\u793A N-1 \u4E2A\u4E0D\u662F\u5C3E\u8282\u70B9\u7684\u6BCF\u4E2A\u8282\u70B9\u4EE5 O(1) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u64CD\u4F5C\u8282\u70B9\u7684\u603B\u6B21\u6570\uFF0CN \u8868\u793A 1 \u4E2A\u5C3E\u8282\u70B9\u4EE5 O(N) \u7684\u65F6\u95F4\u590D\u6742\u5EA6\u64CD\u4F5C\u8282\u70B9\u7684\u603B\u6B21\u6570\u3002(2N-1)/N ~ 2\uFF0C\u56E0\u6B64\u8BE5\u7B97\u6CD5\u7684\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">deleteNode</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token class-name">ListNode</span> tobeDelete<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> tobeDelete <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tobeDelete<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8981\u5220\u9664\u7684\u8282\u70B9\u4E0D\u662F\u5C3E\u8282\u70B9</span>
        <span class="token class-name">ListNode</span> next <span class="token operator">=</span> tobeDelete<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        tobeDelete<span class="token punctuation">.</span>val <span class="token operator">=</span> next<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
        tobeDelete<span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>head <span class="token operator">==</span> tobeDelete<span class="token punctuation">)</span>
             <span class="token comment">// \u53EA\u6709\u4E00\u4E2A\u8282\u70B9</span>
            head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">ListNode</span> cur <span class="token operator">=</span> head<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>next <span class="token operator">!=</span> tobeDelete<span class="token punctuation">)</span>
                cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            cur<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> head<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h1 id="_18-2-\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9" tabindex="-1"><a class="header-anchor" href="#_18-2-\u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9" aria-hidden="true">#</a> 18.2 \u5220\u9664\u94FE\u8868\u4E2D\u91CD\u590D\u7684\u7ED3\u70B9</h1>`,26),V={href:"https://www.nowcoder.com/practice/fc533c45b73a41b0b44ccba763f866ef?tpId=13&tqId=11209&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},J=t("NowCoder"),R=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-11" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-11" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/17e301df-52e8-4886-b593-841a16d13e44.png" width="450"></div><br><h2 id="\u89E3\u9898\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u63CF\u8FF0" aria-hidden="true">#</a> \u89E3\u9898\u63CF\u8FF0</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">deleteDuplication</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> pHead<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pHead <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> pHead<span class="token punctuation">.</span>next <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> pHead<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> next <span class="token operator">=</span> pHead<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pHead<span class="token punctuation">.</span>val <span class="token operator">==</span> next<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>next <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> pHead<span class="token punctuation">.</span>val <span class="token operator">==</span> next<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
            next <span class="token operator">=</span> next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">deleteDuplication</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        pHead<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">deleteDuplication</span><span class="token punctuation">(</span>pHead<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> pHead<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h1 id="_19-\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#_19-\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D" aria-hidden="true">#</a> 19. \u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D</h1>`,6),G={href:"https://www.nowcoder.com/practice/45327ae22b7b413ea21df13ee7d6429c?tpId=13&tqId=11205&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking",target:"_blank",rel:"noopener noreferrer"},K=t("NowCoder"),Q=s(`<h2 id="\u9898\u76EE\u63CF\u8FF0-12" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-12" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h2><p>\u8BF7\u5B9E\u73B0\u4E00\u4E2A\u51FD\u6570\u7528\u6765\u5339\u914D\u5305\u62EC &#39;.&#39; \u548C &#39;*&#39; \u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u3002\u6A21\u5F0F\u4E2D\u7684\u5B57\u7B26 &#39;.&#39; \u8868\u793A\u4EFB\u610F\u4E00\u4E2A\u5B57\u7B26\uFF0C\u800C &#39;*&#39; \u8868\u793A\u5B83\u524D\u9762\u7684\u5B57\u7B26\u53EF\u4EE5\u51FA\u73B0\u4EFB\u610F\u6B21\uFF08\u5305\u542B 0 \u6B21\uFF09\u3002</p><p>\u5728\u672C\u9898\u4E2D\uFF0C\u5339\u914D\u662F\u6307\u5B57\u7B26\u4E32\u7684\u6240\u6709\u5B57\u7B26\u5339\u914D\u6574\u4E2A\u6A21\u5F0F\u3002\u4F8B\u5982\uFF0C\u5B57\u7B26\u4E32 &quot;aaa&quot; \u4E0E\u6A21\u5F0F &quot;a.a&quot; \u548C &quot;ab*ac*a&quot; \u5339\u914D\uFF0C\u4F46\u662F\u4E0E &quot;aa.a&quot; \u548C &quot;ab*a&quot; \u5747\u4E0D\u5339\u914D\u3002</p><h2 id="\u89E3\u9898\u601D\u8DEF-11" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-11" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u5E94\u8BE5\u6CE8\u610F\u5230\uFF0C&#39;.&#39; \u662F\u7528\u6765\u5F53\u505A\u4E00\u4E2A\u4EFB\u610F\u5B57\u7B26\uFF0C\u800C &#39;*&#39; \u662F\u7528\u6765\u91CD\u590D\u524D\u9762\u7684\u5B57\u7B26\u3002\u8FD9\u4E24\u4E2A\u7684\u4F5C\u7528\u4E0D\u540C\uFF0C\u4E0D\u80FD\u628A &#39;.&#39; \u7684\u4F5C\u7528\u548C &#39;*&#39; \u8FDB\u884C\u7C7B\u6BD4\uFF0C\u4ECE\u800C\u628A\u5B83\u5F53\u6210\u91CD\u590D\u524D\u9762\u5B57\u7B26\u4E00\u6B21\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> pattern<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> m <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> pattern<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;*&#39;</span><span class="token punctuation">)</span>
            dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> pattern<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> pattern<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;*&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> str<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> pattern<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">|=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// a* counts as single a</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">|=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// a* counts as multiple a</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">|=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// a* counts as empty</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">// a* only counts as empty</span>

    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>`,6);function U(W,X){const a=o("ExternalLinkIcon");return u(),c(l,null,[i,n("p",null,[n("a",k,[d,p(a)])]),b,n("p",null,[n("a",m,[h,p(a)])]),w,n("p",null,[n("a",y,[f,p(a)])]),g,n("p",null,[n("a",v,[E,p(a)])]),x,n("p",null,[n("a",A,[_,p(a)])]),B,n("p",null,[n("a",j,[F,p(a)])]),q,n("p",null,[n("a",N,[D,p(a)])]),I,n("p",null,[n("a",O,[C,p(a)])]),z,n("p",null,[n("a",S,[L,p(a)])]),M,n("p",null,[n("a",P,[H,p(a)])]),T,n("p",null,[n("a",V,[J,p(a)])]),R,n("p",null,[n("a",G,[K,p(a)])]),Q],64)}var $=e(r,[["render",U],["__file","\u5251\u6307Offer\u9898\u89E3-10~19.html.vue"]]);export{$ as default};
