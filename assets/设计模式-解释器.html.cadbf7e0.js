import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,c as o,a as n,b as e,F as l,f as c,d as s,o as r}from"./app.e9c8698e.js";const i={},u=c(`<ul><li><a href="#%E8%A7%A3%E9%87%8A%E5%99%A8interpreter">\u89E3\u91CA\u5668\uFF08Interpreter\uFF09</a><ul><li><a href="#%E4%BB%8B%E7%BB%8D">\u4ECB\u7ECD</a><ul><li><a href="#%E5%AE%9A%E4%B9%89">\u5B9A\u4E49</a></li><li><a href="#%E7%B1%BB%E5%9B%BE">\u7C7B\u56FE</a></li><li><a href="#%E8%A7%92%E8%89%B2%E5%88%92%E5%88%86">\u89D2\u8272\u5212\u5206</a></li></ul></li><li><a href="#%E5%AE%9E%E7%8E%B0">\u5B9E\u73B0</a></li><li><a href="#%E5%88%86%E6%9E%90">\u5206\u6790</a><ul><li><a href="#%E4%BC%98%E7%82%B9">\u4F18\u70B9</a></li><li><a href="#%E7%BC%BA%E7%82%B9">\u7F3A\u70B9</a></li><li><a href="#%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF">\u9002\u7528\u573A\u666F</a></li></ul></li><li><a href="#%E5%BA%94%E7%94%A8">\u5E94\u7528</a><ul><li><a href="#%E5%BC%80%E5%8F%91%E5%9C%BA%E6%99%AF">\u5F00\u53D1\u573A\u666F</a></li><li><a href="#jdk">JDK</a></li></ul></li></ul></li></ul><h1 id="\u89E3\u91CA\u5668-interpreter" tabindex="-1"><a class="header-anchor" href="#\u89E3\u91CA\u5668-interpreter" aria-hidden="true">#</a> \u89E3\u91CA\u5668\uFF08Interpreter\uFF09</h1><h2 id="\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a> \u4ECB\u7ECD</h2><h3 id="\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49" aria-hidden="true">#</a> \u5B9A\u4E49</h3><p>\u4E3A\u8BED\u8A00\u521B\u5EFA\u89E3\u91CA\u5668\uFF0C\u901A\u5E38\u7531\u8BED\u8A00\u7684\u8BED\u6CD5\u548C\u8BED\u6CD5\u5206\u6790\u6765\u5B9A\u4E49\u3002</p><p>\u89E3\u91CA\u5668\uFF08Interpreter\uFF09\u6A21\u5F0F\u7684\u5B9A\u4E49\uFF1A\u7ED9\u5206\u6790\u5BF9\u8C61\u5B9A\u4E49\u4E00\u4E2A\u8BED\u8A00\uFF0C\u5E76\u5B9A\u4E49\u8BE5\u8BED\u8A00\u7684\u6587\u6CD5\u8868\u793A\uFF0C\u518D\u8BBE\u8BA1\u4E00\u4E2A\u89E3\u6790\u5668\u6765\u89E3\u91CA\u8BED\u8A00\u4E2D\u7684\u53E5\u5B50\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u7528\u7F16\u8BD1\u8BED\u8A00\u7684\u65B9\u5F0F\u6765\u5206\u6790\u5E94\u7528\u4E2D\u7684\u5B9E\u4F8B\u3002\u8FD9\u79CD\u6A21\u5F0F\u5B9E\u73B0\u4E86\u6587\u6CD5\u8868\u8FBE\u5F0F\u5904\u7406\u7684\u63A5\u53E3\uFF0C\u8BE5\u63A5\u53E3\u89E3\u91CA\u4E00\u4E2A\u7279\u5B9A\u7684\u4E0A\u4E0B\u6587\u3002</p><h3 id="\u7C7B\u56FE" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u56FE" aria-hidden="true">#</a> \u7C7B\u56FE</h3><ul><li>TerminalExpression\uFF1A\u7EC8\u7ED3\u7B26\u8868\u8FBE\u5F0F\uFF0C\u6BCF\u4E2A\u7EC8\u7ED3\u7B26\u90FD\u9700\u8981\u4E00\u4E2A TerminalExpression\u3002</li><li>Context\uFF1A\u4E0A\u4E0B\u6587\uFF0C\u5305\u542B\u89E3\u91CA\u5668\u4E4B\u5916\u7684\u4E00\u4E9B\u5168\u5C40\u4FE1\u606F\u3002</li></ul><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/2b125bcd-1b36-43be-9b78-d90b076be549.png"></div><br><h3 id="\u89D2\u8272\u5212\u5206" tabindex="-1"><a class="header-anchor" href="#\u89D2\u8272\u5212\u5206" aria-hidden="true">#</a> \u89D2\u8272\u5212\u5206</h3><ul><li>\u62BD\u8C61\u8868\u8FBE\u5F0F\uFF08Abstract Expression\uFF09\u89D2\u8272\uFF1A\u5B9A\u4E49\u89E3\u91CA\u5668\u7684\u63A5\u53E3\uFF0C\u7EA6\u5B9A\u89E3\u91CA\u5668\u7684\u89E3\u91CA\u64CD\u4F5C\uFF0C\u4E3B\u8981\u5305\u542B\u89E3\u91CA\u65B9\u6CD5 interpret()\u3002</li><li>\u7EC8\u7ED3\u7B26\u8868\u8FBE\u5F0F\uFF08Terminal Expression\uFF09\u89D2\u8272\uFF1A\u662F\u62BD\u8C61\u8868\u8FBE\u5F0F\u7684\u5B50\u7C7B\uFF0C\u7528\u6765\u5B9E\u73B0\u6587\u6CD5\u4E2D\u4E0E\u7EC8\u7ED3\u7B26\u76F8\u5173\u7684\u64CD\u4F5C\uFF0C\u6587\u6CD5\u4E2D\u7684\u6BCF\u4E00\u4E2A\u7EC8\u7ED3\u7B26\u90FD\u6709\u4E00\u4E2A\u5177\u4F53\u7EC8\u7ED3\u8868\u8FBE\u5F0F\u4E0E\u4E4B\u76F8\u5BF9\u5E94\u3002</li><li>\u975E\u7EC8\u7ED3\u7B26\u8868\u8FBE\u5F0F\uFF08Nonterminal Expression\uFF09\u89D2\u8272\uFF1A\u4E5F\u662F\u62BD\u8C61\u8868\u8FBE\u5F0F\u7684\u5B50\u7C7B\uFF0C\u7528\u6765\u5B9E\u73B0\u6587\u6CD5\u4E2D\u4E0E\u975E\u7EC8\u7ED3\u7B26\u76F8\u5173\u7684\u64CD\u4F5C\uFF0C\u6587\u6CD5\u4E2D\u7684\u6BCF\u6761\u89C4\u5219\u90FD\u5BF9\u5E94\u4E8E\u4E00\u4E2A\u975E\u7EC8\u7ED3\u7B26\u8868\u8FBE\u5F0F\u3002</li><li>\u73AF\u5883\uFF08Context\uFF09\u89D2\u8272\uFF1A\u901A\u5E38\u5305\u542B\u5404\u4E2A\u89E3\u91CA\u5668\u9700\u8981\u7684\u6570\u636E\u6216\u662F\u516C\u5171\u7684\u529F\u80FD\uFF0C\u4E00\u822C\u7528\u6765\u4F20\u9012\u88AB\u6240\u6709\u89E3\u91CA\u5668\u5171\u4EAB\u7684\u6570\u636E\uFF0C\u540E\u9762\u7684\u89E3\u91CA\u5668\u53EF\u4EE5\u4ECE\u8FD9\u91CC\u83B7\u53D6\u8FD9\u4E9B\u503C\u3002</li><li>\u5BA2\u6237\u7AEF\uFF08Client\uFF09\uFF1A\u4E3B\u8981\u4EFB\u52A1\u662F\u5C06\u9700\u8981\u5206\u6790\u7684\u53E5\u5B50\u6216\u8868\u8FBE\u5F0F\u8F6C\u6362\u6210\u4F7F\u7528\u89E3\u91CA\u5668\u5BF9\u8C61\u63CF\u8FF0\u7684\u62BD\u8C61\u8BED\u6CD5\u6811\uFF0C\u7136\u540E\u8C03\u7528\u89E3\u91CA\u5668\u7684\u89E3\u91CA\u65B9\u6CD5\uFF0C\u5F53\u7136\u4E5F\u53EF\u4EE5\u901A\u8FC7\u73AF\u5883\u89D2\u8272\u95F4\u63A5\u8BBF\u95EE\u89E3\u91CA\u5668\u7684\u89E3\u91CA\u65B9\u6CD5\u3002</li></ul><h2 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h2><p>\u4EE5\u4E0B\u662F\u4E00\u4E2A\u89C4\u5219\u68C0\u9A8C\u5668\u5B9E\u73B0\uFF0C\u5177\u6709 and \u548C or \u89C4\u5219\uFF0C\u901A\u8FC7\u89C4\u5219\u53EF\u4EE5\u6784\u5EFA\u4E00\u9897\u89E3\u6790\u6811\uFF0C\u7528\u6765\u68C0\u9A8C\u4E00\u4E2A\u6587\u672C\u662F\u5426\u6EE1\u8DB3\u89E3\u6790\u6811\u5B9A\u4E49\u7684\u89C4\u5219\u3002</p><p>\u4F8B\u5982\u4E00\u9897\u89E3\u6790\u6811\u4E3A D And (A Or (B C))\uFF0C\u6587\u672C &quot;D A&quot; \u6EE1\u8DB3\u8BE5\u89E3\u6790\u6811\u5B9A\u4E49\u7684\u89C4\u5219\u3002</p><p>\u8FD9\u91CC\u7684 Context \u6307\u7684\u662F String\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Expression</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">boolean</span> <span class="token function">interpret</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TerminalExpression</span> <span class="token keyword">extends</span> <span class="token class-name">Expression</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> literal <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TerminalExpression</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        literal <span class="token operator">=</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">interpret</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringTokenizer</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringTokenizer</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">hasMoreTokens</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> test <span class="token operator">=</span> st<span class="token punctuation">.</span><span class="token function">nextToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>literal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AndExpression</span> <span class="token keyword">extends</span> <span class="token class-name">Expression</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Expression</span> expression1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Expression</span> expression2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AndExpression</span><span class="token punctuation">(</span><span class="token class-name">Expression</span> expression1<span class="token punctuation">,</span> <span class="token class-name">Expression</span> expression2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>expression1 <span class="token operator">=</span> expression1<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>expression2 <span class="token operator">=</span> expression2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">interpret</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> expression1<span class="token punctuation">.</span><span class="token function">interpret</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> expression2<span class="token punctuation">.</span><span class="token function">interpret</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrExpression</span> <span class="token keyword">extends</span> <span class="token class-name">Expression</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Expression</span> expression1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Expression</span> expression2 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">OrExpression</span><span class="token punctuation">(</span><span class="token class-name">Expression</span> expression1<span class="token punctuation">,</span> <span class="token class-name">Expression</span> expression2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>expression1 <span class="token operator">=</span> expression1<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>expression2 <span class="token operator">=</span> expression2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">interpret</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> expression1<span class="token punctuation">.</span><span class="token function">interpret</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">||</span> expression2<span class="token punctuation">.</span><span class="token function">interpret</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Client</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u6784\u5EFA\u89E3\u6790\u6811
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Expression</span> <span class="token function">buildInterpreterTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Literal</span>
        <span class="token class-name">Expression</span> terminal1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TerminalExpression</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Expression</span> terminal2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TerminalExpression</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Expression</span> terminal3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TerminalExpression</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Expression</span> terminal4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TerminalExpression</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// B C</span>
        <span class="token class-name">Expression</span> alternation1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrExpression</span><span class="token punctuation">(</span>terminal2<span class="token punctuation">,</span> terminal3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// A Or (B C)</span>
        <span class="token class-name">Expression</span> alternation2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrExpression</span><span class="token punctuation">(</span>terminal1<span class="token punctuation">,</span> alternation1<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// D And (A Or (B C))</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AndExpression</span><span class="token punctuation">(</span>terminal4<span class="token punctuation">,</span> alternation2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Expression</span> define <span class="token operator">=</span> <span class="token function">buildInterpreterTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> context1 <span class="token operator">=</span> <span class="token string">&quot;D A&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> context2 <span class="token operator">=</span> <span class="token string">&quot;A B&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>define<span class="token punctuation">.</span><span class="token function">interpret</span><span class="token punctuation">(</span>context1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>define<span class="token punctuation">.</span><span class="token function">interpret</span><span class="token punctuation">(</span>context2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><div class="language-html ext-html"><pre class="language-html"><code>true
false
</code></pre></div><h2 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790</h2><h3 id="\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4F18\u70B9" aria-hidden="true">#</a> \u4F18\u70B9</h3><ul><li>\u6269\u5C55\u6027\u597D\u3002\u7531\u4E8E\u5728\u89E3\u91CA\u5668\u6A21\u5F0F\u4E2D\u4F7F\u7528\u7C7B\u6765\u8868\u793A\u8BED\u8A00\u7684\u6587\u6CD5\u89C4\u5219\uFF0C\u56E0\u6B64\u53EF\u4EE5\u901A\u8FC7\u7EE7\u627F\u7B49\u673A\u5236\u6765\u6539\u53D8\u6216\u6269\u5C55\u6587\u6CD5\u3002</li><li>\u5BB9\u6613\u5B9E\u73B0\u3002\u5728\u8BED\u6CD5\u6811\u4E2D\u7684\u6BCF\u4E2A\u8868\u8FBE\u5F0F\u8282\u70B9\u7C7B\u90FD\u662F\u76F8\u4F3C\u7684\uFF0C\u6240\u4EE5\u5B9E\u73B0\u5176\u6587\u6CD5\u8F83\u4E3A\u5BB9\u6613\u3002</li></ul><h3 id="\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#\u7F3A\u70B9" aria-hidden="true">#</a> \u7F3A\u70B9</h3><ul><li>\u6267\u884C\u6548\u7387\u8F83\u4F4E\u3002\u89E3\u91CA\u5668\u6A21\u5F0F\u4E2D\u901A\u5E38\u4F7F\u7528\u5927\u91CF\u7684\u5FAA\u73AF\u548C\u9012\u5F52\u8C03\u7528\uFF0C\u5F53\u8981\u89E3\u91CA\u7684\u53E5\u5B50\u8F83\u590D\u6742\u65F6\uFF0C\u5176\u8FD0\u884C\u901F\u5EA6\u5F88\u6162\uFF0C\u4E14\u4EE3\u7801\u7684\u8C03\u8BD5\u8FC7\u7A0B\u4E5F\u6BD4\u8F83\u9EBB\u70E6\u3002</li><li>\u4F1A\u5F15\u8D77\u7C7B\u81A8\u80C0\u3002\u89E3\u91CA\u5668\u6A21\u5F0F\u4E2D\u7684\u6BCF\u6761\u89C4\u5219\u81F3\u5C11\u9700\u8981\u5B9A\u4E49\u4E00\u4E2A\u7C7B\uFF0C\u5F53\u5305\u542B\u7684\u6587\u6CD5\u89C4\u5219\u5F88\u591A\u65F6\uFF0C\u7C7B\u7684\u4E2A\u6570\u5C06\u6025\u5267\u589E\u52A0\uFF0C\u5BFC\u81F4\u7CFB\u7EDF\u96BE\u4EE5\u7BA1\u7406\u4E0E\u7EF4\u62A4\u3002</li><li>\u53EF\u5E94\u7528\u7684\u573A\u666F\u6BD4\u8F83\u5C11\u3002\u5728\u8F6F\u4EF6\u5F00\u53D1\u4E2D\uFF0C\u9700\u8981\u5B9A\u4E49\u8BED\u8A00\u6587\u6CD5\u7684\u5E94\u7528\u5B9E\u4F8B\u975E\u5E38\u5C11\uFF0C\u6240\u4EE5\u8FD9\u79CD\u6A21\u5F0F\u5F88\u5C11\u88AB\u4F7F\u7528\u5230\u3002</li></ul><h3 id="\u9002\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u9002\u7528\u573A\u666F" aria-hidden="true">#</a> \u9002\u7528\u573A\u666F</h3><ul><li>\u5F53\u8BED\u8A00\u7684\u6587\u6CD5\u8F83\u4E3A\u7B80\u5355\uFF0C\u4E14\u6267\u884C\u6548\u7387\u4E0D\u662F\u5173\u952E\u95EE\u9898\u65F6\u3002</li><li>\u5F53\u95EE\u9898\u91CD\u590D\u51FA\u73B0\uFF0C\u4E14\u53EF\u4EE5\u7528\u4E00\u79CD\u7B80\u5355\u7684\u8BED\u8A00\u6765\u8FDB\u884C\u8868\u8FBE\u65F6\u3002</li><li>\u5F53\u4E00\u4E2A\u8BED\u8A00\u9700\u8981\u89E3\u91CA\u6267\u884C\uFF0C\u5E76\u4E14\u8BED\u8A00\u4E2D\u7684\u53E5\u5B50\u53EF\u4EE5\u8868\u793A\u4E3A\u4E00\u4E2A\u62BD\u8C61\u8BED\u6CD5\u6811\u7684\u65F6\u5019\uFF0C\u5982 XML \u6587\u6863\u89E3\u91CA\u3002</li></ul><p><strong>\u6CE8\u610F</strong>\uFF1A\u89E3\u91CA\u5668\u6A21\u5F0F\u5728\u5B9E\u9645\u7684\u8F6F\u4EF6\u5F00\u53D1\u4E2D\u4F7F\u7528\u6BD4\u8F83\u5C11\uFF0C\u56E0\u4E3A\u5B83\u4F1A\u5F15\u8D77\u6548\u7387\u3001\u6027\u80FD\u4EE5\u53CA\u7EF4\u62A4\u7B49\u95EE\u9898\u3002</p><h2 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h2><h3 id="\u5F00\u53D1\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5F00\u53D1\u573A\u666F" aria-hidden="true">#</a> \u5F00\u53D1\u573A\u666F</h3><ul><li>EL\u8868\u8FBE\u5F0F\u5F0F\u7684\u5904\u7406</li><li>\u6B63\u5219\u8868\u8FBE\u5F0F\u89E3\u91CA\u5668</li><li>SQL\u8BED\u6CD5\u7684\u89E3\u91CA\u5668</li><li>\u6570\u5B66\u8868\u8FBE\u5F0F\u89E3\u6790\u5668 <ul><li>\u5982\u73B0\u6210\u7684\u5DE5\u5177\u5305:Math Expression String Parser\u3001Expression4J\u7B49\u3002</li></ul></li></ul><h3 id="jdk" tabindex="-1"><a class="header-anchor" href="#jdk" aria-hidden="true">#</a> JDK</h3>`,34),k={href:"http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html",target:"_blank",rel:"noopener noreferrer"},d=s("java.util.Pattern"),b={href:"http://docs.oracle.com/javase/8/docs/api/java/text/Normalizer.html",target:"_blank",rel:"noopener noreferrer"},m=s("java.text.Normalizer"),h=s("All subclasses of "),x={href:"http://docs.oracle.com/javase/8/docs/api/java/text/Format.html",target:"_blank",rel:"noopener noreferrer"},E=s("java.text.Format"),w={href:"http://docs.oracle.com/javaee/7/api/javax/el/ELResolver.html",target:"_blank",rel:"noopener noreferrer"},f=s("javax.el.ELResolver");function y(v,g){const a=t("ExternalLinkIcon");return r(),o(l,null,[u,n("ul",null,[n("li",null,[n("a",k,[d,e(a)])]),n("li",null,[n("a",b,[m,e(a)])]),n("li",null,[h,n("a",x,[E,e(a)])]),n("li",null,[n("a",w,[f,e(a)])])])],64)}var j=p(i,[["render",y],["__file","\u8BBE\u8BA1\u6A21\u5F0F-\u89E3\u91CA\u5668.html.vue"]]);export{j as default};
