import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,c as o,a as n,b as a,F as c,f as l,d as p,o as u}from"./app.7d4bd0aa.js";var i="/cs-way/assets/java-collection-framwork.0582eb72.png",r="/cs-way/assets/jdk7\u7684HashMap\u7ED3\u6784.df4a7962.png",k="/cs-way/assets/jdk8\u7684HashMap\u7ED3\u6784.6eae9be5.png",d="/cs-way/assets/HashMap\u7684put\u65B9\u6CD5.5da43fd2.png",b="/cs-way/assets/jdk7\u7684ConcurrentHashMap\u7ED3\u6784.76887f61.png",m="/cs-way/assets/jdk8\u7684ConcurrentHashMap\u7ED3\u6784.67e91db2.png";const h={},y=l('<ul><li><a href="#%E4%B8%80%E6%A6%82%E8%A7%88">\u4E00\u3001\u6982\u89C8</a><ul><li><a href="#Collection">Collection</a><ul><li><a href="#1-Set">1. Set</a></li><li><a href="#2-List">2. List</a></li><li><a href="#3-Queue">3. Queue</a></li></ul></li><li><a href="#Map">Map</a></li></ul></li><li><a href="#%E4%BA%8C%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">\u4E8C\u3001\u5BB9\u5668\u4E2D\u7684\u8BBE\u8BA1\u6A21\u5F0F</a><ul><li><a href="#%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F">\u8FED\u4EE3\u5668\u6A21\u5F0F</a></li><li><a href="#%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F">\u9002\u914D\u5668\u6A21\u5F0F</a></li></ul></li><li><a href="#%E4%B8%89%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90">\u4E09\u3001\u6E90\u7801\u5206\u6790</a><ul><li><a href="#ArrayList">ArrayList</a><ul><li><a href="#1-%E6%A6%82%E8%A7%88">1. \u6982\u89C8</a></li><li><a href="#2-%E5%88%9D%E5%A7%8B%E5%8C%96">2. \u521D\u59CB\u5316</a></li><li><a href="#3-%E6%89%A9%E5%AE%B9">3. \u6269\u5BB9</a></li><li><a href="#4-%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0">4. \u5220\u9664\u5143\u7D20</a></li><li><a href="#5-Fail-Fast">5. Fail-Fast</a></li><li><a href="#6-%E5%BA%8F%E5%88%97%E5%8C%96">6. \u5E8F\u5217\u5316</a></li></ul></li><li><a href="#Vector">Vector</a><ul><li><a href="#1-%E5%90%8C%E6%AD%A5">1. \u540C\u6B65</a></li><li><a href="#2-%E6%89%A9%E5%AE%B9">2. \u6269\u5BB9</a></li><li><a href="#3-%E4%B8%8E-ArrayList-%E7%9A%84%E6%AF%94%E8%BE%83">3. \u4E0E ArrayList \u7684\u6BD4\u8F83</a></li><li><a href="#4-%E6%9B%BF%E4%BB%A3%E6%96%B9%E6%A1%88">4. \u66FF\u4EE3\u65B9\u6848</a></li></ul></li><li><a href="#CopyOnWriteArrayList">CopyOnWriteArrayList</a><ul><li><a href="#%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB">\u8BFB\u5199\u5206\u79BB</a></li><li><a href="#%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF">\u9002\u7528\u573A\u666F</a></li></ul></li><li><a href="#LinkedList">LinkedList</a><ul><li><a href="#1-%E6%A6%82%E8%A7%88-1">1. \u6982\u89C8</a></li><li><a href="#2-%E4%B8%8E-ArrayList-%E7%9A%84%E6%AF%94%E8%BE%83">2. \u4E0E ArrayList \u7684\u6BD4\u8F83</a></li></ul></li><li><a href="#HashMap">HashMap</a><ul><li><a href="#1-%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84">1. \u5B58\u50A8\u7ED3\u6784</a></li><li><a href="#2-%E6%8B%89%E9%93%BE%E6%B3%95%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86">2. \u62C9\u94FE\u6CD5\u7684\u5DE5\u4F5C\u539F\u7406</a></li><li><a href="#3-put-%E6%93%8D%E4%BD%9C">3. put \u64CD\u4F5C</a></li><li><a href="#4-%E7%A1%AE%E5%AE%9A%E6%A1%B6%E4%B8%8B%E6%A0%87">4. \u786E\u5B9A\u6876\u4E0B\u6807</a></li><li><a href="#5-%E6%89%A9%E5%AE%B9-%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86">5. \u6269\u5BB9-\u57FA\u672C\u539F\u7406</a></li><li><a href="#6-%E6%89%A9%E5%AE%B9-%E9%87%8D%E6%96%B0%E8%AE%A1%E7%AE%97%E6%A1%B6%E4%B8%8B%E6%A0%87">6. \u6269\u5BB9-\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807</a></li><li><a href="#7-%E8%AE%A1%E7%AE%97%E6%95%B0%E7%BB%84%E5%AE%B9%E9%87%8F">7. \u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF</a></li><li><a href="#8-HashMap-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%93%8D%E4%BD%9C%E5%AF%BC%E8%87%B4%E6%AD%BB%E5%BE%AA%E7%8E%AF%E9%97%AE%E9%A2%98">8. HashMap \u591A\u7EBF\u7A0B\u64CD\u4F5C\u5BFC\u81F4\u6B7B\u5FAA\u73AF\u95EE\u9898</a></li><li><a href="#9-%E4%B8%8E-HashTable-%E7%9A%84%E6%AF%94%E8%BE%83">9. \u4E0E HashTable \u7684\u6BD4\u8F83</a></li><li><a href="#10-%E4%B8%8EHashSet-%E7%9A%84%E6%AF%94%E8%BE%83">10. \u4E0EHashSet \u7684\u6BD4\u8F83</a></li></ul></li><li><a href="#ConcurrentHashMap">ConcurrentHashMap</a><ul><li><a href="#1-%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84-1">1. \u5B58\u50A8\u7ED3\u6784</a></li><li><a href="#2-put-%E6%93%8D%E4%BD%9C">2. put \u64CD\u4F5C</a></li><li><a href="#3-size-%E6%93%8D%E4%BD%9C">3. size \u64CD\u4F5C</a></li><li><a href="#4-%E5%92%8C-Hashtable-%E7%9A%84%E5%AF%B9%E6%AF%94">4. \u548C Hashtable \u7684\u5BF9\u6BD4</a></li></ul></li><li><a href="#LinkedHashMap">LinkedHashMap</a><ul><li><a href="#%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84">\u5B58\u50A8\u7ED3\u6784</a></li><li><a href="#afterNodeAccess">afterNodeAccess()</a></li><li><a href="#afterNodeInsertion">afterNodeInsertion()</a></li><li><a href="#LRU-%E7%BC%93%E5%AD%98">LRU \u7F13\u5B58</a></li></ul></li><li><a href="#WeakHashMap">WeakHashMap</a><ul><li><a href="#%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84-1">\u5B58\u50A8\u7ED3\u6784</a></li><li><a href="#ConcurrentCache">ConcurrentCache</a></li></ul></li></ul></li><li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">\u53C2\u8003\u8D44\u6599</a></li></ul><h1 id="\u4E00\u3001\u6982\u89C8" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u6982\u89C8" aria-hidden="true">#</a> \u4E00\u3001\u6982\u89C8</h1><p>\u5BB9\u5668\u4E3B\u8981\u5305\u62EC Collection \u548C Map \u4E24\u79CD\uFF0CCollection \u5B58\u50A8\u7740\u5BF9\u8C61\u7684\u96C6\u5408\uFF0C\u800C Map \u5B58\u50A8\u7740\u952E\u503C\u5BF9(\u4E24\u4E2A\u5BF9\u8C61)\u7684\u6620\u5C04\u8868\u3002</p><p><img src="'+i+`" alt="" loading="lazy"></p><h2 id="collection" tabindex="-1"><a class="header-anchor" href="#collection" aria-hidden="true">#</a> Collection</h2><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/73403d84-d921-49f1-93a9-d8fe050f3497.png" width="800px"></div><br><h3 id="_1-set" tabindex="-1"><a class="header-anchor" href="#_1-set" aria-hidden="true">#</a> 1. Set</h3><ul><li><p>TreeSet\uFF1A\u57FA\u4E8E\u7EA2\u9ED1\u6811\u5B9E\u73B0\uFF0C\u652F\u6301\u6709\u5E8F\u6027\u64CD\u4F5C\uFF0C\u4F8B\u5982\u6839\u636E\u4E00\u4E2A\u8303\u56F4\u67E5\u627E\u5143\u7D20\u7684\u64CD\u4F5C\u3002\u4F46\u662F\u67E5\u627E\u6548\u7387\u4E0D\u5982 HashSet\uFF0CHashSet \u67E5\u627E\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(1)\uFF0CTreeSet \u5219\u4E3A O(logN)\u3002</p></li><li><p>HashSet\uFF1A\u57FA\u4E8E\u54C8\u5E0C\u8868\u5B9E\u73B0\uFF0C\u652F\u6301\u5FEB\u901F\u67E5\u627E\uFF0C\u4F46\u4E0D\u652F\u6301\u6709\u5E8F\u6027\u64CD\u4F5C\u3002\u5E76\u4E14\u5931\u53BB\u4E86\u5143\u7D20\u7684\u63D2\u5165\u987A\u5E8F\u4FE1\u606F\uFF0C\u4E5F\u5C31\u662F\u8BF4\u4F7F\u7528 Iterator \u904D\u5386 HashSet \u5F97\u5230\u7684\u7ED3\u679C\u662F\u4E0D\u786E\u5B9A\u7684\u3002</p></li><li><p>LinkedHashSet\uFF1A\u5177\u6709 HashSet \u7684\u67E5\u627E\u6548\u7387\uFF0C\u4E14\u5185\u90E8\u4F7F\u7528\u53CC\u5411\u94FE\u8868\u7EF4\u62A4\u5143\u7D20\u7684\u63D2\u5165\u987A\u5E8F\u3002</p></li></ul><h3 id="_2-list" tabindex="-1"><a class="header-anchor" href="#_2-list" aria-hidden="true">#</a> 2. List</h3><ul><li><p>ArrayList\uFF1A\u57FA\u4E8E\u52A8\u6001\u6570\u7EC4\u5B9E\u73B0\uFF0C\u652F\u6301\u968F\u673A\u8BBF\u95EE\u3002</p></li><li><p>Vector\uFF1A\u548C ArrayList \u7C7B\u4F3C\uFF0C\u4F46\u5B83\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\u3002</p></li><li><p>LinkedList\uFF1A\u57FA\u4E8E\u53CC\u5411\u94FE\u8868\u5B9E\u73B0\uFF0C\u53EA\u80FD\u987A\u5E8F\u8BBF\u95EE\uFF0C\u4F46\u662F\u53EF\u4EE5\u5FEB\u901F\u5730\u5728\u94FE\u8868\u4E2D\u95F4\u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u3002\u4E0D\u4EC5\u5982\u6B64\uFF0CLinkedList \u8FD8\u53EF\u4EE5\u7528\u4F5C\u6808\u3001\u961F\u5217\u548C\u53CC\u5411\u961F\u5217\u3002</p></li></ul><h3 id="_3-queue" tabindex="-1"><a class="header-anchor" href="#_3-queue" aria-hidden="true">#</a> 3. Queue</h3><ul><li><p>LinkedList\uFF1A\u53EF\u4EE5\u7528\u5B83\u6765\u5B9E\u73B0\u53CC\u5411\u961F\u5217\u3002</p></li><li><p>PriorityQueue\uFF1A\u57FA\u4E8E\u5806\u7ED3\u6784\u5B9E\u73B0\uFF0C\u53EF\u4EE5\u7528\u5B83\u6765\u5B9E\u73B0\u4F18\u5148\u961F\u5217\u3002</p></li></ul><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/774d756b-902a-41a3-a3fd-81ca3ef688dc.png" width="500px"></div><br><ul><li><p>TreeMap\uFF1A\u57FA\u4E8E\u7EA2\u9ED1\u6811\u5B9E\u73B0\u3002</p></li><li><p>HashMap\uFF1A\u57FA\u4E8E\u54C8\u5E0C\u8868\u5B9E\u73B0\u3002</p></li><li><p>HashTable\uFF1A\u548C HashMap \u7C7B\u4F3C\uFF0C\u4F46\u5B83\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u8FD9\u610F\u5473\u7740\u540C\u4E00\u65F6\u523B\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u5199\u5165 HashTable \u5E76\u4E14\u4E0D\u4F1A\u5BFC\u81F4\u6570\u636E\u4E0D\u4E00\u81F4\u3002\u5B83\u662F\u9057\u7559\u7C7B\uFF0C\u4E0D\u5E94\u8BE5\u53BB\u4F7F\u7528\u5B83\u3002\u73B0\u5728\u53EF\u4EE5\u4F7F\u7528 ConcurrentHashMap \u6765\u652F\u6301\u7EBF\u7A0B\u5B89\u5168\uFF0C\u5E76\u4E14 ConcurrentHashMap \u7684\u6548\u7387\u4F1A\u66F4\u9AD8\uFF0C\u56E0\u4E3A ConcurrentHashMap \u5F15\u5165\u4E86\u5206\u6BB5\u9501\u3002</p></li><li><p>LinkedHashMap\uFF1A\u4F7F\u7528\u53CC\u5411\u94FE\u8868\u6765\u7EF4\u62A4\u5143\u7D20\u7684\u987A\u5E8F\uFF0C\u987A\u5E8F\u4E3A\u63D2\u5165\u987A\u5E8F\u6216\u8005\u6700\u8FD1\u6700\u5C11\u4F7F\u7528(LRU)\u987A\u5E8F\u3002</p></li></ul><h1 id="\u4E8C\u3001\u5BB9\u5668\u4E2D\u7684\u8BBE\u8BA1\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u5BB9\u5668\u4E2D\u7684\u8BBE\u8BA1\u6A21\u5F0F" aria-hidden="true">#</a> \u4E8C\u3001\u5BB9\u5668\u4E2D\u7684\u8BBE\u8BA1\u6A21\u5F0F</h1><h2 id="\u8FED\u4EE3\u5668\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8FED\u4EE3\u5668\u6A21\u5F0F" aria-hidden="true">#</a> \u8FED\u4EE3\u5668\u6A21\u5F0F</h2><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/93fb1d38-83f9-464a-a733-67b2e6bfddda.png" width="600px"></div><br><p>Collection \u7EE7\u627F\u4E86 Iterable \u63A5\u53E3\uFF0C\u5176\u4E2D\u7684 iterator() \u65B9\u6CD5\u80FD\u591F\u4EA7\u751F\u4E00\u4E2A Iterator \u5BF9\u8C61\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u5BF9\u8C61\u5C31\u53EF\u4EE5\u8FED\u4EE3\u904D\u5386 Collection \u4E2D\u7684\u5143\u7D20\u3002</p><p>\u4ECE JDK 1.5 \u4E4B\u540E\u53EF\u4EE5\u4F7F\u7528 foreach \u65B9\u6CD5\u6765\u904D\u5386\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\u7684\u805A\u5408\u5BF9\u8C61\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> item <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u9002\u914D\u5668\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u9002\u914D\u5668\u6A21\u5F0F" aria-hidden="true">#</a> \u9002\u914D\u5668\u6A21\u5F0F</h2><p>java.util.Arrays.asList() \u53EF\u4EE5\u628A\u6570\u7EC4\u7C7B\u578B\u8F6C\u6362\u4E3A List \u7C7B\u578B\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@SafeVarargs</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> a<span class="token punctuation">)</span>
</code></pre></div><p>\u5E94\u8BE5\u6CE8\u610F\u7684\u662F asList() \u7684\u53C2\u6570\u4E3A\u6CDB\u578B\u7684\u53D8\u957F\u53C2\u6570\uFF0C\u4E0D\u80FD\u4F7F\u7528\u57FA\u672C\u7C7B\u578B\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\uFF0C\u53EA\u80FD\u4F7F\u7528\u76F8\u5E94\u7684\u5305\u88C5\u7C7B\u578B\u6570\u7EC4\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u65B9\u5F0F\u8C03\u7528 asList()\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">List</span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="\u4E09\u3001\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u4E09\u3001\u6E90\u7801\u5206\u6790</h1><p>\u5982\u679C\u6CA1\u6709\u7279\u522B\u8BF4\u660E\uFF0C\u4EE5\u4E0B\u6E90\u7801\u5206\u6790\u57FA\u4E8E JDK 1.8\u3002</p><h2 id="arraylist" tabindex="-1"><a class="header-anchor" href="#arraylist" aria-hidden="true">#</a> ArrayList</h2><h3 id="_1-\u6982\u89C8" tabindex="-1"><a class="header-anchor" href="#_1-\u6982\u89C8" aria-hidden="true">#</a> 1. \u6982\u89C8</h3><p>\u56E0\u4E3A ArrayList \u662F\u57FA\u4E8E\u6570\u7EC4\u5B9E\u73B0\u7684\uFF0C\u6240\u4EE5\u652F\u6301\u5FEB\u901F\u968F\u673A\u8BBF\u95EE\u3002RandomAccess \u63A5\u53E3\u6807\u8BC6\u7740\u8BE5\u7C7B\u652F\u6301\u5FEB\u901F\u968F\u673A\u8BBF\u95EE\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span>
        <span class="token keyword">implements</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> <span class="token class-name">RandomAccess</span><span class="token punctuation">,</span> <span class="token class-name">Cloneable</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>Serializable</span>
</code></pre></div><p>\u6570\u7EC4\u7684\u9ED8\u8BA4\u5927\u5C0F\u4E3A 10\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CAPACITY <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre></div><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/52a7744f-5bce-4ff3-a6f0-8449334d9f3d.png" width="400px"></div><br><h3 id="_2-\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#_2-\u521D\u59CB\u5316" aria-hidden="true">#</a> 2. \u521D\u59CB\u5316</h3><p>\u4EE5\u65E0\u53C2\u6570\u6784\u9020\u65B9\u6CD5\u521B\u5EFA ArrayList \u65F6\uFF0C\u5B9E\u9645\u4E0A\u521D\u59CB\u5316\u8D4B\u503C\u7684\u662F\u4E00\u4E2A\u7A7A\u6570\u7EC4\u3002\u5F53\u771F\u6B63\u5BF9\u6570\u7EC4\u8FDB\u884C\u6DFB\u52A0\u5143\u7D20\u64CD\u4F5C\u65F6\uFF0C\u624D\u771F\u6B63\u5206\u914D\u5BB9\u91CF\u3002\u5373\u5411\u6570\u7EC4\u4E2D\u6DFB\u52A0\u7B2C\u4E00\u4E2A\u5143\u7D20\u65F6\uFF0C\u6570\u7EC4\u5BB9\u91CF\u6269\u4E3A10\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CAPACITY <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>initialCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> EMPTY_ELEMENTDATA<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal Capacity: &quot;</span><span class="token operator">+</span>
                                               initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        elementData <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>size <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// c.toArray might (incorrectly) not return Object[] (see 6260652)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// replace with empty array.</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> EMPTY_ELEMENTDATA<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="_3-\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#_3-\u6269\u5BB9" aria-hidden="true">#</a> 3. \u6269\u5BB9</h3><p>\u6DFB\u52A0\u5143\u7D20\u65F6\u4F7F\u7528 ensureCapacityInternal() \u65B9\u6CD5\u6765\u4FDD\u8BC1\u5BB9\u91CF\u8DB3\u591F\uFF0C\u5982\u679C\u4E0D\u591F\u65F6\uFF0C\u9700\u8981\u4F7F\u7528 grow() \u65B9\u6CD5\u8FDB\u884C\u6269\u5BB9\uFF0C\u65B0\u5BB9\u91CF\u7684\u5927\u5C0F\u4E3A <code>oldCapacity + (oldCapacity &gt;&gt; 1)</code>\uFF0C\u4E5F\u5C31\u662F\u65E7\u5BB9\u91CF\u7684 1.5 \u500D\u3002</p><p>\u6269\u5BB9\u64CD\u4F5C\u9700\u8981\u8C03\u7528 <code>Arrays.copyOf()</code> \u628A\u539F\u6570\u7EC4\u6574\u4E2A\u590D\u5236\u5230\u65B0\u6570\u7EC4\u4E2D\uFF0C\u8FD9\u4E2A\u64CD\u4F5C\u4EE3\u4EF7\u5F88\u9AD8\uFF0C\u56E0\u6B64\u6700\u597D\u5728\u521B\u5EFA ArrayList \u5BF9\u8C61\u65F6\u5C31\u6307\u5B9A\u5927\u6982\u7684\u5BB9\u91CF\u5927\u5C0F\uFF0C\u51CF\u5C11\u6269\u5BB9\u64CD\u4F5C\u7684\u6B21\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount!!</span>
        elementData<span class="token punctuation">[</span>size<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5F97\u5230\u6700\u5C0F\u6269\u5BB9\u91CF</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>elementData <span class="token operator">==</span> DEFAULTCAPACITY_EMPTY_ELEMENTDATA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6\u9ED8\u8BA4\u521D\u59CB\u5BB9\u91CF\u5927\u5C0F\u548C\u4F20\u5165\u53C2\u6570\u7684\u8F83\u5927\u503C</span>
            minCapacity <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>DEFAULT_CAPACITY<span class="token punctuation">,</span> minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//\u5224\u65AD\u662F\u5426\u9700\u8981\u6269\u5BB9</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">ensureExplicitCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        modCount<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// overflow-conscious code</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">-</span> elementData<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">grow</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_ARRAY_SIZE <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">;</span>

    <span class="token comment">//ArrayList\u6269\u5BB9\u7684\u6838\u5FC3\u65B9\u6CD5</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// overflow-conscious code</span>
        <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// minCapacity is usually close to size, so this is a win:</span>
        elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// overflow</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">OutOfMemoryError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u5BF9minCapacity\u548CMAX_ARRAY_SIZE\u8FDB\u884C\u6BD4\u8F83</span>
        <span class="token comment">//\u82E5minCapacity\u5927\uFF0C\u5C06Integer.MAX_VALUE\u4F5C\u4E3A\u65B0\u6570\u7EC4\u7684\u5927\u5C0F</span>
        <span class="token comment">//\u82E5MAX_ARRAY_SIZE\u5927\uFF0C\u5C06MAX_ARRAY_SIZE\u4F5C\u4E3A\u65B0\u6570\u7EC4\u7684\u5927\u5C0F</span>
        <span class="token comment">//MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>minCapacity <span class="token operator">&gt;</span> MAX_ARRAY_SIZE<span class="token punctuation">)</span> <span class="token operator">?</span>
            <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span>
            MAX_ARRAY_SIZE<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u6700\u597D\u5728 add \u5927\u91CF\u5143\u7D20\u4E4B\u524D\u7528 ensureCapacity \u65B9\u6CD5\uFF0C\u4EE5\u51CF\u5C11\u589E\u91CF\u91CD\u65B0\u5206\u914D\u7684\u6B21\u6570</p><p>\u5982\u679C\u65B0\u5BB9\u91CF\u5927\u4E8E MAX_ARRAY_SIZE,\u8FDB\u5165(\u6267\u884C) hugeCapacity() \u65B9\u6CD5\u6765\u6BD4\u8F83 minCapacity \u548C MAX_ARRAY_SIZE\uFF0C\u5982\u679CminCapacity\u5927\u4E8E\u6700\u5927\u5BB9\u91CF\uFF0C\u5219\u65B0\u5BB9\u91CF\u5219\u4E3AInteger.MAX_VALUE\uFF0C\u5426\u5219\uFF0C\u65B0\u5BB9\u91CF\u5927\u5C0F\u5219\u4E3A MAX_ARRAY_SIZE \u5373\u4E3A Integer.MAX_VALUE - 8\u3002</p><p><strong>System.arraycopy()\u548CArrays.copyOf()\u65B9\u6CD5</strong></p><p>\u8FD9\u4E24\u4E2A\u5B9E\u73B0\u6570\u7EC4\u590D\u5236\u7684\u65B9\u6CD5\u88AB\u5E7F\u6CDB\u4F7F\u7528\u800C\u4E14\u5F88\u591A\u5730\u65B9\u90FD\u7279\u522B\u5DE7\u5999</p><p>\u8054\u7CFB\uFF1A \u4ECE\u4E24\u8005\u6E90\u4EE3\u7801\u53EF\u4EE5\u53D1\u73B0copyOf()\u5185\u90E8\u8C03\u7528\u4E86System.arraycopy()\u65B9\u6CD5</p><p>\u533A\u522B\uFF1A</p><ol><li>arraycopy()\u9700\u8981\u76EE\u6807\u6570\u7EC4\uFF0C\u5C06\u539F\u6570\u7EC4\u62F7\u8D1D\u5230\u4F60\u81EA\u5DF1\u5B9A\u4E49\u7684\u6570\u7EC4\u91CC\uFF0C\u800C\u4E14\u53EF\u4EE5\u9009\u62E9\u62F7\u8D1D\u7684\u8D77\u70B9\u548C\u957F\u5EA6\u4EE5\u53CA\u653E\u5165\u65B0\u6570\u7EC4\u4E2D\u7684\u4F4D\u7F6E</li><li>copyOf()\u662F\u7CFB\u7EDF\u81EA\u52A8\u5728\u5185\u90E8\u65B0\u5EFA\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u6570\u7EC4\u3002</li></ol><h3 id="_4-\u5220\u9664\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_4-\u5220\u9664\u5143\u7D20" aria-hidden="true">#</a> 4. \u5220\u9664\u5143\u7D20</h3><p>\u9700\u8981\u8C03\u7528 System.arraycopy() \u5C06 index+1 \u540E\u9762\u7684\u5143\u7D20\u90FD\u590D\u5236\u5230 index \u4F4D\u7F6E\u4E0A\uFF0C\u8BE5\u64CD\u4F5C\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(N)\uFF0C\u53EF\u4EE5\u770B\u51FA ArrayList \u5220\u9664\u5143\u7D20\u7684\u4EE3\u4EF7\u662F\u975E\u5E38\u9AD8\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">rangeCheck</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> oldValue <span class="token operator">=</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> numMoved <span class="token operator">=</span> size <span class="token operator">-</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>numMoved <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> elementData<span class="token punctuation">,</span> index<span class="token punctuation">,</span> numMoved<span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span><span class="token operator">--</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// clear to let GC do its work</span>
    <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_5-fail-fast" tabindex="-1"><a class="header-anchor" href="#_5-fail-fast" aria-hidden="true">#</a> 5. Fail-Fast</h3><p>modCount \u7528\u6765\u8BB0\u5F55 ArrayList \u7ED3\u6784\u53D1\u751F\u53D8\u5316\u7684\u6B21\u6570\u3002\u7ED3\u6784\u53D1\u751F\u53D8\u5316\u662F\u6307\u6DFB\u52A0\u6216\u8005\u5220\u9664\u81F3\u5C11\u4E00\u4E2A\u5143\u7D20\u7684\u6240\u6709\u64CD\u4F5C\uFF0C\u6216\u8005\u662F\u8C03\u6574\u5185\u90E8\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u4EC5\u4EC5\u53EA\u662F\u8BBE\u7F6E\u5143\u7D20\u7684\u503C\u4E0D\u7B97\u7ED3\u6784\u53D1\u751F\u53D8\u5316\u3002</p><p>\u5728\u8FDB\u884C\u5E8F\u5217\u5316\u6216\u8005\u8FED\u4EE3\u7B49\u64CD\u4F5C\u65F6\uFF0C\u9700\u8981\u6BD4\u8F83\u64CD\u4F5C\u524D\u540E modCount \u662F\u5426\u6539\u53D8\uFF0C\u5982\u679C\u6539\u53D8\u4E86\u9700\u8981\u629B\u51FA ConcurrentModificationException\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">{</span>
    <span class="token comment">// Write out element count, and any hidden stuff</span>
    <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
    s<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out size as capacity for behavioural compatibility with clone()</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out all elements in the proper order.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="_6-\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#_6-\u5E8F\u5217\u5316" aria-hidden="true">#</a> 6. \u5E8F\u5217\u5316</h3><p>ArrayList \u57FA\u4E8E\u6570\u7EC4\u5B9E\u73B0\uFF0C\u5E76\u4E14\u5177\u6709\u52A8\u6001\u6269\u5BB9\u7279\u6027\uFF0C\u56E0\u6B64\u4FDD\u5B58\u5143\u7D20\u7684\u6570\u7EC4\u4E0D\u4E00\u5B9A\u90FD\u4F1A\u88AB\u4F7F\u7528\uFF0C\u90A3\u4E48\u5C31\u6CA1\u5FC5\u8981\u5168\u90E8\u8FDB\u884C\u5E8F\u5217\u5316\u3002</p><p>\u4FDD\u5B58\u5143\u7D20\u7684\u6570\u7EC4 elementData \u4F7F\u7528 transient \u4FEE\u9970\uFF0C\u8BE5\u5173\u952E\u5B57\u58F0\u660E\u6570\u7EC4\u9ED8\u8BA4\u4E0D\u4F1A\u88AB\u5E8F\u5217\u5316\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">transient</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elementData<span class="token punctuation">;</span> <span class="token comment">// non-private to simplify nested class access</span>
</code></pre></div><p>ArrayList \u5B9E\u73B0\u4E86 writeObject() \u548C readObject() \u6765\u63A7\u5236\u53EA\u5E8F\u5217\u5316\u6570\u7EC4\u4E2D\u6709\u5143\u7D20\u586B\u5145\u90A3\u90E8\u5206\u5185\u5BB9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectInputStream</span> s<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    elementData <span class="token operator">=</span> EMPTY_ELEMENTDATA<span class="token punctuation">;</span>

    <span class="token comment">// Read in size, and any hidden stuff</span>
    s<span class="token punctuation">.</span><span class="token function">defaultReadObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Read in capacity</span>
    s<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ignored</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// be like clone(), allocate array based upon size not capacity</span>
        <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a <span class="token operator">=</span> elementData<span class="token punctuation">;</span>
        <span class="token comment">// Read in all elements in the proper order.</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>ObjectOutputStream</span> s<span class="token punctuation">)</span>
    <span class="token keyword">throws</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token punctuation">{</span>
    <span class="token comment">// Write out element count, and any hidden stuff</span>
    <span class="token keyword">int</span> expectedModCount <span class="token operator">=</span> modCount<span class="token punctuation">;</span>
    s<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out size as capacity for behavioural compatibility with clone()</span>
    s<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Write out all elements in the proper order.</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>elementData<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>modCount <span class="token operator">!=</span> expectedModCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentModificationException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5E8F\u5217\u5316\u65F6\u9700\u8981\u4F7F\u7528 ObjectOutputStream \u7684 writeObject() \u5C06\u5BF9\u8C61\u8F6C\u6362\u4E3A\u5B57\u8282\u6D41\u5E76\u8F93\u51FA\u3002\u800C writeObject() \u65B9\u6CD5\u5728\u4F20\u5165\u7684\u5BF9\u8C61\u5B58\u5728 writeObject() \u7684\u65F6\u5019\u4F1A\u53BB\u53CD\u5C04\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684 writeObject() \u6765\u5B9E\u73B0\u5E8F\u5217\u5316\u3002\u53CD\u5E8F\u5217\u5316\u4F7F\u7528\u7684\u662F ObjectInputStream \u7684 readObject() \u65B9\u6CD5\uFF0C\u539F\u7406\u7C7B\u4F3C\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">ArrayList</span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ObjectOutputStream</span> oos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
oos<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="vector" tabindex="-1"><a class="header-anchor" href="#vector" aria-hidden="true">#</a> Vector</h2><h3 id="_1-\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#_1-\u540C\u6B65" aria-hidden="true">#</a> 1. \u540C\u6B65</h3><p>\u5B83\u7684\u5B9E\u73B0\u4E0E ArrayList \u7C7B\u4F3C\uFF0C\u4F46\u662F\u4F7F\u7528\u4E86 synchronized \u8FDB\u884C\u65B9\u6CD5\u540C\u6B65\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">ensureCapacityHelper</span><span class="token punctuation">(</span>elementCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>elementCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> elementCount<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ArrayIndexOutOfBoundsException</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">elementData</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_2-\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#_2-\u6269\u5BB9" aria-hidden="true">#</a> 2. \u6269\u5BB9</h3><p>Vector \u7684\u6784\u9020\u51FD\u6570\u53EF\u4EE5\u4F20\u5165 capacityIncrement \u53C2\u6570\uFF0C\u5B83\u7684\u4F5C\u7528\u662F\u5728\u6269\u5BB9\u65F6\u4F7F\u5BB9\u91CF capacity \u589E\u957F capacityIncrement\u3002\u5982\u679C\u8FD9\u4E2A\u53C2\u6570\u7684\u503C\u5C0F\u4E8E\u7B49\u4E8E 0\uFF0C\u6269\u5BB9\u65F6\u6BCF\u6B21\u90FD\u4EE4 capacity \u4E3A\u539F\u6765\u7684\u4E24\u500D\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Vector</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">,</span> <span class="token keyword">int</span> capacityIncrement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>initialCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Illegal Capacity: &quot;</span><span class="token operator">+</span>
                                           initialCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>elementData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>initialCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>capacityIncrement <span class="token operator">=</span> capacityIncrement<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">grow</span><span class="token punctuation">(</span><span class="token keyword">int</span> minCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// overflow-conscious code</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> elementData<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> oldCapacity <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>capacityIncrement <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                                     capacityIncrement <span class="token operator">:</span> oldCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> minCapacity <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> minCapacity<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newCapacity <span class="token operator">-</span> MAX_ARRAY_SIZE <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        newCapacity <span class="token operator">=</span> <span class="token function">hugeCapacity</span><span class="token punctuation">(</span>minCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elementData<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8C03\u7528\u6CA1\u6709 capacityIncrement \u7684\u6784\u9020\u51FD\u6570\u65F6\uFF0CcapacityIncrement \u503C\u88AB\u8BBE\u7F6E\u4E3A 0\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9ED8\u8BA4\u60C5\u51B5\u4E0B Vector \u6BCF\u6B21\u6269\u5BB9\u65F6\u5BB9\u91CF\u90FD\u4F1A\u7FFB\u500D\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Vector</span><span class="token punctuation">(</span><span class="token keyword">int</span> initialCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>initialCapacity<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">Vector</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_3-\u4E0E-arraylist-\u7684\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#_3-\u4E0E-arraylist-\u7684\u6BD4\u8F83" aria-hidden="true">#</a> 3. \u4E0E ArrayList \u7684\u6BD4\u8F83</h3><ul><li>Vector \u662F\u540C\u6B65\u7684\uFF0C\u56E0\u6B64\u5F00\u9500\u5C31\u6BD4 ArrayList \u8981\u5927\uFF0C\u8BBF\u95EE\u901F\u5EA6\u66F4\u6162\u3002\u6700\u597D\u4F7F\u7528 ArrayList \u800C\u4E0D\u662F Vector\uFF0C\u56E0\u4E3A\u540C\u6B65\u64CD\u4F5C\u5B8C\u5168\u53EF\u4EE5\u7531\u7A0B\u5E8F\u5458\u81EA\u5DF1\u6765\u63A7\u5236\uFF1B</li><li>Vector \u6BCF\u6B21\u6269\u5BB9\u8BF7\u6C42\u5176\u5927\u5C0F\u7684 2 \u500D(\u4E5F\u53EF\u4EE5\u901A\u8FC7\u6784\u9020\u51FD\u6570\u8BBE\u7F6E\u589E\u957F\u7684\u5BB9\u91CF)\uFF0C\u800C ArrayList \u662F 1.5 \u500D\u3002</li></ul><h3 id="_4-\u66FF\u4EE3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#_4-\u66FF\u4EE3\u65B9\u6848" aria-hidden="true">#</a> 4. \u66FF\u4EE3\u65B9\u6848</h3><p>\u53EF\u4EE5\u4F7F\u7528 <code>Collections.synchronizedList();</code> \u5F97\u5230\u4E00\u4E2A\u7EBF\u7A0B\u5B89\u5168\u7684 ArrayList\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> synList <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedList</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E5F\u53EF\u4EE5\u4F7F\u7528 concurrent \u5E76\u53D1\u5305\u4E0B\u7684 CopyOnWriteArrayList \u7C7B\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="copyonwritearraylist" tabindex="-1"><a class="header-anchor" href="#copyonwritearraylist" aria-hidden="true">#</a> CopyOnWriteArrayList</h2><h3 id="\u8BFB\u5199\u5206\u79BB" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u5199\u5206\u79BB" aria-hidden="true">#</a> \u8BFB\u5199\u5206\u79BB</h3><p>\u5199\u64CD\u4F5C\u5728\u4E00\u4E2A\u590D\u5236\u7684\u6570\u7EC4\u4E0A\u8FDB\u884C\uFF0C\u8BFB\u64CD\u4F5C\u8FD8\u662F\u5728\u539F\u59CB\u6570\u7EC4\u4E2D\u8FDB\u884C\uFF0C\u8BFB\u5199\u5206\u79BB\uFF0C\u4E92\u4E0D\u5F71\u54CD\u3002</p><p>\u5199\u64CD\u4F5C\u9700\u8981\u52A0\u9501\uFF0C\u9632\u6B62\u5E76\u53D1\u5199\u5165\u65F6\u5BFC\u81F4\u5199\u5165\u6570\u636E\u4E22\u5931\u3002</p><p>\u5199\u64CD\u4F5C\u7ED3\u675F\u4E4B\u540E\u9700\u8981\u628A\u539F\u59CB\u6570\u7EC4\u6307\u5411\u65B0\u7684\u590D\u5236\u6570\u7EC4\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newElements <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elements<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newElements<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token function">setArray</span><span class="token punctuation">(</span>newElements<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">setArray</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array <span class="token operator">=</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">E</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> a<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u9002\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u9002\u7528\u573A\u666F" aria-hidden="true">#</a> \u9002\u7528\u573A\u666F</h3><p>CopyOnWriteArrayList \u5728\u5199\u64CD\u4F5C\u7684\u540C\u65F6\u5141\u8BB8\u8BFB\u64CD\u4F5C\uFF0C\u5927\u5927\u63D0\u9AD8\u4E86\u8BFB\u64CD\u4F5C\u7684\u6027\u80FD\uFF0C\u56E0\u6B64\u5F88\u9002\u5408\u8BFB\u591A\u5199\u5C11\u7684\u5E94\u7528\u573A\u666F\u3002</p><p>\u4F46\u662F CopyOnWriteArrayList \u6709\u5176\u7F3A\u9677\uFF1A</p><ul><li>\u5185\u5B58\u5360\u7528\uFF1A\u5728\u5199\u64CD\u4F5C\u65F6\u9700\u8981\u590D\u5236\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u4F7F\u5F97\u5185\u5B58\u5360\u7528\u4E3A\u539F\u6765\u7684\u4E24\u500D\u5DE6\u53F3\uFF1B</li><li>\u6570\u636E\u4E0D\u4E00\u81F4\uFF1A\u8BFB\u64CD\u4F5C\u4E0D\u80FD\u8BFB\u53D6\u5B9E\u65F6\u6027\u7684\u6570\u636E\uFF0C\u56E0\u4E3A\u90E8\u5206\u5199\u64CD\u4F5C\u7684\u6570\u636E\u8FD8\u672A\u540C\u6B65\u5230\u8BFB\u6570\u7EC4\u4E2D\u3002</li></ul><p>\u6240\u4EE5 CopyOnWriteArrayList \u4E0D\u9002\u5408\u5185\u5B58\u654F\u611F\u4EE5\u53CA\u5BF9\u5B9E\u65F6\u6027\u8981\u6C42\u5F88\u9AD8\u7684\u573A\u666F\u3002</p><h2 id="linkedlist" tabindex="-1"><a class="header-anchor" href="#linkedlist" aria-hidden="true">#</a> LinkedList</h2><p>LinkedList\u662F\u4E00\u4E2A\u5B9E\u73B0\u4E86List\u63A5\u53E3\u548CDeque\u63A5\u53E3\u7684<strong>\u53CC\u7AEF\u94FE\u8868</strong>\u3002 LinkedList\u5E95\u5C42\u7684\u94FE\u8868\u7ED3\u6784\u4F7F\u5B83<strong>\u652F\u6301\u9AD8\u6548\u7684\u63D2\u5165\u548C\u5220\u9664\u64CD\u4F5C</strong>\uFF0C\u53E6\u5916\u5B83\u5B9E\u73B0\u4E86Deque\u63A5\u53E3\uFF0C\u4F7F\u5F97LinkedList\u7C7B\u4E5F\u5177\u6709\u961F\u5217\u7684\u7279\u6027; LinkedList\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u5982\u679C\u60F3\u4F7FLinkedList\u53D8\u6210\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u53EF\u4EE5\u8C03\u7528\u9759\u6001\u7C7BCollections\u7C7B\u4E2D\u7684synchronizedList\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code>    <span class="token class-name">List</span> list<span class="token operator">=</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_1-\u6982\u89C8-1" tabindex="-1"><a class="header-anchor" href="#_1-\u6982\u89C8-1" aria-hidden="true">#</a> 1. \u6982\u89C8</h3><p>\u57FA\u4E8E\u53CC\u5411\u94FE\u8868\u5B9E\u73B0\uFF0C\u4F7F\u7528 Node \u5B58\u50A8\u94FE\u8868\u8282\u70B9\u4FE1\u606F\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">E</span> item<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> prev<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6BCF\u4E2A\u94FE\u8868\u5B58\u50A8\u4E86 first \u548C last \u6307\u9488\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>
<span class="token keyword">transient</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>
</code></pre></div><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/c8563120-cb00-4dd6-9213-9d9b337a7f7c.png" width="500px"></div><br><h3 id="_2-\u4E0E-arraylist-\u7684\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#_2-\u4E0E-arraylist-\u7684\u6BD4\u8F83" aria-hidden="true">#</a> 2. \u4E0E ArrayList \u7684\u6BD4\u8F83</h3><ul><li>\u7EBF\u7A0B\u5B89\u5168\uFF1AArrayList \u548C LinkedList \u90FD\u662F\u4E0D\u540C\u6B65\u7684\uFF0C\u4E5F\u5C31\u662F\u4E0D\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168</li><li>\u5E95\u5C42\u6570\u636E\u7ED3\u6784\uFF1AArraylist \u5E95\u5C42\u4F7F\u7528\u7684\u662F\u52A8\u6001\u6570\u7EC4(Object \u6570\u7EC4)\uFF1BLinkedList \u5E95\u5C42\u4F7F\u7528\u7684\u662F\u53CC\u5411\u94FE\u8868\u6570\u636E\u7ED3\u6784(JDK1.6\u4E4B\u524D\u4E3A\u5FAA\u73AF\u94FE\u8868\uFF0CJDK1.7\u53D6\u6D88\u4E86\u5FAA\u73AF)</li><li>\u968F\u673A\u8BBF\u95EE\uFF1ALinkedList \u4E0D\u652F\u6301\u9AD8\u6548\u7684\u968F\u673A\u5143\u7D20\u8BBF\u95EE\uFF0C\u800C ArrayList \u652F\u6301</li><li>\u5185\u5B58\u7A7A\u95F4\u5360\u7528\uFF1A ArrayList\u7684\u7A7A \u95F4\u6D6A\u8D39\u4E3B\u8981\u4F53\u73B0\u5728\u5728list\u5217\u8868\u7684\u7ED3\u5C3E\u4F1A\u9884\u7559\u4E00\u5B9A\u7684\u5BB9\u91CF\u7A7A\u95F4\uFF0C\u800CLinkedList\u7684\u7A7A\u95F4\u82B1\u8D39\u5219\u4F53\u73B0\u5728\u5B83\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\u90FD\u9700\u8981\u6D88\u8017\u6BD4ArrayList\u66F4\u591A\u7684\u7A7A\u95F4(\u56E0\u4E3A\u8981\u5B58\u653E\u76F4\u63A5\u540E\u7EE7\u548C\u76F4\u63A5\u524D\u9A71\u4EE5\u53CA\u6570\u636E)\u3002</li><li>\u63D2\u5165\u548C\u5220\u9664\u662F\u5426\u53D7\u5143\u7D20\u4F4D\u7F6E\u7684\u5F71\u54CD\uFF1A <ul><li>ArrayList \u91C7\u7528\u6570\u7EC4\u5B58\u50A8\uFF0C\u6240\u4EE5\u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u53D7\u5143\u7D20\u4F4D\u7F6E\u7684\u5F71\u54CD\u3002\u6267\u884Cadd(E e)\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C ArrayList \u4F1A\u9ED8\u8BA4\u5728\u5C06\u6307\u5B9A\u7684\u5143\u7D20\u8FFD\u52A0\u5230\u6B64\u5217\u8868\u7684\u672B\u5C3E\uFF0C\u8FD9\u79CD\u60C5\u51B5\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662FO(1)\uFF1B\u4F46\u662F\u5982\u679C\u8981\u5728\u6307\u5B9A\u4F4D\u7F6E i \u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u7684\u8BDD(add(int index, E element))\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u4E3A O(n-i)\u3002\u56E0\u4E3A\u5728\u8FDB\u884C\u4E0A\u8FF0\u64CD\u4F5C\u7684\u65F6\u5019\u96C6\u5408\u4E2D\u7B2C i \u548C\u7B2C i \u4E2A\u5143\u7D20\u4E4B\u540E\u7684(n-i)\u4E2A\u5143\u7D20\u90FD\u8981\u6267\u884C\u5411\u540E\u4F4D/\u5411\u524D\u79FB\u4E00\u4F4D\u7684\u64CD\u4F5C\u3002</li><li>LinkedList \u91C7\u7528\u94FE\u8868\u5B58\u50A8\uFF0C\u6240\u4EE5\u5BF9\u4E8Eadd(E e)\u65B9\u6CD5\u7684\u63D2\u5165\uFF0C\u5220\u9664\u5143\u7D20\u65F6\u95F4\u590D\u6742\u5EA6\u4E0D\u53D7\u5143\u7D20\u4F4D\u7F6E\u7684\u5F71\u54CD\uFF0C\u8FD1\u4F3C O(1)\uFF0C\u5982\u679C\u662F\u8981\u5728\u6307\u5B9A\u4F4D\u7F6Ei\u63D2\u5165\u548C\u5220\u9664\u5143\u7D20\u7684\u8BDD(add(int index, E element) \u65F6\u95F4\u590D\u6742\u5EA6\u8FD1\u4F3C\u4E3Ao(n))\u56E0\u4E3A\u9700\u8981\u5148\u79FB\u52A8\u5230\u6307\u5B9A\u4F4D\u7F6E\u518D\u63D2\u5165</li></ul></li></ul><h2 id="hashmap" tabindex="-1"><a class="header-anchor" href="#hashmap" aria-hidden="true">#</a> HashMap</h2><h3 id="_1-\u5B58\u50A8\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#_1-\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a> 1. \u5B58\u50A8\u7ED3\u6784</h3><h4 id="jdk1-8\u4E4B\u524D" tabindex="-1"><a class="header-anchor" href="#jdk1-8\u4E4B\u524D" aria-hidden="true">#</a> JDK1.8\u4E4B\u524D</h4><p>JDK1.8 \u4E4B\u524D HashMap \u5E95\u5C42\u662F \u6570\u7EC4\u548C\u94FE\u8868 \u7ED3\u5408\u5728\u4E00\u8D77\u4F7F\u7528\u4E5F\u5C31\u662F \u94FE\u8868\u6563\u5217\u3002HashMap \u901A\u8FC7 key \u7684 hashCode \u7ECF\u8FC7\u6270\u52A8\u51FD\u6570\u5904\u7406\u8FC7\u540E\u5F97\u5230 hash \u503C\uFF0C\u7136\u540E\u901A\u8FC7 (n - 1) &amp; hash \u5224\u65AD\u5F53\u524D\u5143\u7D20\u5B58\u653E\u7684\u4F4D\u7F6E(\u8FD9\u91CC\u7684 n \u6307\u7684\u662F\u6570\u7EC4\u7684\u957F\u5EA6)\uFF0C\u5982\u679C\u5F53\u524D\u4F4D\u7F6E\u5B58\u5728\u5143\u7D20\u7684\u8BDD\uFF0C\u5C31\u5224\u65AD\u8BE5\u5143\u7D20\u4E0E\u8981\u5B58\u5165\u7684\u5143\u7D20\u7684 hash \u503C\u4EE5\u53CA key \u662F\u5426\u76F8\u540C\uFF0C\u5982\u679C\u76F8\u540C\u7684\u8BDD\uFF0C\u76F4\u63A5\u8986\u76D6\uFF0C\u4E0D\u76F8\u540C\u5C31\u901A\u8FC7\u62C9\u94FE\u6CD5\u89E3\u51B3\u51B2\u7A81\u3002</p><div align="center"><p><img src="`+r+'" alt="" loading="lazy"></p></div><h4 id="jdk1-8\u4E4B\u540E" tabindex="-1"><a class="header-anchor" href="#jdk1-8\u4E4B\u540E" aria-hidden="true">#</a> JDK1.8\u4E4B\u540E</h4><p>jdk1.8\u5728\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u65F6\u6709\u4E86\u8F83\u5927\u7684\u53D8\u5316\uFF0C\u5F53\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u9608\u503C(\u9ED8\u8BA4\u4E3A8)\u65F6\uFF0C\u5C06\u94FE\u8868\u8F6C\u5316\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u4EE5\u51CF\u5C11\u641C\u7D22\u65F6\u95F4\u3002</p><div align="center"><p><img src="'+k+`" alt="" title=":size=500" loading="lazy"></p></div><h3 id="_2-\u62C9\u94FE\u6CD5\u7684\u5DE5\u4F5C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2-\u62C9\u94FE\u6CD5\u7684\u5DE5\u4F5C\u539F\u7406" aria-hidden="true">#</a> 2. \u62C9\u94FE\u6CD5\u7684\u5DE5\u4F5C\u539F\u7406</h3><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;K1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;V1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;K2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;V2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;K3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;V3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>\u65B0\u5EFA\u4E00\u4E2A HashMap\uFF0C\u9ED8\u8BA4\u5927\u5C0F\u4E3A 16\uFF1B</li><li>\u63D2\u5165 &lt;K1,V1&gt; \u952E\u503C\u5BF9\uFF0C\u5148\u8BA1\u7B97 K1 \u7684 hashCode \u4E3A 115\uFF0C\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u5F97\u5230\u6240\u5728\u7684\u6876\u4E0B\u6807 115%16=3\u3002</li><li>\u63D2\u5165 &lt;K2,V2&gt; \u952E\u503C\u5BF9\uFF0C\u5148\u8BA1\u7B97 K2 \u7684 hashCode \u4E3A 118\uFF0C\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u5F97\u5230\u6240\u5728\u7684\u6876\u4E0B\u6807 118%16=6\u3002</li><li>\u63D2\u5165 &lt;K3,V3&gt; \u952E\u503C\u5BF9\uFF0C\u5148\u8BA1\u7B97 K3 \u7684 hashCode \u4E3A 118\uFF0C\u4F7F\u7528\u9664\u7559\u4F59\u6570\u6CD5\u5F97\u5230\u6240\u5728\u7684\u6876\u4E0B\u6807 118%16=6\uFF0C\u63D2\u5728 &lt;K2,V2&gt; \u524D\u9762\u3002</li></ul><p>\u5E94\u8BE5\u6CE8\u610F\u5230\u94FE\u8868\u7684\u63D2\u5165\u662F\u4EE5\u5934\u63D2\u6CD5\u65B9\u5F0F\u8FDB\u884C\u7684\uFF0C\u4F8B\u5982\u4E0A\u9762\u7684 &lt;K3,V3&gt; \u4E0D\u662F\u63D2\u5728 &lt;K2,V2&gt; \u540E\u9762\uFF0C\u800C\u662F\u63D2\u5165\u5728\u94FE\u8868\u5934\u90E8\u3002</p><p>\u67E5\u627E\u9700\u8981\u5206\u6210\u4E24\u6B65\u8FDB\u884C\uFF1A</p><ul><li>\u8BA1\u7B97\u952E\u503C\u5BF9\u6240\u5728\u7684\u6876\uFF1B</li><li>\u5728\u94FE\u8868\u4E0A\u987A\u5E8F\u67E5\u627E\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u663E\u7136\u548C\u94FE\u8868\u7684\u957F\u5EA6\u6210\u6B63\u6BD4\u3002</li></ul><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/e0870f80-b79e-4542-ae39-7420d4b0d8fe.png" width="550px"></div><br><h3 id="_3-put-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-put-\u64CD\u4F5C" aria-hidden="true">#</a> 3. put \u64CD\u4F5C</h3><h4 id="jdk1-8\u4E4B\u524D-1" tabindex="-1"><a class="header-anchor" href="#jdk1-8\u4E4B\u524D-1" aria-hidden="true">#</a> JDK1.8\u4E4B\u524D</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">==</span> EMPTY_TABLE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">inflateTable</span><span class="token punctuation">(</span>threshold<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u952E\u4E3A null \u5355\u72EC\u5904\u7406</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token function">putForNullKey</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u786E\u5B9A\u6876\u4E0B\u6807</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5148\u627E\u51FA\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u952E\u4E3A key \u7684\u952E\u503C\u5BF9\uFF0C\u5982\u679C\u5B58\u5728\u7684\u8BDD\u5C31\u66F4\u65B0\u8FD9\u4E2A\u952E\u503C\u5BF9\u7684\u503C\u4E3A value</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> k<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">recordAccess</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token comment">// \u63D2\u5165\u65B0\u952E\u503C\u5BF9</span>
    <span class="token function">addEntry</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>HashMap \u5141\u8BB8\u63D2\u5165\u952E\u4E3A null \u7684\u952E\u503C\u5BF9\u3002\u4F46\u662F\u56E0\u4E3A\u65E0\u6CD5\u8C03\u7528 null \u7684 hashCode() \u65B9\u6CD5\uFF0C\u4E5F\u5C31\u65E0\u6CD5\u786E\u5B9A\u8BE5\u952E\u503C\u5BF9\u7684\u6876\u4E0B\u6807\uFF0C\u53EA\u80FD\u901A\u8FC7\u5F3A\u5236\u6307\u5B9A\u4E00\u4E2A\u6876\u4E0B\u6807\u6765\u5B58\u653E\u3002HashMap \u4F7F\u7528\u7B2C 0 \u4E2A\u6876\u5B58\u653E\u952E\u4E3A null \u7684\u952E\u503C\u5BF9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">V</span> <span class="token function">putForNullKey</span><span class="token punctuation">(</span><span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">recordAccess</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">addEntry</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u4F7F\u7528\u94FE\u8868\u7684\u5934\u63D2\u6CD5\uFF0C\u4E5F\u5C31\u662F\u65B0\u7684\u952E\u503C\u5BF9\u63D2\u5728\u94FE\u8868\u7684\u5934\u90E8\uFF0C\u800C\u4E0D\u662F\u94FE\u8868\u7684\u5C3E\u90E8\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">addEntry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> bucketIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>size <span class="token operator">&gt;=</span> threshold<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        hash <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> key<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        bucketIndex <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">createEntry</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> bucketIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">createEntry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> bucketIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5934\u63D2\u6CD5\uFF0C\u94FE\u8868\u5934\u90E8\u6307\u5411\u65B0\u7684\u952E\u503C\u5BF9</span>
    table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    size<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">Entry</span><span class="token punctuation">(</span><span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token class-name">K</span> k<span class="token punctuation">,</span> <span class="token class-name">V</span> v<span class="token punctuation">,</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> v<span class="token punctuation">;</span>
    next <span class="token operator">=</span> n<span class="token punctuation">;</span>
    key <span class="token operator">=</span> k<span class="token punctuation">;</span>
    hash <span class="token operator">=</span> h<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="jdk1-8\u4E4B\u540E-1" tabindex="-1"><a class="header-anchor" href="#jdk1-8\u4E4B\u540E-1" aria-hidden="true">#</a> JDK1.8\u4E4B\u540E</h4><p>HashMap\u53EA\u63D0\u4F9B\u4E86put\u7528\u4E8E\u6DFB\u52A0\u5143\u7D20\uFF0CputVal\u65B9\u6CD5\u53EA\u662F\u7ED9put\u65B9\u6CD5\u8C03\u7528\u7684\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5E76\u6CA1\u6709\u63D0\u4F9B\u7ED9\u7528\u6237\u4F7F\u7528\u3002</p><p>\u5BF9putVal\u65B9\u6CD5\u6DFB\u52A0\u5143\u7D20\u7684\u5206\u6790\u5982\u4E0B\uFF1A</p><ol><li>\u5982\u679C\u5B9A\u4F4D\u5230\u7684\u6570\u7EC4\u4F4D\u7F6E\u6CA1\u6709\u5143\u7D20 \u5C31\u76F4\u63A5\u63D2\u5165\u3002</li><li>\u5982\u679C\u5B9A\u4F4D\u5230\u7684\u6570\u7EC4\u4F4D\u7F6E\u6709\u5143\u7D20\u5C31\u548C\u8981\u63D2\u5165\u7684key\u6BD4\u8F83\uFF0C\u5982\u679Ckey\u76F8\u540C\u5C31\u76F4\u63A5\u8986\u76D6\uFF0C\u5982\u679Ckey\u4E0D\u76F8\u540C\uFF0C\u5C31\u5224\u65ADp\u662F\u5426\u662F\u4E00\u4E2A\u6811\u8282\u70B9\uFF0C\u5982\u679C\u662F\u5C31\u8C03\u7528e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value)\u5C06\u5143\u7D20\u6DFB\u52A0\u8FDB\u5165\u3002\u5982\u679C\u4E0D\u662F\u5C31\u904D\u5386\u94FE\u8868\u63D2\u5165(\u63D2\u5165\u7684\u662F\u94FE\u8868\u5C3E\u90E8)\u3002</li></ol><div align="center"><p><img src="`+d+`" alt="" title=":size=800" loading="lazy"></p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">final</span> <span class="token class-name">V</span> <span class="token function">putVal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">boolean</span> onlyIfAbsent<span class="token punctuation">,</span>
                   <span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            n <span class="token operator">=</span> <span class="token punctuation">(</span>tab <span class="token operator">=</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>i <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            tab<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                e <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                e <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putTreeVal</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> binCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>binCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        p<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token function">newNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>binCount <span class="token operator">&gt;=</span> TREEIFY_THRESHOLD <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// -1 for 1st</span>
                            <span class="token function">treeifyBin</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    p <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// existing mapping for key</span>
                <span class="token class-name">V</span> oldValue <span class="token operator">=</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyIfAbsent <span class="token operator">||</span> oldValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    e<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
                <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>size <span class="token operator">&gt;</span> threshold<span class="token punctuation">)</span>
            <span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span>evict<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="_4-\u786E\u5B9A\u6876\u4E0B\u6807" tabindex="-1"><a class="header-anchor" href="#_4-\u786E\u5B9A\u6876\u4E0B\u6807" aria-hidden="true">#</a> 4. \u786E\u5B9A\u6876\u4E0B\u6807</h3><p>\u5F88\u591A\u64CD\u4F5C\u90FD\u9700\u8981\u5148\u786E\u5B9A\u4E00\u4E2A\u952E\u503C\u5BF9\u6240\u5728\u7684\u6876\u4E0B\u6807\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">int</span> hash <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>4.1 \u8BA1\u7B97 hash \u503C</strong></p><h4 id="jdk1-8\u4E4B\u524D-2" tabindex="-1"><a class="header-anchor" href="#jdk1-8\u4E4B\u524D-2" aria-hidden="true">#</a> JDK1.8\u4E4B\u524D</h4><p>\u6240\u8C13\u6270\u52A8\u51FD\u6570\u6307\u7684\u5C31\u662F HashMap \u7684 hash \u65B9\u6CD5\u3002\u4F7F\u7528 hash \u65B9\u6CD5\u4E5F\u5C31\u662F\u6270\u52A8\u51FD\u6570\u662F\u4E3A\u4E86\u9632\u6B62\u4E00\u4E9B\u5B9E\u73B0\u6BD4\u8F83\u5DEE\u7684 hashCode() \u65B9\u6CD5 \u6362\u53E5\u8BDD\u8BF4\u4F7F\u7528\u6270\u52A8\u51FD\u6570\u4E4B\u540E\u53EF\u4EE5\u51CF\u5C11\u78B0\u649E\u3002</p><p>\u76F8\u6BD4\u4E8E JDK1.8 \u7684 hash \u65B9\u6CD5 \uFF0CJDK 1.7 \u7684 hash \u65B9\u6CD5\u7684\u6027\u80FD\u4F1A\u7A0D\u5DEE\u4E00\u70B9\u70B9\uFF0C\u56E0\u4E3A\u6BD5\u7ADF\u6270\u52A8\u4E86 4 \u6B21</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> hashSeed<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">!=</span> h <span class="token operator">&amp;&amp;</span> k <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>Hashing</span><span class="token punctuation">.</span><span class="token function">stringHash32</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    h <span class="token operator">^=</span> k<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// This function ensures that hashCodes that differ only by</span>
    <span class="token comment">// constant multiples at each bit position have a bounded</span>
    <span class="token comment">// number of collisions (approximately 8 at default load factor).</span>
    h <span class="token operator">^=</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> h <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="jdk1-8\u4E4B\u540E-2" tabindex="-1"><a class="header-anchor" href="#jdk1-8\u4E4B\u540E-2" aria-hidden="true">#</a> JDK1.8\u4E4B\u540E</h4><div class="language-java ext-java"><pre class="language-java"><code>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> h<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>h <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre></div><p><strong>4.2 \u53D6\u6A21</strong></p><p>\u4EE4 x = 1&lt;&lt;4\uFF0C\u5373 x \u4E3A 2 \u7684 4 \u6B21\u65B9\uFF0C\u5B83\u5177\u6709\u4EE5\u4E0B\u6027\u8D28\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>x   : 00010000
x-1 : 00001111
</code></pre></div><p>\u4EE4\u4E00\u4E2A\u6570 y \u4E0E x-1 \u505A\u4E0E\u8FD0\u7B97\uFF0C\u53EF\u4EE5\u53BB\u9664 y \u4F4D\u7EA7\u8868\u793A\u7684\u7B2C 4 \u4F4D\u4EE5\u4E0A\u6570\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>y       : 10110010
x-1     : 00001111
y&amp;(x-1) : 00000010
</code></pre></div><p>\u8FD9\u4E2A\u6027\u8D28\u548C y \u5BF9 x \u53D6\u6A21\u6548\u679C\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>y   : 10110010
x   : 00010000
y%x : 00000010
</code></pre></div><p>\u6211\u4EEC\u77E5\u9053\uFF0C\u4F4D\u8FD0\u7B97\u7684\u4EE3\u4EF7\u6BD4\u6C42\u6A21\u8FD0\u7B97\u5C0F\u7684\u591A\uFF0C\u56E0\u6B64\u5728\u8FDB\u884C\u8FD9\u79CD\u8BA1\u7B97\u65F6\u7528\u4F4D\u8FD0\u7B97\u7684\u8BDD\u80FD\u5E26\u6765\u66F4\u9AD8\u7684\u6027\u80FD\u3002</p><p>\u786E\u5B9A\u6876\u4E0B\u6807\u7684\u6700\u540E\u4E00\u6B65\u662F\u5C06 key \u7684 hash \u503C\u5BF9\u6876\u4E2A\u6570\u53D6\u6A21\uFF1Ahash%capacity\uFF0C\u5982\u679C\u80FD\u4FDD\u8BC1 capacity \u4E3A 2 \u7684 n \u6B21\u65B9\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u64CD\u4F5C\u8F6C\u6362\u4E3A\u4F4D\u8FD0\u7B97\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">indexFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token keyword">int</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> h <span class="token operator">&amp;</span> <span class="token punctuation">(</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_5-\u6269\u5BB9-\u57FA\u672C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_5-\u6269\u5BB9-\u57FA\u672C\u539F\u7406" aria-hidden="true">#</a> 5. \u6269\u5BB9-\u57FA\u672C\u539F\u7406</h3><p>\u8BBE HashMap \u7684 table \u957F\u5EA6\u4E3A M\uFF0C\u9700\u8981\u5B58\u50A8\u7684\u952E\u503C\u5BF9\u6570\u91CF\u4E3A N\uFF0C\u5982\u679C\u54C8\u5E0C\u51FD\u6570\u6EE1\u8DB3\u5747\u5300\u6027\u7684\u8981\u6C42\uFF0C\u90A3\u4E48\u6BCF\u6761\u94FE\u8868\u7684\u957F\u5EA6\u5927\u7EA6\u4E3A N/M\uFF0C\u56E0\u6B64\u5E73\u5747\u67E5\u627E\u6B21\u6570\u7684\u590D\u6742\u5EA6\u4E3A O(N/M)\u3002</p><p>\u4E3A\u4E86\u8BA9\u67E5\u627E\u7684\u6210\u672C\u964D\u4F4E\uFF0C\u5E94\u8BE5\u5C3D\u53EF\u80FD\u4F7F\u5F97 N/M \u5C3D\u53EF\u80FD\u5C0F\uFF0C\u56E0\u6B64\u9700\u8981\u4FDD\u8BC1 M \u5C3D\u53EF\u80FD\u5927\uFF0C\u4E5F\u5C31\u662F\u8BF4 table \u8981\u5C3D\u53EF\u80FD\u5927\u3002HashMap \u91C7\u7528\u52A8\u6001\u6269\u5BB9\u6765\u6839\u636E\u5F53\u524D\u7684 N \u503C\u6765\u8C03\u6574 M \u503C\uFF0C\u4F7F\u5F97\u7A7A\u95F4\u6548\u7387\u548C\u65F6\u95F4\u6548\u7387\u90FD\u80FD\u5F97\u5230\u4FDD\u8BC1\u3002</p><p>\u548C\u6269\u5BB9\u76F8\u5173\u7684\u53C2\u6570\u4E3B\u8981\u6709\uFF1Acapacity\u3001size\u3001threshold \u548C load_factor\u3002</p><table><thead><tr><th style="text-align:center;">\u53C2\u6570</th><th style="text-align:left;">\u542B\u4E49</th></tr></thead><tbody><tr><td style="text-align:center;">capacity</td><td style="text-align:left;">table \u7684\u5BB9\u91CF\u5927\u5C0F\uFF0C\u9ED8\u8BA4\u4E3A 16\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F capacity \u5FC5\u987B\u4FDD\u8BC1\u4E3A 2 \u7684 n \u6B21\u65B9\u3002</td></tr><tr><td style="text-align:center;">size</td><td style="text-align:left;">\u952E\u503C\u5BF9\u6570\u91CF\u3002</td></tr><tr><td style="text-align:center;">threshold</td><td style="text-align:left;">size \u7684\u4E34\u754C\u503C\uFF0C\u5F53 size \u5927\u4E8E\u7B49\u4E8E threshold \u5C31\u5FC5\u987B\u8FDB\u884C\u6269\u5BB9\u64CD\u4F5C\u3002</td></tr><tr><td style="text-align:center;">loadFactor</td><td style="text-align:left;">\u88C5\u8F7D\u56E0\u5B50\uFF0Ctable \u80FD\u591F\u4F7F\u7528\u7684\u6BD4\u4F8B\uFF0Cthreshold = (int)(newCapacity * loadFactor)\u3002</td></tr><tr><td style="text-align:center;">MAXIMUM_CAPACITY</td><td style="text-align:left;">\u6700\u5927\u5BB9\u91CF2^30, \u6700\u7EC8\u5BB9\u91CFInteger.MAX_VALUE</td></tr></tbody></table><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAXIMUM_CAPACITY <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> DEFAULT_LOAD_FACTOR <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>

    <span class="token keyword">transient</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

    <span class="token keyword">transient</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token keyword">int</span> threshold<span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">;</span>

    <span class="token keyword">transient</span> <span class="token keyword">int</span> modCount<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u4ECE\u4E0B\u9762\u7684\u6DFB\u52A0\u5143\u7D20\u4EE3\u7801\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C\u5F53\u9700\u8981\u6269\u5BB9\u65F6\uFF0C\u4EE4 capacity \u4E3A\u539F\u6765\u7684\u4E24\u500D\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">addEntry</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">,</span> <span class="token keyword">int</span> bucketIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    table<span class="token punctuation">[</span>bucketIndex<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size<span class="token operator">++</span> <span class="token operator">&gt;=</span> threshold<span class="token punctuation">)</span>
        <span class="token function">resize</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> table<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6269\u5BB9\u4F7F\u7528 resize() \u5B9E\u73B0\uFF0C\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u6269\u5BB9\u64CD\u4F5C\u540C\u6837\u9700\u8981\u628A oldTable \u7684\u6240\u6709\u952E\u503C\u5BF9\u91CD\u65B0\u63D2\u5165 newTable \u4E2D\uFF0C\u56E0\u6B64\u8FD9\u4E00\u6B65\u662F\u5F88\u8D39\u65F6\u7684\u3002</p><p>\u8FDB\u884C\u6269\u5BB9\uFF0C\u4F1A\u4F34\u968F\u7740\u4E00\u6B21\u91CD\u65B0hash\u5206\u914D\uFF0C\u5E76\u4E14\u4F1A\u904D\u5386hash\u8868\u4E2D\u6240\u6709\u7684\u5143\u7D20\uFF0C\u662F\u975E\u5E38\u8017\u65F6\u7684\u3002\u5728\u7F16\u5199\u7A0B\u5E8F\u4E2D\uFF0C\u8981\u5C3D\u91CF\u907F\u514Dresize\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">int</span> newCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> oldTable <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> oldCapacity <span class="token operator">=</span> oldTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCapacity <span class="token operator">==</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        threshold <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Entry</span><span class="token punctuation">[</span>newCapacity<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">transfer</span><span class="token punctuation">(</span>newTable<span class="token punctuation">)</span><span class="token punctuation">;</span>
    table <span class="token operator">=</span> newTable<span class="token punctuation">;</span>
    threshold <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>newCapacity <span class="token operator">*</span> loadFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newTable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Entry</span><span class="token punctuation">[</span><span class="token punctuation">]</span> src <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> newCapacity <span class="token operator">=</span> newTable<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> src<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> src<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            src<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
                <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token function">indexFor</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash<span class="token punctuation">,</span> newCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span>next <span class="token operator">=</span> newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                newTable<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
                e <span class="token operator">=</span> next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>e <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="_6-\u6269\u5BB9-\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807" tabindex="-1"><a class="header-anchor" href="#_6-\u6269\u5BB9-\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807" aria-hidden="true">#</a> 6. \u6269\u5BB9-\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807</h3><p>\u5728\u8FDB\u884C\u6269\u5BB9\u65F6\uFF0C\u9700\u8981\u628A\u952E\u503C\u5BF9\u91CD\u65B0\u653E\u5230\u5BF9\u5E94\u7684\u6876\u4E0A\u3002HashMap \u4F7F\u7528\u4E86\u4E00\u4E2A\u7279\u6B8A\u7684\u673A\u5236\uFF0C\u53EF\u4EE5\u964D\u4F4E\u91CD\u65B0\u8BA1\u7B97\u6876\u4E0B\u6807\u7684\u64CD\u4F5C\u3002</p><p>\u5047\u8BBE\u539F\u6570\u7EC4\u957F\u5EA6 capacity \u4E3A 16\uFF0C\u6269\u5BB9\u4E4B\u540E new capacity \u4E3A 32\uFF1A</p><div class="language-html ext-html"><pre class="language-html"><code>capacity     : 00010000
new capacity : 00100000
</code></pre></div><p>\u5BF9\u4E8E\u4E00\u4E2A Key\uFF0C</p><ul><li>\u5B83\u7684\u54C8\u5E0C\u503C\u5982\u679C\u5728\u7B2C 5 \u4F4D\u4E0A\u4E3A 0\uFF0C\u90A3\u4E48\u53D6\u6A21\u5F97\u5230\u7684\u7ED3\u679C\u548C\u4E4B\u524D\u4E00\u6837\uFF1B</li><li>\u5982\u679C\u4E3A 1\uFF0C\u90A3\u4E48\u5F97\u5230\u7684\u7ED3\u679C\u4E3A\u539F\u6765\u7684\u7ED3\u679C +16\u3002</li></ul><h3 id="_7-\u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF" tabindex="-1"><a class="header-anchor" href="#_7-\u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF" aria-hidden="true">#</a> 7. \u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF</h3><p>HashMap \u6784\u9020\u51FD\u6570\u5141\u8BB8\u7528\u6237\u4F20\u5165\u7684\u5BB9\u91CF\u4E0D\u662F 2 \u7684 n \u6B21\u65B9\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u81EA\u52A8\u5730\u5C06\u4F20\u5165\u7684\u5BB9\u91CF\u8F6C\u6362\u4E3A 2 \u7684 n \u6B21\u65B9\u3002</p><p>\u5148\u8003\u8651\u5982\u4F55\u6C42\u4E00\u4E2A\u6570\u7684\u63A9\u7801\uFF0C\u5BF9\u4E8E 10010000\uFF0C\u5B83\u7684\u63A9\u7801\u4E3A 11111111\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u65B9\u6CD5\u5F97\u5230\uFF1A</p><div class="language-text ext-text"><pre class="language-text"><code>mask |= mask &gt;&gt; 1    11011000
mask |= mask &gt;&gt; 2    11111110
mask |= mask &gt;&gt; 4    11111111
</code></pre></div><p>mask+1 \u662F\u5927\u4E8E\u539F\u59CB\u6570\u5B57\u7684\u6700\u5C0F\u7684 2 \u7684 n \u6B21\u65B9\u3002</p><div class="language-text ext-text"><pre class="language-text"><code>num     10010000
mask+1 100000000
</code></pre></div><p>\u4EE5\u4E0B\u662F HashMap \u4E2D\u8BA1\u7B97\u6570\u7EC4\u5BB9\u91CF\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">tableSizeFor</span><span class="token punctuation">(</span><span class="token keyword">int</span> cap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n <span class="token operator">=</span> cap <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">;</span>
    n <span class="token operator">|=</span> n <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;=</span> MAXIMUM_CAPACITY<span class="token punctuation">)</span> <span class="token operator">?</span> MAXIMUM_CAPACITY <span class="token operator">:</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="_8-hashmap-\u591A\u7EBF\u7A0B\u64CD\u4F5C\u5BFC\u81F4\u6B7B\u5FAA\u73AF\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#_8-hashmap-\u591A\u7EBF\u7A0B\u64CD\u4F5C\u5BFC\u81F4\u6B7B\u5FAA\u73AF\u95EE\u9898" aria-hidden="true">#</a> 8. HashMap \u591A\u7EBF\u7A0B\u64CD\u4F5C\u5BFC\u81F4\u6B7B\u5FAA\u73AF\u95EE\u9898</h3><p>\u4E3B\u8981\u539F\u56E0\u5728\u4E8E \u5E76\u53D1\u4E0B\u7684Rehash \u4F1A\u9020\u6210\u5143\u7D20\u4E4B\u95F4\u4F1A\u5F62\u6210\u4E00\u4E2A\u5FAA\u73AF\u94FE\u8868\u3002\u4E0D\u8FC7\uFF0Cjdk 1.8 \u540E\u89E3\u51B3\u4E86\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F46\u662F\u8FD8\u662F\u4E0D\u5EFA\u8BAE\u5728\u591A\u7EBF\u7A0B\u4E0B\u4F7F\u7528 HashMap,\u56E0\u4E3A\u591A\u7EBF\u7A0B\u4E0B\u4F7F\u7528 HashMap \u8FD8\u662F\u4F1A\u5B58\u5728\u5176\u4ED6\u95EE\u9898\u6BD4\u5982\u6570\u636E\u4E22\u5931\u3002\u5E76\u53D1\u73AF\u5883\u4E0B\u63A8\u8350\u4F7F\u7528 ConcurrentHashMap \u3002</p><p>\u8BE6\u60C5\u8BF7\u67E5\u770B\uFF1Ahttps://coolshell.cn/articles/9606.html</p><h3 id="_9-\u4E0E-hashtable-\u7684\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#_9-\u4E0E-hashtable-\u7684\u6BD4\u8F83" aria-hidden="true">#</a> 9. \u4E0E HashTable \u7684\u6BD4\u8F83</h3><ul><li>\u7EBF\u7A0B\u662F\u5426\u5B89\u5168\uFF1A HashMap \u662F\u975E\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0CHashTable \u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF1BHashTable \u5185\u90E8\u7684\u65B9\u6CD5\u57FA\u672C\u90FD\u7ECF\u8FC7synchronized \u4FEE\u9970</li><li>\u6548\u7387\uFF1A \u56E0\u4E3A\u7EBF\u7A0B\u5B89\u5168\u7684\u95EE\u9898\uFF0CHashMap \u8981\u6BD4 HashTable \u6548\u7387\u9AD8\u4E00\u70B9\u3002\u53E6\u5916\uFF0CHashTable \u57FA\u672C\u88AB\u6DD8\u6C70</li><li>\u5BF9Null key \u548CNull value\u7684\u652F\u6301\uFF1A HashMap \u4E2D\uFF0Cnull \u53EF\u4EE5\u4F5C\u4E3A\u952E\uFF0C\u8FD9\u6837\u7684\u952E\u53EA\u6709\u4E00\u4E2A\uFF0C\u53EF\u4EE5\u6709\u4E00\u4E2A\u6216\u591A\u4E2A\u952E\u6240\u5BF9\u5E94\u7684\u503C\u4E3A null\u3002\u4F46\u662F\u5728 HashTable \u4E2D put \u8FDB\u7684\u952E\u503C\u53EA\u8981\u6709\u4E00\u4E2A null\uFF0C\u76F4\u63A5\u629B\u51FA NullPointerException\u3002</li><li>\u5E95\u5C42\u6570\u636E\u7ED3\u6784\uFF1A JDK1.8 \u4EE5\u540E\u7684 HashMap \u5728\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u65F6\u6709\u4E86\u8F83\u5927\u7684\u53D8\u5316\uFF0C\u5F53\u94FE\u8868\u957F\u5EA6\u5927\u4E8E\u9608\u503C(\u9ED8\u8BA4\u4E3A8)\u65F6\uFF0C\u5C06\u94FE\u8868\u8F6C\u5316\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u4EE5\u51CF\u5C11\u641C\u7D22\u65F6\u95F4\u3002Hashtable \u6CA1\u6709\u8FD9\u6837\u7684\u673A\u5236\u3002</li><li>\u63A5\u53E3\u7EE7\u627F\uFF1AHashMap\u7EE7\u627FAbstractMap\uFF0CHashtable\u7EE7\u627FDictionary\u5B9E\u73B0Map</li><li>\u521D\u59CB\u5BB9\u91CF\u5927\u5C0F\u548C\u6BCF\u6B21\u6269\u5145\u5BB9\u91CF\u5927\u5C0F\u7684\u4E0D\u540C \uFF1A <ul><li>\u521B\u5EFA\u65F6\u5982\u679C\u4E0D\u6307\u5B9A\u5BB9\u91CF\u521D\u59CB\u503C\uFF0CHashtable \u9ED8\u8BA4\u7684\u521D\u59CB\u5927\u5C0F\u4E3A11\uFF0C\u4E4B\u540E\u6BCF\u6B21\u6269\u5145\uFF0C\u5BB9\u91CF\u53D8\u4E3A\u539F\u6765\u76842n+1\u3002HashMap \u9ED8\u8BA4\u7684\u521D\u59CB\u5316\u5927\u5C0F\u4E3A16\u3002\u4E4B\u540E\u6BCF\u6B21\u6269\u5145\uFF0C\u5BB9\u91CF\u53D8\u4E3A\u539F\u6765\u76842\u500D\u3002</li><li>\u521B\u5EFA\u65F6\u5982\u679C\u7ED9\u5B9A\u4E86\u5BB9\u91CF\u521D\u59CB\u503C\uFF0C\u90A3\u4E48 Hashtable \u4F1A\u76F4\u63A5\u4F7F\u7528\u4F60\u7ED9\u5B9A\u7684\u5927\u5C0F\uFF0C\u800C HashMap \u4F1A\u5C06\u5176\u6269\u5145\u4E3A2\u7684\u5E42\u6B21\u65B9\u5927\u5C0F(HashMap \u4E2D\u7684tableSizeFor()\u65B9\u6CD5\u4FDD\u8BC1)\u3002</li></ul></li><li>HashMap\u7684\u8FED\u4EE3\u5668(Iterator)\u662Ffail-fast\u8FED\u4EE3\u5668\uFF0C\u800CHashtable\u7684enumerator\u8FED\u4EE3\u5668\u4E0D\u662Ffail-fast\u7684</li><li>HashMap \u4E0D\u80FD\u4FDD\u8BC1\u968F\u7740\u65F6\u95F4\u7684\u63A8\u79FB Map \u4E2D\u7684\u5143\u7D20\u6B21\u5E8F\u662F\u4E0D\u53D8\u7684\u3002</li></ul><h3 id="_10-\u4E0Ehashset-\u7684\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#_10-\u4E0Ehashset-\u7684\u6BD4\u8F83" aria-hidden="true">#</a> 10. \u4E0EHashSet \u7684\u6BD4\u8F83</h3><p><code>HashSet</code> \u6E90\u7801\u7684\u8BDD\u5C31\u5E94\u8BE5\u77E5\u9053\uFF1AHashSet \u5E95\u5C42\u5C31\u662F\u57FA\u4E8E HashMap \u5B9E\u73B0\u7684\u3002(HashSet \u7684\u6E90\u7801\u975E\u5E38\u975E\u5E38\u5C11\uFF0C\u56E0\u4E3A\u9664\u4E86 <code>clone() </code>\u3001<code>writeObject()</code>\u3001<code>readObject()</code>\u662F HashSet \u81EA\u5DF1\u4E0D\u5F97\u4E0D\u5B9E\u73B0\u4E4B\u5916\uFF0C\u5176\u4ED6\u65B9\u6CD5\u90FD\u662F\u76F4\u63A5\u8C03\u7528 HashMap \u4E2D\u7684\u65B9\u6CD5\u3002</p><table><thead><tr><th style="text-align:center;">HashMap</th><th style="text-align:center;">HashSet</th></tr></thead><tbody><tr><td style="text-align:center;">\u5B9E\u73B0\u4E86Map\u63A5\u53E3</td><td style="text-align:center;">\u5B9E\u73B0Set\u63A5\u53E3</td></tr><tr><td style="text-align:center;">\u5B58\u50A8\u952E\u503C\u5BF9</td><td style="text-align:center;">\u4EC5\u5B58\u50A8\u5BF9\u8C61</td></tr><tr><td style="text-align:center;">\u8C03\u7528 <code>put()</code>\u5411map\u4E2D\u6DFB\u52A0\u5143\u7D20</td><td style="text-align:center;">\u8C03\u7528 <code>add()</code>\u65B9\u6CD5\u5411Set\u4E2D\u6DFB\u52A0\u5143\u7D20</td></tr><tr><td style="text-align:center;">HashMap\u4F7F\u7528\u952E(Key)\u8BA1\u7B97Hashcode</td><td style="text-align:center;">HashSet\u4F7F\u7528\u6210\u5458\u5BF9\u8C61\u6765\u8BA1\u7B97hashcode\u503C\uFF0C\u5BF9\u4E8E\u4E24\u4E2A\u5BF9\u8C61\u6765\u8BF4hashcode\u53EF\u80FD\u76F8\u540C\uFF0C\u6240\u4EE5equals()\u65B9\u6CD5\u7528\u6765\u5224\u65AD\u5BF9\u8C61\u7684\u76F8\u7B49\u6027\uFF0C</td></tr></tbody></table><p><strong>HashSet\u5982\u4F55\u68C0\u67E5\u91CD\u590D</strong></p><p>\u5F53\u4F60\u628A\u5BF9\u8C61\u52A0\u5165HashSet\u65F6\uFF0CHashSet\u4F1A\u5148\u8BA1\u7B97\u5BF9\u8C61\u7684hashcode\u503C\u6765\u5224\u65AD\u5BF9\u8C61\u52A0\u5165\u7684\u4F4D\u7F6E\uFF0C\u540C\u65F6\u4E5F\u4F1A\u4E0E\u5176\u4ED6\u52A0\u5165\u7684\u5BF9\u8C61\u7684hashcode\u503C\u4F5C\u6BD4\u8F83\uFF0C\u5982\u679C\u6CA1\u6709\u76F8\u7B26\u7684hashcode\uFF0CHashSet\u4F1A\u5047\u8BBE\u5BF9\u8C61\u6CA1\u6709\u91CD\u590D\u51FA\u73B0\u3002\u4F46\u662F\u5982\u679C\u53D1\u73B0\u6709\u76F8\u540Chashcode\u503C\u7684\u5BF9\u8C61\uFF0C\u8FD9\u65F6\u4F1A\u8C03\u7528equals()\u65B9\u6CD5\u6765\u68C0\u67E5hashcode\u76F8\u7B49\u7684\u5BF9\u8C61\u662F\u5426\u771F\u7684\u76F8\u540C\u3002\u5982\u679C\u4E24\u8005\u76F8\u540C\uFF0CHashSet\u5C31\u4E0D\u4F1A\u8BA9\u52A0\u5165\u64CD\u4F5C\u6210\u529F\u3002(\u6458\u81EA\u6211\u7684Java\u542F\u8499\u4E66\u300AHead fist java\u300B\u7B2C\u4E8C\u7248)</p><p><strong>hashCode()\u4E0Eequals()\u7684\u76F8\u5173\u89C4\u5B9A\uFF1A</strong></p><ol><li>\u5982\u679C\u4E24\u4E2A\u5BF9\u8C61\u76F8\u7B49\uFF0C\u5219hashcode\u4E00\u5B9A\u4E5F\u662F\u76F8\u540C\u7684</li><li>\u4E24\u4E2A\u5BF9\u8C61\u76F8\u7B49,\u5BF9\u4E24\u4E2Aequals\u65B9\u6CD5\u8FD4\u56DEtrue</li><li>\u4E24\u4E2A\u5BF9\u8C61\u6709\u76F8\u540C\u7684hashcode\u503C\uFF0C\u5B83\u4EEC\u4E5F\u4E0D\u4E00\u5B9A\u662F\u76F8\u7B49\u7684</li><li>\u7EFC\u4E0A\uFF0Cequals\u65B9\u6CD5\u88AB\u8986\u76D6\u8FC7\uFF0C\u5219hashCode\u65B9\u6CD5\u4E5F\u5FC5\u987B\u88AB\u8986\u76D6</li><li>hashCode()\u7684\u9ED8\u8BA4\u884C\u4E3A\u662F\u5BF9\u5806\u4E0A\u7684\u5BF9\u8C61\u4EA7\u751F\u72EC\u7279\u503C\u3002\u5982\u679C\u6CA1\u6709\u91CD\u5199hashCode()\uFF0C\u5219\u8BE5class\u7684\u4E24\u4E2A\u5BF9\u8C61\u65E0\u8BBA\u5982\u4F55\u90FD\u4E0D\u4F1A\u76F8\u7B49(\u5373\u4F7F\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u6307\u5411\u76F8\u540C\u7684\u6570\u636E)\u3002</li></ol><p><strong>==\u4E0Eequals\u7684\u533A\u522B</strong></p><ol><li>==\u662F\u5224\u65AD\u4E24\u4E2A\u53D8\u91CF\u6216\u5B9E\u4F8B\u662F\u4E0D\u662F\u6307\u5411\u540C\u4E00\u4E2A\u5185\u5B58\u7A7A\u95F4 equals\u662F\u5224\u65AD\u4E24\u4E2A\u53D8\u91CF\u6216\u5B9E\u4F8B\u6240\u6307\u5411\u7684\u5185\u5B58\u7A7A\u95F4\u7684\u503C\u662F\u4E0D\u662F\u76F8\u540C</li><li>==\u662F\u6307\u5BF9\u5185\u5B58\u5730\u5740\u8FDB\u884C\u6BD4\u8F83 equals()\u662F\u5BF9\u5B57\u7B26\u4E32\u7684\u5185\u5BB9\u8FDB\u884C\u6BD4\u8F83</li><li>==\u6307\u5F15\u7528\u662F\u5426\u76F8\u540C equals()\u6307\u7684\u662F\u503C\u662F\u5426\u76F8\u540C</li></ol><h2 id="concurrenthashmap" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap" aria-hidden="true">#</a> ConcurrentHashMap</h2><h3 id="_1-\u5B58\u50A8\u7ED3\u6784-1" tabindex="-1"><a class="header-anchor" href="#_1-\u5B58\u50A8\u7ED3\u6784-1" aria-hidden="true">#</a> 1. \u5B58\u50A8\u7ED3\u6784</h3><h4 id="jdk1-7" tabindex="-1"><a class="header-anchor" href="#jdk1-7" aria-hidden="true">#</a> JDK1.7</h4><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> hash<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">V</span> value<span class="token punctuation">;</span>
    <span class="token keyword">volatile</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>ConcurrentHashMap \u548C HashMap \u5B9E\u73B0\u4E0A\u7C7B\u4F3C\uFF0C\u6700\u4E3B\u8981\u7684\u5DEE\u522B\u662F ConcurrentHashMap \u91C7\u7528\u4E86\u5206\u6BB5\u9501(Segment)\uFF0C\u6BCF\u4E2A\u5206\u6BB5\u9501\u7EF4\u62A4\u7740\u51E0\u4E2A\u6876(HashEntry)\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u8BBF\u95EE\u4E0D\u540C\u5206\u6BB5\u9501\u4E0A\u7684\u6876\uFF0C\u4ECE\u800C\u4F7F\u5176\u5E76\u53D1\u5EA6\u66F4\u9AD8(\u5E76\u53D1\u5EA6\u5C31\u662F Segment \u7684\u4E2A\u6570)\u3002</p><p>Segment \u7EE7\u627F\u81EA ReentrantLock\u3002\u6240\u4EE5 Segment \u662F\u4E00\u79CD\u53EF\u91CD\u5165\u9501\uFF0C\u626E\u6F14\u9501\u7684\u89D2\u8272\u3002HashEntry \u7528\u4E8E\u5B58\u50A8\u952E\u503C\u5BF9\u6570\u636E</p><div align="center"><p><img src="`+b+`" alt="" loading="lazy"></p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">ReentrantLock</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">2249069246763182397L</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_SCAN_RETRIES <span class="token operator">=</span>
        <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">availableProcessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">64</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">transient</span> <span class="token keyword">volatile</span> <span class="token class-name">HashEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> table<span class="token punctuation">;</span>

    <span class="token keyword">transient</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>

    <span class="token keyword">transient</span> <span class="token keyword">int</span> modCount<span class="token punctuation">;</span>

    <span class="token keyword">transient</span> <span class="token keyword">int</span> threshold<span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token keyword">float</span> loadFactor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> segments<span class="token punctuation">;</span>
</code></pre></div><p>\u4E00\u4E2A ConcurrentHashMap \u91CC\u5305\u542B\u4E00\u4E2A Segment \u6570\u7EC4\u3002Segment \u7684\u7ED3\u6784\u548CHashMap\u7C7B\u4F3C\uFF0C\u662F\u4E00\u79CD\u6570\u7EC4\u548C\u94FE\u8868\u7ED3\u6784\uFF0C\u4E00\u4E2A Segment \u5305\u542B\u4E00\u4E2A HashEntry \u6570\u7EC4\uFF0C\u6BCF\u4E2A HashEntry \u662F\u4E00\u4E2A\u94FE\u8868\u7ED3\u6784\u7684\u5143\u7D20\uFF0C\u6BCF\u4E2A Segment \u5B88\u62A4\u7740\u4E00\u4E2AHashEntry\u6570\u7EC4\u91CC\u7684\u5143\u7D20\uFF0C\u5F53\u5BF9 HashEntry \u6570\u7EC4\u7684\u6570\u636E\u8FDB\u884C\u4FEE\u6539\u65F6\uFF0C\u5FC5\u987B\u9996\u5148\u83B7\u5F97\u5BF9\u5E94\u7684 Segment\u7684\u9501\u3002</p><p>\u9ED8\u8BA4\u7684\u5E76\u53D1\u7EA7\u522B\u4E3A 16\uFF0C\u4E5F\u5C31\u662F\u8BF4\u9ED8\u8BA4\u521B\u5EFA 16 \u4E2A Segment\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_CONCURRENCY_LEVEL <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
</code></pre></div><div align="center"><img src="https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/db808eff-31d7-4229-a4ad-b8ae71870a3a.png" width="550px"></div><br><h4 id="jdk1-8" tabindex="-1"><a class="header-anchor" href="#jdk1-8" aria-hidden="true">#</a> JDK1.8</h4><p>ConcurrentHashMap\u53D6\u6D88\u4E86Segment\u5206\u6BB5\u9501\uFF0C\u91C7\u7528CAS\u548Csynchronized\u6765\u4FDD\u8BC1\u5E76\u53D1\u5B89\u5168\u3002\u6570\u636E\u7ED3\u6784\u8DDFHashMap1.8\u7684\u7ED3\u6784\u7C7B\u4F3C\uFF0C\u6570\u7EC4+\u94FE\u8868/\u7EA2\u9ED1\u4E8C\u53C9\u6811\u3002Java 8\u5728\u94FE\u8868\u957F\u5EA6\u8D85\u8FC7\u4E00\u5B9A\u9608\u503C(8)\u65F6\u5C06\u94FE\u8868(\u5BFB\u5740\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(N))\u8F6C\u6362\u4E3A\u7EA2\u9ED1\u6811(\u5BFB\u5740\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(log(N)))</p><p>synchronized\u53EA\u9501\u5B9A\u5F53\u524D\u94FE\u8868\u6216\u7EA2\u9ED1\u4E8C\u53C9\u6811\u7684\u9996\u8282\u70B9\uFF0C\u8FD9\u6837\u53EA\u8981hash\u4E0D\u51B2\u7A81\uFF0C\u5C31\u4E0D\u4F1A\u4EA7\u751F\u5E76\u53D1\uFF0C\u6548\u7387\u53C8\u63D0\u5347N\u500D\u3002</p><div align="center"><p><img src="`+m+`" alt="" loading="lazy"></p></div><h3 id="_2-put-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_2-put-\u64CD\u4F5C" aria-hidden="true">#</a> 2. put \u64CD\u4F5C</h3><h4 id="jdk1-7-1" tabindex="-1"><a class="header-anchor" href="#jdk1-7-1" aria-hidden="true">#</a> JDK1.7</h4><p>\u5F53\u6267\u884Cput\u65B9\u6CD5\u63D2\u5165\u6570\u636E\u65F6\uFF0C\u6839\u636Ekey\u7684hash\u503C\uFF0C\u5728Segment\u6570\u7EC4\u4E2D\u627E\u5230\u76F8\u5E94\u7684\u4F4D\u7F6E\uFF0C\u5982\u679C\u76F8\u5E94\u4F4D\u7F6E\u7684Segment\u8FD8\u672A\u521D\u59CB\u5316\uFF0C\u5219\u901A\u8FC7CAS\u8FDB\u884C\u8D4B\u503C\uFF0C\u63A5\u7740\u6267\u884CSegment\u5BF9\u8C61\u7684put\u65B9\u6CD5\u901A\u8FC7\u52A0\u9501\u673A\u5236\u63D2\u5165\u6570\u636E\uFF0C\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><h4 id="jdk1-8-1" tabindex="-1"><a class="header-anchor" href="#jdk1-8-1" aria-hidden="true">#</a> JDK1.8</h4><p>\u5F53\u6267\u884Cput\u65B9\u6CD5\u63D2\u5165\u6570\u636E\u65F6\uFF0C\u6839\u636Ekey\u7684hash\u503C\uFF0C\u5728Node\u6570\u7EC4\u4E2D\u627E\u5230\u76F8\u5E94\u7684\u4F4D\u7F6E\uFF0C\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><ol><li>\u5982\u679C\u76F8\u5E94\u4F4D\u7F6E\u7684Node\u8FD8\u672A\u521D\u59CB\u5316\uFF0C\u5219\u901A\u8FC7CAS\u63D2\u5165\u76F8\u5E94\u7684\u6570\u636E\uFF1B</li><li>\u5982\u679C\u76F8\u5E94\u4F4D\u7F6E\u7684Node\u4E0D\u4E3A\u7A7A\uFF0C\u4E14\u5F53\u524D\u8BE5\u8282\u70B9\u4E0D\u5904\u4E8E\u79FB\u52A8\u72B6\u6001\uFF0C\u5219\u5BF9\u8BE5\u8282\u70B9\u52A0synchronized\u9501\uFF0C\u5982\u679C\u8BE5\u8282\u70B9\u7684hash\u4E0D\u5C0F\u4E8E0\uFF0C\u5219\u904D\u5386\u94FE\u8868\u66F4\u65B0\u8282\u70B9\u6216\u63D2\u5165\u65B0\u8282\u70B9\uFF1B</li><li>\u5982\u679C\u8BE5\u8282\u70B9\u662FTreeBin\u7C7B\u578B\u7684\u8282\u70B9\uFF0C\u8BF4\u660E\u662F\u7EA2\u9ED1\u6811\u7ED3\u6784\uFF0C\u5219\u901A\u8FC7putTreeVal\u65B9\u6CD5\u5F80\u7EA2\u9ED1\u6811\u4E2D\u63D2\u5165\u8282\u70B9\uFF1B</li><li>\u5982\u679CbinCount\u4E0D\u4E3A0\uFF0C\u8BF4\u660Eput\u64CD\u4F5C\u5BF9\u6570\u636E\u4EA7\u751F\u4E86\u5F71\u54CD\uFF0C\u5982\u679C\u5F53\u524D\u94FE\u8868\u7684\u4E2A\u6570\u8FBE\u52308\u4E2A\uFF0C\u5219\u901A\u8FC7treeifyBin\u65B9\u6CD5\u8F6C\u5316\u4E3A\u7EA2\u9ED1\u6811\uFF0C\u5982\u679ColdVal\u4E0D\u4E3A\u7A7A\uFF0C\u8BF4\u660E\u662F\u4E00\u6B21\u66F4\u65B0\u64CD\u4F5C\uFF0C\u6CA1\u6709\u5BF9\u5143\u7D20\u4E2A\u6570\u4EA7\u751F\u5F71\u54CD\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u65E7\u503C\uFF1B</li><li>\u5982\u679C\u63D2\u5165\u7684\u662F\u4E00\u4E2A\u65B0\u8282\u70B9\uFF0C\u5219\u6267\u884CaddCount()\u65B9\u6CD5\u5C1D\u8BD5\u66F4\u65B0\u5143\u7D20\u4E2A\u6570baseCount\uFF1B</li></ol><h3 id="_3-size-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_3-size-\u64CD\u4F5C" aria-hidden="true">#</a> 3. size \u64CD\u4F5C</h3><h4 id="jdk1-7-2" tabindex="-1"><a class="header-anchor" href="#jdk1-7-2" aria-hidden="true">#</a> JDK1.7</h4><p>\u6BCF\u4E2A Segment \u7EF4\u62A4\u4E86\u4E00\u4E2A count \u53D8\u91CF\u6765\u7EDF\u8BA1\u8BE5 Segment \u4E2D\u7684\u952E\u503C\u5BF9\u4E2A\u6570\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The number of elements. Accessed only either within locks
 * or among other volatile reads that maintain visibility.
 */</span>
<span class="token keyword">transient</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>
</code></pre></div><p>\u5728\u6267\u884C size \u64CD\u4F5C\u65F6\uFF0C\u9700\u8981\u904D\u5386\u6240\u6709 Segment \u7136\u540E\u628A count \u7D2F\u8BA1\u8D77\u6765\u3002</p><p>ConcurrentHashMap \u5728\u6267\u884C size \u64CD\u4F5C\u65F6\u5148\u5C1D\u8BD5\u4E0D\u52A0\u9501\uFF0C\u5982\u679C\u8FDE\u7EED\u4E24\u6B21\u4E0D\u52A0\u9501\u64CD\u4F5C\u5F97\u5230\u7684\u7ED3\u679C\u4E00\u81F4\uFF0C\u90A3\u4E48\u53EF\u4EE5\u8BA4\u4E3A\u8FD9\u4E2A\u7ED3\u679C\u662F\u6B63\u786E\u7684\u3002</p><p>\u5C1D\u8BD5\u6B21\u6570\u4F7F\u7528 RETRIES_BEFORE_LOCK \u5B9A\u4E49\uFF0C\u8BE5\u503C\u4E3A 2\uFF0Cretries \u521D\u59CB\u503C\u4E3A -1\uFF0C\u56E0\u6B64\u5C1D\u8BD5\u6B21\u6570\u4E3A 3\u3002</p><p>\u5982\u679C\u5C1D\u8BD5\u7684\u6B21\u6570\u8D85\u8FC7 3 \u6B21\uFF0C\u5C31\u9700\u8981\u5BF9\u6BCF\u4E2A Segment \u52A0\u9501\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> RETRIES_BEFORE_LOCK <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Try a few times to get accurate count. On failure due to</span>
        <span class="token comment">// continuous async changes in table, resort to locking.</span>
        <span class="token keyword">final</span> <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> segments <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>segments<span class="token punctuation">;</span>
        <span class="token keyword">int</span> size<span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> overflow<span class="token punctuation">;</span> <span class="token comment">// true if size overflows 32 bits</span>
        <span class="token keyword">long</span> sum<span class="token punctuation">;</span>         <span class="token comment">// sum of modCounts</span>
        <span class="token keyword">long</span> last <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>   <span class="token comment">// previous sum</span>
        <span class="token keyword">int</span> retries <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// first iteration isn&#39;t retry</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u8D85\u8FC7\u5C1D\u8BD5\u6B21\u6570\uFF0C\u5219\u5BF9\u6BCF\u4E2A Segment \u52A0\u9501</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>retries<span class="token operator">++</span> <span class="token operator">==</span> RETRIES_BEFORE_LOCK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> segments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>
                        <span class="token function">ensureSegment</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// force creation</span>
                <span class="token punctuation">}</span>
                sum <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
                size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                overflow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> segments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Segment</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> seg <span class="token operator">=</span> <span class="token function">segmentAt</span><span class="token punctuation">(</span>segments<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>seg <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        sum <span class="token operator">+=</span> seg<span class="token punctuation">.</span>modCount<span class="token punctuation">;</span>
                        <span class="token keyword">int</span> c <span class="token operator">=</span> seg<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token punctuation">(</span>size <span class="token operator">+=</span> c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                            overflow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u8FDE\u7EED\u4E24\u6B21\u5F97\u5230\u7684\u7ED3\u679C\u4E00\u81F4\uFF0C\u5219\u8BA4\u4E3A\u8FD9\u4E2A\u7ED3\u679C\u662F\u6B63\u786E\u7684</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> last<span class="token punctuation">)</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
                last <span class="token operator">=</span> sum<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>retries <span class="token operator">&gt;</span> RETRIES_BEFORE_LOCK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> segments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>
                    <span class="token function">segmentAt</span><span class="token punctuation">(</span>segments<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> overflow <span class="token operator">?</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE <span class="token operator">:</span> size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><h4 id="jdk1-8-2" tabindex="-1"><a class="header-anchor" href="#jdk1-8-2" aria-hidden="true">#</a> JDK1.8</h4><ul><li>\u4F7F\u7528\u4E00\u4E2Avolatile\u7C7B\u578B\u7684\u53D8\u91CFbaseCount\u8BB0\u5F55\u5143\u7D20\u7684\u4E2A\u6570\uFF0C\u5F53\u63D2\u5165\u65B0\u6570\u636E\u6216\u5219\u5220\u9664\u6570\u636E\u65F6\uFF0C\u4F1A\u901A\u8FC7addCount()\u65B9\u6CD5\u66F4\u65B0baseCount <ol><li>\u521D\u59CB\u5316\u65F6counterCells\u4E3A\u7A7A\uFF0C\u5728\u5E76\u53D1\u91CF\u5F88\u9AD8\u65F6\uFF0C\u5982\u679C\u5B58\u5728\u4E24\u4E2A\u7EBF\u7A0B\u540C\u65F6\u6267\u884CCAS\u4FEE\u6539baseCount\u503C\uFF0C\u5219\u5931\u8D25\u7684\u7EBF\u7A0B\u4F1A\u7EE7\u7EED\u6267\u884C\u65B9\u6CD5\u4F53\u4E2D\u7684\u903B\u8F91\uFF0C\u4F7F\u7528CounterCell\u8BB0\u5F55\u5143\u7D20\u4E2A\u6570\u7684\u53D8\u5316\uFF1B</li><li>\u5982\u679CCounterCell\u6570\u7EC4counterCells\u4E3A\u7A7A\uFF0C\u8C03\u7528fullAddCount()\u65B9\u6CD5\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u5E76\u63D2\u5165\u5BF9\u5E94\u7684\u8BB0\u5F55\u6570\uFF0C\u901A\u8FC7CAS\u8BBE\u7F6EcellsBusy\u5B57\u6BB5\uFF0C\u53EA\u6709\u8BBE\u7F6E\u6210\u529F\u7684\u7EBF\u7A0B\u624D\u80FD\u521D\u59CB\u5316CounterCell\u6570\u7EC4</li><li>\u5982\u679C\u901A\u8FC7CAS\u8BBE\u7F6EcellsBusy\u5B57\u6BB5\u5931\u8D25\u7684\u8BDD\uFF0C\u5219\u7EE7\u7EED\u5C1D\u8BD5\u901A\u8FC7CAS\u4FEE\u6539baseCount\u5B57\u6BB5\uFF0C\u5982\u679C\u4FEE\u6539baseCount\u5B57\u6BB5\u6210\u529F\u7684\u8BDD\uFF0C\u5C31\u9000\u51FA\u5FAA\u73AF\uFF0C\u5426\u5219\u7EE7\u7EED\u5FAA\u73AF\u63D2\u5165CounterCell\u5BF9\u8C61</li></ol></li><li>size\u5B9E\u73B0\u6BD41.7\u7B80\u5355\u591A\uFF0C\u56E0\u4E3A\u5143\u7D20\u4E2A\u6570\u4FDD\u5B58baseCount\u4E2D\uFF0C\u90E8\u5206\u5143\u7D20\u7684\u53D8\u5316\u4E2A\u6570\u4FDD\u5B58\u5728CounterCell\u6570\u7EC4\u4E2D\uFF0C\u901A\u8FC7\u7D2F\u52A0baseCount\u548CCounterCell\u6570\u7EC4\u4E2D\u7684\u6570\u91CF\uFF0C\u5373\u53EF\u5F97\u5230\u5143\u7D20\u7684\u603B\u4E2A\u6570</li></ul><h3 id="_4-\u548C-hashtable-\u7684\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#_4-\u548C-hashtable-\u7684\u5BF9\u6BD4" aria-hidden="true">#</a> 4. \u548C Hashtable \u7684\u5BF9\u6BD4</h3><ul><li>\u5E95\u5C42\u6570\u636E\u7ED3\u6784\uFF1A JDK1.7\u7684 ConcurrentHashMap \u5E95\u5C42\u91C7\u7528 \u5206\u6BB5\u7684\u6570\u7EC4+\u94FE\u8868 \u5B9E\u73B0\uFF0CJDK1.8 \u91C7\u7528\u7684\u6570\u636E\u7ED3\u6784\u8DDFHashMap1.8\u7684\u7ED3\u6784\u4E00\u6837\uFF0C\u6570\u7EC4+\u94FE\u8868/\u7EA2\u9ED1\u4E8C\u53C9\u6811\u3002Hashtable \u548C JDK1.8 \u4E4B\u524D\u7684 HashMap \u7684\u5E95\u5C42\u6570\u636E\u7ED3\u6784\u7C7B\u4F3C\u90FD\u662F\u91C7\u7528 \u6570\u7EC4+\u94FE\u8868 \u7684\u5F62\u5F0F\uFF0C\u6570\u7EC4\u662F HashMap \u7684\u4E3B\u4F53\uFF0C\u94FE\u8868\u5219\u662F\u4E3B\u8981\u4E3A\u4E86\u89E3\u51B3\u54C8\u5E0C\u51B2\u7A81\u800C\u5B58\u5728\u7684\uFF1B</li><li>\u5B9E\u73B0\u7EBF\u7A0B\u5B89\u5168\u7684\u65B9\u5F0F(\u91CD\u8981)\uFF1A <ul><li>\u5728JDK1.7\u7684\u65F6\u5019\uFF0CConcurrentHashMap(\u5206\u6BB5\u9501) \u5BF9\u6574\u4E2A\u6876\u6570\u7EC4\u8FDB\u884C\u4E86\u5206\u5272\u5206\u6BB5(Segment)\uFF0C\u6BCF\u4E00\u628A\u9501\u53EA\u9501\u5BB9\u5668\u5176\u4E2D\u4E00\u90E8\u5206\u6570\u636E\uFF0C\u591A\u7EBF\u7A0B\u8BBF\u95EE\u5BB9\u5668\u91CC\u4E0D\u540C\u6570\u636E\u6BB5\u7684\u6570\u636E\uFF0C\u5C31\u4E0D\u4F1A\u5B58\u5728\u9501\u7ADE\u4E89\uFF0C\u63D0\u9AD8\u5E76\u53D1\u8BBF\u95EE\u7387\u3002 \u5230\u4E86 JDK1.8 \u7684\u65F6\u5019\u5DF2\u7ECF\u6452\u5F03\u4E86Segment\u7684\u6982\u5FF5\uFF0C\u800C\u662F\u76F4\u63A5\u7528 Node \u6570\u7EC4+\u94FE\u8868+\u7EA2\u9ED1\u6811\u7684\u6570\u636E\u7ED3\u6784\u6765\u5B9E\u73B0\uFF0C\u5E76\u53D1\u63A7\u5236\u4F7F\u7528 synchronized \u548C CAS \u6765\u64CD\u4F5C\u3002(JDK1.6\u4EE5\u540E \u5BF9 synchronized\u9501\u505A\u4E86\u5F88\u591A\u4F18\u5316) \u6574\u4E2A\u770B\u8D77\u6765\u5C31\u50CF\u662F\u4F18\u5316\u8FC7\u4E14\u7EBF\u7A0B\u5B89\u5168\u7684 HashMap\uFF0C\u867D\u7136\u5728JDK1.8\u4E2D\u8FD8\u80FD\u770B\u5230 Segment \u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F46\u662F\u5DF2\u7ECF\u7B80\u5316\u4E86\u5C5E\u6027\uFF0C\u53EA\u662F\u4E3A\u4E86\u517C\u5BB9\u65E7\u7248\u672C\uFF1B</li><li>Hashtable(\u540C\u4E00\u628A\u9501) :\u4F7F\u7528 synchronized \u6765\u4FDD\u8BC1\u7EBF\u7A0B\u5B89\u5168\uFF0C\u6548\u7387\u975E\u5E38\u4F4E\u4E0B\u3002\u5F53\u4E00\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u540C\u6B65\u65B9\u6CD5\u65F6\uFF0C\u5176\u4ED6\u7EBF\u7A0B\u4E5F\u8BBF\u95EE\u540C\u6B65\u65B9\u6CD5\uFF0C\u53EF\u80FD\u4F1A\u8FDB\u5165\u963B\u585E\u6216\u8F6E\u8BE2\u72B6\u6001\uFF0C\u5982\u4F7F\u7528 put \u6DFB\u52A0\u5143\u7D20\uFF0C\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u4E0D\u80FD\u4F7F\u7528 put \u6DFB\u52A0\u5143\u7D20\uFF0C\u4E5F\u4E0D\u80FD\u4F7F\u7528 get\uFF0C\u7ADE\u4E89\u4F1A\u8D8A\u6765\u8D8A\u6FC0\u70C8\u6548\u7387\u8D8A\u4F4E\u3002</li></ul></li></ul><h2 id="linkedhashmap" tabindex="-1"><a class="header-anchor" href="#linkedhashmap" aria-hidden="true">#</a> LinkedHashMap</h2><h3 id="\u5B58\u50A8\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a> \u5B58\u50A8\u7ED3\u6784</h3><p>\u7EE7\u627F\u81EA HashMap\uFF0C\u56E0\u6B64\u5177\u6709\u548C HashMap \u4E00\u6837\u7684\u5FEB\u901F\u67E5\u627E\u7279\u6027\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u5185\u90E8\u7EF4\u62A4\u4E86\u4E00\u4E2A\u53CC\u5411\u94FE\u8868\uFF0C\u7528\u6765\u7EF4\u62A4\u63D2\u5165\u987A\u5E8F\u6216\u8005 LRU \u987A\u5E8F\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * The head (eldest) of the doubly linked list.
 */</span>
<span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> head<span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * The tail (youngest) of the doubly linked list.
 */</span>
<span class="token keyword">transient</span> <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> tail<span class="token punctuation">;</span>
</code></pre></div><p>accessOrder \u51B3\u5B9A\u4E86\u987A\u5E8F\uFF0C\u9ED8\u8BA4\u4E3A false\uFF0C\u6B64\u65F6\u7EF4\u62A4\u7684\u662F\u63D2\u5165\u987A\u5E8F\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">boolean</span> accessOrder<span class="token punctuation">;</span>
</code></pre></div><p>LinkedHashMap \u6700\u91CD\u8981\u7684\u662F\u4EE5\u4E0B\u7528\u4E8E\u7EF4\u62A4\u987A\u5E8F\u7684\u51FD\u6570\uFF0C\u5B83\u4EEC\u4F1A\u5728 put\u3001get \u7B49\u65B9\u6CD5\u4E2D\u8C03\u7528\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token keyword">void</span> <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
</code></pre></div><h3 id="afternodeaccess" tabindex="-1"><a class="header-anchor" href="#afternodeaccess" aria-hidden="true">#</a> afterNodeAccess()</h3><p>\u5F53\u4E00\u4E2A\u8282\u70B9\u88AB\u8BBF\u95EE\u65F6\uFF0C\u5982\u679C accessOrder \u4E3A true\uFF0C\u5219\u4F1A\u5C06\u8BE5\u8282\u70B9\u79FB\u5230\u94FE\u8868\u5C3E\u90E8\u3002\u4E5F\u5C31\u662F\u8BF4\u6307\u5B9A\u4E3A LRU \u987A\u5E8F\u4E4B\u540E\uFF0C\u5728\u6BCF\u6B21\u8BBF\u95EE\u4E00\u4E2A\u8282\u70B9\u65F6\uFF0C\u4F1A\u5C06\u8FD9\u4E2A\u8282\u70B9\u79FB\u5230\u94FE\u8868\u5C3E\u90E8\uFF0C\u4FDD\u8BC1\u94FE\u8868\u5C3E\u90E8\u662F\u6700\u8FD1\u8BBF\u95EE\u7684\u8282\u70B9\uFF0C\u90A3\u4E48\u94FE\u8868\u9996\u90E8\u5C31\u662F\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u8282\u70B9\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">afterNodeAccess</span><span class="token punctuation">(</span><span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// move node to last</span>
    <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> last<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>accessOrder <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>last <span class="token operator">=</span> tail<span class="token punctuation">)</span> <span class="token operator">!=</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span>
            <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>e<span class="token punctuation">,</span> b <span class="token operator">=</span> p<span class="token punctuation">.</span>before<span class="token punctuation">,</span> a <span class="token operator">=</span> p<span class="token punctuation">.</span>after<span class="token punctuation">;</span>
        p<span class="token punctuation">.</span>after <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            head <span class="token operator">=</span> a<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            b<span class="token punctuation">.</span>after <span class="token operator">=</span> a<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            a<span class="token punctuation">.</span>before <span class="token operator">=</span> b<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            last <span class="token operator">=</span> b<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>last <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            head <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            p<span class="token punctuation">.</span>before <span class="token operator">=</span> last<span class="token punctuation">;</span>
            last<span class="token punctuation">.</span>after <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        tail <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="afternodeinsertion" tabindex="-1"><a class="header-anchor" href="#afternodeinsertion" aria-hidden="true">#</a> afterNodeInsertion()</h3><p>\u5728 put \u7B49\u64CD\u4F5C\u4E4B\u540E\u6267\u884C\uFF0C\u5F53 removeEldestEntry() \u65B9\u6CD5\u8FD4\u56DE true \u65F6\u4F1A\u79FB\u9664\u6700\u665A\u7684\u8282\u70B9\uFF0C\u4E5F\u5C31\u662F\u94FE\u8868\u9996\u90E8\u8282\u70B9 first\u3002</p><p>evict \u53EA\u6709\u5728\u6784\u5EFA Map \u7684\u65F6\u5019\u624D\u4E3A false\uFF0C\u5728\u8FD9\u91CC\u4E3A true\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">afterNodeInsertion</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> evict<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// possibly remove eldest</span>
    <span class="token class-name">LinkedHashMap<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>evict <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>first <span class="token operator">=</span> head<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token function">removeEldestEntry</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">K</span> key <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
        <span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>removeEldestEntry() \u9ED8\u8BA4\u4E3A false\uFF0C\u5982\u679C\u9700\u8981\u8BA9\u5B83\u4E3A true\uFF0C\u9700\u8981\u7EE7\u627F LinkedHashMap \u5E76\u4E14\u8986\u76D6\u8FD9\u4E2A\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u8FD9\u5728\u5B9E\u73B0 LRU \u7684\u7F13\u5B58\u4E2D\u7279\u522B\u6709\u7528\uFF0C\u901A\u8FC7\u79FB\u9664\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u8282\u70B9\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u7F13\u5B58\u7A7A\u95F4\u8DB3\u591F\uFF0C\u5E76\u4E14\u7F13\u5B58\u7684\u6570\u636E\u90FD\u662F\u70ED\u70B9\u6570\u636E\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">removeEldestEntry</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> eldest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="lru-\u7F13\u5B58" tabindex="-1"><a class="header-anchor" href="#lru-\u7F13\u5B58" aria-hidden="true">#</a> LRU \u7F13\u5B58</h3><p>\u4EE5\u4E0B\u662F\u4F7F\u7528 LinkedHashMap \u5B9E\u73B0\u7684\u4E00\u4E2A LRU \u7F13\u5B58\uFF1A</p><ul><li>\u8BBE\u5B9A\u6700\u5927\u7F13\u5B58\u7A7A\u95F4 MAX_ENTRIES \u4E3A 3\uFF1B</li><li>\u4F7F\u7528 LinkedHashMap \u7684\u6784\u9020\u51FD\u6570\u5C06 accessOrder \u8BBE\u7F6E\u4E3A true\uFF0C\u5F00\u542F LRU \u987A\u5E8F\uFF1B</li><li>\u8986\u76D6 removeEldestEntry() \u65B9\u6CD5\u5B9E\u73B0\uFF0C\u5728\u8282\u70B9\u591A\u4E8E MAX_ENTRIES \u5C31\u4F1A\u5C06\u6700\u8FD1\u6700\u4E45\u672A\u4F7F\u7528\u7684\u6570\u636E\u79FB\u9664\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">LRUCache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_ENTRIES <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">removeEldestEntry</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span> eldest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> MAX_ENTRIES<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">LRUCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>MAX_ENTRIES<span class="token punctuation">,</span> <span class="token number">0.75f</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">LRUCache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LRUCache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cache<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="language-html ext-html"><pre class="language-html"><code>[3, 1, 4]
</code></pre></div><h2 id="weakhashmap" tabindex="-1"><a class="header-anchor" href="#weakhashmap" aria-hidden="true">#</a> WeakHashMap</h2><h3 id="\u5B58\u50A8\u7ED3\u6784-1" tabindex="-1"><a class="header-anchor" href="#\u5B58\u50A8\u7ED3\u6784-1" aria-hidden="true">#</a> \u5B58\u50A8\u7ED3\u6784</h3><p>WeakHashMap \u7684 Entry \u7EE7\u627F\u81EA WeakReference\uFF0C\u88AB WeakReference \u5173\u8054\u7684\u5BF9\u8C61\u5728\u4E0B\u4E00\u6B21\u5783\u573E\u56DE\u6536\u65F6\u4F1A\u88AB\u56DE\u6536\u3002</p><p>WeakHashMap \u4E3B\u8981\u7528\u6765\u5B9E\u73B0\u7F13\u5B58\uFF0C\u901A\u8FC7\u4F7F\u7528 WeakHashMap \u6765\u5F15\u7528\u7F13\u5B58\u5BF9\u8C61\uFF0C\u7531 JVM \u5BF9\u8FD9\u90E8\u5206\u7F13\u5B58\u8FDB\u884C\u56DE\u6536\u3002</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">WeakReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="concurrentcache" tabindex="-1"><a class="header-anchor" href="#concurrentcache" aria-hidden="true">#</a> ConcurrentCache</h3><p>Tomcat \u4E2D\u7684 ConcurrentCache \u4F7F\u7528\u4E86 WeakHashMap \u6765\u5B9E\u73B0\u7F13\u5B58\u529F\u80FD\u3002</p><p>ConcurrentCache \u91C7\u53D6\u7684\u662F\u5206\u4EE3\u7F13\u5B58\uFF1A</p><ul><li>\u7ECF\u5E38\u4F7F\u7528\u7684\u5BF9\u8C61\u653E\u5165 eden \u4E2D\uFF0Ceden \u4F7F\u7528 ConcurrentHashMap \u5B9E\u73B0\uFF0C\u4E0D\u7528\u62C5\u5FC3\u4F1A\u88AB\u56DE\u6536(\u4F0A\u7538\u56ED)\uFF1B</li><li>\u4E0D\u5E38\u7528\u7684\u5BF9\u8C61\u653E\u5165 longterm\uFF0Clongterm \u4F7F\u7528 WeakHashMap \u5B9E\u73B0\uFF0C\u8FD9\u4E9B\u8001\u5BF9\u8C61\u4F1A\u88AB\u5783\u573E\u6536\u96C6\u5668\u56DE\u6536\u3002</li><li>\u5F53\u8C03\u7528 get() \u65B9\u6CD5\u65F6\uFF0C\u4F1A\u5148\u4ECE eden \u533A\u83B7\u53D6\uFF0C\u5982\u679C\u6CA1\u6709\u627E\u5230\u7684\u8BDD\u518D\u5230 longterm \u83B7\u53D6\uFF0C\u5F53\u4ECE longterm \u83B7\u53D6\u5230\u5C31\u628A\u5BF9\u8C61\u653E\u5165 eden \u4E2D\uFF0C\u4ECE\u800C\u4FDD\u8BC1\u7ECF\u5E38\u88AB\u8BBF\u95EE\u7684\u8282\u70B9\u4E0D\u5BB9\u6613\u88AB\u56DE\u6536\u3002</li><li>\u5F53\u8C03\u7528 put() \u65B9\u6CD5\u65F6\uFF0C\u5982\u679C eden \u7684\u5927\u5C0F\u8D85\u8FC7\u4E86 size\uFF0C\u90A3\u4E48\u5C31\u5C06 eden \u4E2D\u7684\u6240\u6709\u5BF9\u8C61\u90FD\u653E\u5165 longterm \u4E2D\uFF0C\u5229\u7528\u865A\u62DF\u673A\u56DE\u6536\u6389\u4E00\u90E8\u5206\u4E0D\u7ECF\u5E38\u4F7F\u7528\u7684\u5BF9\u8C61\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ConcurrentCache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> eden<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> longterm<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ConcurrentCache</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>eden <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>longterm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">K</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">V</span> v <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>eden<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            v <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>longterm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>eden<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> k<span class="token punctuation">,</span> <span class="token class-name">V</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eden<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>longterm<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>eden<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>eden<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>eden<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h1 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h1>`,275),g=n("li",null,"Eckel B. Java \u7F16\u7A0B\u601D\u60F3 [M]. \u673A\u68B0\u5DE5\u4E1A\u51FA\u7248\u793E, 2002.",-1),w={href:"https://www.w3resource.com/java-tutorial/java-collections.php",target:"_blank",rel:"noopener noreferrer"},f=p("Java Collection Framework"),v={href:"https://openhome.cc/Gossip/DesignPattern/IteratorPattern.htm",target:"_blank",rel:"noopener noreferrer"},E=p("Iterator \u6A21\u5F0F"),A={href:"https://tech.meituan.com/java_hashmap.html",target:"_blank",rel:"noopener noreferrer"},j=p("Java 8 \u7CFB\u5217\u4E4B\u91CD\u65B0\u8BA4\u8BC6 HashMap"),C={href:"http://javarevisited.blogspot.hk/2010/10/difference-between-hashmap-and.html",target:"_blank",rel:"noopener noreferrer"},x=p("What is difference between HashMap and Hashtable in Java?"),_={href:"http://www.zhangchangle.com/2018/02/07/Java%E9%9B%86%E5%90%88%E4%B9%8BHashMap/",target:"_blank",rel:"noopener noreferrer"},M=p("Java \u96C6\u5408\u4E4B HashMap"),L={href:"http://www.programering.com/a/MDO3QDNwATM.html",target:"_blank",rel:"noopener noreferrer"},H=p("The principle of ConcurrentHashMap analysis"),S={href:"https://www.ibm.com/developerworks/cn/java/java-lo-concurrenthashmap/",target:"_blank",rel:"noopener noreferrer"},V=p("\u63A2\u7D22 ConcurrentHashMap \u9AD8\u5E76\u53D1\u6027\u7684\u5B9E\u73B0\u673A\u5236"),I={href:"https://www.jianshu.com/p/75adf47958a7",target:"_blank",rel:"noopener noreferrer"},D=p("HashMap \u76F8\u5173\u9762\u8BD5\u9898\u53CA\u5176\u89E3\u7B54"),O={href:"http://wiki.jikexueyuan.com/project/java-enhancement/java-thirtysix.html",target:"_blank",rel:"noopener noreferrer"},T=p("Java \u96C6\u5408\u7EC6\u8282(\u4E8C)\uFF1AasList \u7684\u7F3A\u9677"),K={href:"http://javaconceptoftheday.com/java-collection-framework-linkedlist-class/",target:"_blank",rel:"noopener noreferrer"},B=p("Java Collection Framework \u2013 The LinkedList Class");function z(R,N){const s=e("ExternalLinkIcon");return u(),o(c,null,[y,n("ul",null,[g,n("li",null,[n("a",w,[f,a(s)])]),n("li",null,[n("a",v,[E,a(s)])]),n("li",null,[n("a",A,[j,a(s)])]),n("li",null,[n("a",C,[x,a(s)])]),n("li",null,[n("a",_,[M,a(s)])]),n("li",null,[n("a",L,[H,a(s)])]),n("li",null,[n("a",S,[V,a(s)])]),n("li",null,[n("a",I,[D,a(s)])]),n("li",null,[n("a",O,[T,a(s)])]),n("li",null,[n("a",K,[B,a(s)])])])],64)}var J=t(h,[["render",z],["__file","Java\u5BB9\u5668.html.vue"]]);export{J as default};
